{"version":3,"sources":["../../shared/dist/index.js","../../shared/dist/compilerVersions.generated.js","../../shared/dist/constants.js","../../shared/dist/types.js","constants/actions.ts","actions/index.tsx","utils/ArrayUtils.ts","utils/assertNever.ts","utils/Box.ts","utils/createHashSet.ts","utils/EnumUtils.ts","utils/getSyntaxKindName.ts","utils/LineAndColumnComputer.ts","utils/createLineNumberAndColumns.ts","utils/sleep.ts","utils/StateSaver.ts","utils/UrlSaver.ts","compiler/compilerVersions.generated.ts","compiler/convertOptions.ts","compiler/createSourceFile.ts","compiler/getChildrenFunction.ts","compiler/getCompilerApi.ts","compiler/getStartSafe.ts","compiler/getFactoryCodeGenerator.ts","reducers/index.tsx","types/index.tsx","AppContext.tsx","components/Spinner.tsx","components/CodeEditor.tsx","components/ErrorBoundary.tsx","components/FactoryCodeEditor.tsx","components/ExternalLink.tsx","components/Options.tsx","hooks/useOnClickOutside.ts","components/LazyTreeView.tsx","components/ToolTippedText.tsx","components/PropertiesViewer.tsx","utils/getEnumFlagNames.ts","components/TreeViewer.tsx","App.tsx","compiler/getDescendantAtRange.ts","index.tsx"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__exportStar","exports","p","prototype","hasOwnProperty","call","__importStar","mod","__esModule","result","constants","require","compilerVersionCollection","version","packageName","general","css","options","id","buttonId","compilerVersionSelectionId","treeModeId","bindingEnabledId","showFactoryCodeId","showInternalsId","mainCodeEditor","factoryCodeEditor","treeViewer","selectedNodeClass","properties","node","type","symbol","signature","sourceFileRefreshDelay","TreeMode","SET_CODE","SET_API_LOADING_STATE","REFRESH_SOURCEFILE","SET_SELECTED_NODE","SET_OPTIONS","setApiLoadingState","loadingState","refreshSourceFile","api","ArrayUtils","iterator","array","next","done","push","items","compareTo","top","length","bottom","mid","Math","floor","comparisonResult","assertNever","message","Error","Box","EnumUtils","e","keys","filter","map","values","getNames","name","key","parseInt","names","getSyntaxKindName","kind","kindCache","tsAstViewer","kindNames","SyntaxKind","isNaN","getKindNamesForApi","getKindCacheForApi","LineAndColumnComputer","text","lineInfos","lastPos","i","pushLineInfo","pos","number","createLineNumberAndColumns","lineNumber","column","index","binarySearch","info","lineInfo","min","line","lastLineInfo","sleep","timeoutMs","Promise","resolve","setTimeout","StateSaver","localStorage","window","_cachedState","treeMode","forEachChild","showFactoryCode","showInternals","getItem","_stateKey","data","transformToVersion2","transformToVersion3","transform","JSON","parse","defaultState","verifyData","err","console","error","sessionState","setItem","stringify","getChildren","UrlSaver","document","location","hash","startsWith","code","replace","trim","decompressFromEncodedURIComponent","updateLocationHash","locationHash","history","replaceState","compressToEncodedURIComponent","importCompilerApi","a","importLibFiles","generateFactoryCode","convertOptions","apiFrom","apiTo","scriptTarget","ScriptTarget","scriptKind","ScriptKind","Latest","TSX","createSourceFile","bindingResult","filePath","TS","JS","JSX","External","Deferred","Unknown","getExtension","sourceFile","bindingTools","strict","target","allowJs","module","ModuleKind","ES2015","files","cachedSourceFiles","compilerHost","getSourceFile","fileName","languageVersion","onError","getDefaultLibFileName","defaultLibOptions","writeFile","getCurrentDirectory","getDirectories","path","fileExists","readFile","getFullText","getCanonicalFileName","useCaseSensitiveFileNames","getNewLine","getEnvironmentVariable","program","createProgram","typeChecker","getTypeChecker","getBindingResult","getChildrenFunction","mode","nodes","child","compilerTypes","compilerTypesLoaded","getCompilerApi","loadCompilerApi","catch","hasLoadedCompilerApi","getLibSourceFiles","libFiles","libFile","libFilesPromise","compilerApiPromise","getStartSafe","jsDocs","jsDoc","getStart","cache","hasLoadedVersion","getFactoryCodeGenerator","getGenerateFactoryCodeFunction","then","ApiLoadingState","urlSaver","appReducer","state","action","actionNames","compiler","selectedNode","apiLoadingState","newState","compilerPackageName","fillNewSourceFileState","updateUrl","stateSaver","log","AppContext","React","createContext","AppContextProvider","children","useReducer","Loading","getUrlCode","bindingEnabled","dispatch","useEffect","abortController","AbortController","updateSourceFile","signal","abort","abortSignal","changeLoadingState","actions","aborted","Loaded","savedState","set","windowAny","ts","checker","tryGet","getTypeAtLocation","getSymbolAtLocation","getSignatureFromDeclaration","getValue","Provider","Spinner","props","backgroundColor","className","style","color","loading","size","CodeEditor","editor","outerContainerRef","createRef","disposables","deltaDecorations","lineAndColumnComputer","position","editorComponent","editorDidMount","bind","reactMonacoEditorPromise","monacoEditor","languages","typescript","typescriptDefaults","setCompilerOptions","ESNext","allowNonTsExtensions","setState","default","updateHighlight","ref","showInfo","classNames","join","getClassNames","getEditor","getInfo","dispose","highlight","range","startInfo","getNumberAndColumnFromPos","start","endInfo","end","startLineNumber","startColumn","endLineNumber","endColumn","getRange","revealRangeInCenterIfOutsideViewport","width","height","theme","language","onChange","automaticLayout","renderWhitespace","renderWhiteSpace","minimap","enabled","readOnly","quickSuggestions","occurrencesHighlight","selectionHighlight","codeLens","suggestOnTriggerCharacters","monaco","getModel","setEOL","EndOfLineSequence","LF","onDidChangeCursorPosition","editorModel","getOffsetAt","onMouseDown","onClick","getPosition","getPosFromLineAndColumn","lastHeight","lastWidth","intervalId","setInterval","containerElement","current","offsetWidth","offsetHeight","layout","clearInterval","Component","ErrorBoundary","lastResetHash","hasError","errorInfo","getResetHash","getHasError","whiteSpace","toString","componentStack","hasHashChanged","FactoryCodeEditor","useState","factoryCodeGenerator","setFactoryCodeGenerator","getText","getFactoryCodeEditorText","ExternalLink","href","url","rel","Options","containerRef","useRef","showOptionsMenu","setShowOptionsMenu","handler","memoizedHandler","useCallback","listener","event","contains","addEventListener","removeEventListener","useOnClickOutside","role","hidden","selection","Option","getCompilerVersions","getTreeMode","getEnumOption","getScriptKind","getScriptTarget","checked","getBindingEnabled","getShowFactoryCode","getShowInternals","prefix","currentValue","getNamesForValues","namesForValue","LazyTreeView","defaultCollapsed","isCollapsed","setIsCollapsed","nodeLabel","collapsed","ToolTippedText","isHovering","setIsHovering","onMouseEnter","onMouseHoverChanged","onMouseLeave","PropertiesViewer","publicApiInfo","setPublicApiInfo","getPublicApiInfo","context","getForSelectedNode","getBindingSection","getForType","getForSymbol","getForSignature","getForFlowNode","getProperties","getMethodElement","getChildCount","getFullStart","getFullWidth","getWidth","getLeadingTriviaWidth","substring","getEnd","getForCommentRanges","getLeadingCommentRanges","getTrailingCommentRanges","getTextDiv","commentRanges","getArrayDiv","SourceFile","getOrReturnError","getTreeView","typeToString","getTypeToString","getName","getSymbolName","nodeWithFlowNode","flowNode","getFunc","obj","label","keyInfo","getObjectKeyInfo","parent","element","Array","isTsNode","getTreeNode","getNodeDiv","isMap","entries","from","getMapDiv","getObjectDiv","getCustomValue","getEnumFlagElement","NodeFlags","isTsType","ObjectFlags","TypeFlags","isTsSymbol","SymbolFlags","antecedents","antecedent","isFlowNode","FlowFlags","CircularJson","getCustomValueDiv","permission","labelName","getLabelName","getKey","appendName","isTsSignature","objType","title","getKeyPermission","kv","nodeDisallowedKeys","Set","typeDisallowedKeys","has","kindName","hasInProperties","nodePropertiesBySyntaxKind","typeProperties","signatureProperties","symbolProperties","publicApiProperties","getBaseTypes","getDeclarations","declaration","enumObj","flags","matchedFlags","f","indexOf","getEnumFlagNames","TreeViewer","onSelectNode","useLayoutEffect","getElementById","querySelector","selectedRect","getBoundingClientRect","treeViewerRect","y","scrollIntoView","block","inline","renderNode","n","App","useContext","useAppContext","split","defaultSize","allowResize","minSize","innerHeight","getCodeEditor","getFactoryCodeEditor","descendant","compilerApi","syntaxKinds","bestMatch","searchDescendants","nodeEnd","SyntaxList","childStart","isEndOfFileToken","EndOfFileToken","hasSameStart","getDescendantAtRange","getCodeHighlightRange","codeEditorDidMount","getCodeEditorArea","getCompilerDependentPanes","focus","setMonacoEditorText","executeEdits","getFullModelRange","ReactDOM","render"],"mappings":"oHACA,IAAIA,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BJ,OAAOO,eAAeL,EAAGG,EAAI,CAAEG,YAAY,EAAMC,IAAK,WAAa,OAAON,EAAEC,OAC1E,SAASF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,KAEVM,EAAsBX,MAAQA,KAAKW,qBAAwBV,OAAOC,OAAU,SAASC,EAAGS,GACxFX,OAAOO,eAAeL,EAAG,UAAW,CAAEM,YAAY,EAAMI,MAAOD,KAC9D,SAAST,EAAGS,GACbT,EAAC,QAAcS,IAEfE,EAAgBd,MAAQA,KAAKc,cAAiB,SAASV,EAAGW,GAC1D,IAAK,IAAIC,KAAKZ,EAAa,YAANY,GAAoBf,OAAOgB,UAAUC,eAAeC,KAAKJ,EAASC,IAAIjB,EAAgBgB,EAASX,EAAGY,IAEvHI,EAAgBpB,MAAQA,KAAKoB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIE,EAAS,GACb,GAAW,MAAPF,EAAa,IAAK,IAAIhB,KAAKgB,EAAe,YAANhB,GAAmBJ,OAAOgB,UAAUC,eAAeC,KAAKE,EAAKhB,IAAIN,EAAgBwB,EAAQF,EAAKhB,GAEtI,OADAM,EAAmBY,EAAQF,GACpBE,GAEXtB,OAAOO,eAAeO,EAAS,aAAc,CAAEF,OAAO,IACtDE,EAAQS,eAAY,EACpBV,EAAaW,EAAQ,IAAiCV,GACtDA,EAAQS,UAAYJ,EAAaK,EAAQ,KACzCX,EAAaW,EAAQ,IAAYV,I,gCC1BjCd,OAAOO,eAAeO,EAAS,aAAc,CAAEF,OAAO,IACtDE,EAAQW,+BAA4B,EACpCX,EAAQW,0BAA4B,CAChC,CAAEC,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,QAASC,YAAa,oBACjC,CAAED,QAAS,6BAA8BC,YAAa,qB,gCCf1D3B,OAAOO,eAAeO,EAAS,aAAc,CAAEF,OAAO,IACtDE,EAAQc,QAAUd,EAAQe,SAAM,EAChCf,EAAQe,IAAM,CACVC,QAAS,CACLC,GAAI,UACJC,SAAU,gBACVC,2BAA4B,2BAC5BC,WAAY,WACZC,iBAAkB,iBAClBC,kBAAmB,kBACnBC,gBAAiB,iBAErBC,eAAgB,CACZP,GAAI,cAERQ,kBAAmB,CACfR,GAAI,qBAERS,WAAY,CACRT,GAAI,aACJU,kBAAmB,YAEvBC,WAAY,CACRC,KAAM,CACFZ,GAAI,QAERa,KAAM,CACFb,GAAI,QAERc,OAAQ,CACJd,GAAI,UAERe,UAAW,CACPf,GAAI,eAIhBjB,EAAQc,QAAU,CACdmB,uBAAwB,M,gCCtC5B/C,OAAOO,eAAeO,EAAS,aAAc,CAAEF,OAAO,IACtDE,EAAQkC,cAAW,EAEnB,SAAWA,GACPA,EAASA,EAAQ,aAAmB,GAAK,eACzCA,EAASA,EAAQ,YAAkB,GAAK,cAF5C,CAGclC,EAAQkC,WAAalC,EAAQkC,SAAW,M,iaCPzCC,EAAW,WAIXC,EAAwB,wBAIxBC,EAAqB,qBAIrBC,EAAoB,oBAIpBC,EAAc,cCKpB,SAASC,EAAmBC,GACjC,MAAO,CACLX,KAAMrB,EAAU2B,sBAChBK,gBASG,SAASC,EAAkBC,GAChC,MAAO,CACLb,KAAMrB,EAAU4B,mBAChBM,O,kBClCSC,EAAb,WA+BE,aAAuB,oBA/BzB,6CACE,SAAeC,GAEb,IADA,IAAMC,EAAa,KACN,CACX,IAAMC,EAAOF,EAASE,OACtB,GAAIA,EAAKC,KACP,OAAOF,EAETA,EAAMG,KAAKF,EAAKjD,UARtB,0BAYE,SAAuBoD,EAAyBC,GAI9C,IAHA,IAAIC,EAAMF,EAAMG,OAAS,EACrBC,EAAS,EAENA,GAAUF,GAAK,CACpB,IAAMG,EAAMC,KAAKC,OAAOL,EAAME,GAAU,GAClCI,EAAmBP,EAAUD,EAAMK,IACzC,GAAyB,IAArBG,EACF,OAAOH,EACEG,EAAmB,EAC5BN,EAAMG,EAAM,EAEZD,EAASC,EAAM,EAInB,OAAQ,MA5BZ,KCFO,SAASI,EAAY7D,EAAc8D,GACxC,MAAM,IAAIC,MAAMD,GCDX,IAAME,EACX,WAAqBhE,GAAW,yBAAXA,S,QCchB,ICfMiE,EAAb,WACE,aAAuB,oBADzB,iDAIE,SAAgBC,GACd,OAAO9E,OAAO+E,KAAKD,GAChBE,QAAO,SAAA5E,GAAC,MAAoB,kBAAT0E,EAAE1E,QAN5B,uBASE,SAAmC0E,GACjC,OAAO9E,OAAO+E,KAAKD,GAChBG,KAAI,SAAA7E,GAAC,OAAI0E,EAAE1E,MACX4E,QAAO,SAAArE,GAAC,MAAiB,kBAANA,OAZ1B,+BAeE,SAAyBmE,GACvB,IAD+B,EACzBI,EAAwC,GADf,cAGZnF,KAAKoF,SAASL,IAHF,IAG/B,2BAAqC,CAAC,IAA3BM,EAA0B,QAC7BxE,EAAQkE,EAAEM,GACK,MAAjBF,EAAOtE,KACTsE,EAAOtE,GAAS,IAElBsE,EAAOtE,GAAOmD,KAAKqB,IARU,8BAW/B,OAAOpF,OAAO+E,KAAKG,GAAQD,KAAI,SAAAI,GAAG,MAAK,CACrCzE,MAAO0E,SAASD,EAAK,IACrBE,MAAOL,EAAOG,WA5BpB,KCEO,SAASG,EAAkB/B,EAAkBgC,GAClD,OAKF,SAA4BhC,GACoB,MAA1CiC,EAAUjC,EAAIkC,YAAYhE,eAC5B+D,EAAUjC,EAAIkC,YAAYhE,aAK9B,SAA4B8B,GAE1B,IAF4C,EAEtCmC,EAAwC,GAFF,cAGzB5F,OAAO+E,KAAKtB,EAAIoC,YAAYb,QAAO,SAAA5E,GAAC,OAAI0F,MAAMR,SAASlF,EAAG,SAHjC,IAG5C,2BAAoF,CAAC,IAA1EgF,EAAyE,QAC5ExE,EAAS6C,EAAIoC,WAAmBT,GACd,MAApBQ,EAAUhF,KACZgF,EAAUhF,GAASwE,IANqB,8BAS5C,OAAOQ,EAdoCG,CAAmBtC,IAE9D,OAAOiC,EAAUjC,EAAIkC,YAAYhE,aAT1BqE,CAAmBvC,GAAKgC,GAGjC,IAAMC,EAAmE,GCFlE,IAAMO,EAAb,WAGE,WAA4BC,GAAe,yBAAfA,OAAc,KAFlCC,eAEkC,EACxCpG,KAAKoG,UCFF,SAAoCD,GAIzC,IAHA,IAAMC,EAAmC,GACrCC,EAAU,EAELC,EAAI,EAAGA,EAAIH,EAAK/B,OAAQkC,IACf,OAAZH,EAAKG,IACPC,EAAaD,GAMjB,OAFAC,EAAaJ,EAAK/B,QAEXgC,EAEP,SAASG,EAAaC,GACpBJ,EAAUpC,KAAK,CACbwC,IAAKH,EACLjC,OAAQoC,EAAMH,EACdI,OAAQL,EAAUhC,OAAS,IAE7BiC,EAAUG,EAAM,GDlBCE,CAA2BP,GAJhD,6DAOE,SAA0BK,GACxB,GAAIA,EAAM,EACR,MAAO,CAAEG,WAAY,EAAGC,OAAQ,GAGlC,IAAMC,EAAQlD,EAAWmD,aAAa9G,KAAKoG,WAAW,SAAAW,GACpD,OAAIP,EAAMO,EAAKP,KACL,EAENA,GAAOO,EAAKP,KAAOA,EAAMO,EAAKP,IAAMO,EAAK3C,OAAS,EAC7C,EAEF,KAEH4C,EAAWH,GAAS,EAAI7G,KAAKoG,UAAUS,GAAS7G,KAAKoG,UAAUpG,KAAKoG,UAAUhC,OAAS,GAE7F,OAAgB,MAAZ4C,EACK,CAAEL,WAAY,EAAGC,OAAQ,GAG3B,CAAED,WAAYK,EAASP,OAAQG,OAAQrC,KAAK0C,IAAIT,EAAMQ,EAASR,IAAM,EAAGQ,EAAS5C,OAAS,MA3BrG,qCA8BE,SAAwB8C,EAAcN,GACpC,GAA8B,IAA1B5G,KAAKoG,UAAUhC,QAAgB8C,EAAO,EACxC,OAAO,EAGT,IAAMF,EAAWhH,KAAKoG,UAAUc,EAAO,GACvC,GAAgB,MAAZF,EAAkB,CACpB,IAAMG,EAAenH,KAAKoG,UAAUpG,KAAKoG,UAAUhC,OAAS,GAC5D,OAAO+C,EAAaX,IAAMW,EAAa/C,OAEzC,OAAO4C,EAASR,IAAMjC,KAAK0C,IAAID,EAAS5C,OAAQwC,EAAS,OAxC7D,KEJO,SAASQ,EAAMC,GACpB,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MCgB7C,IAAMI,EAAb,WAIE,aAAgF,IAAnDC,EAAkD,uDAArBC,OAAOD,aAAc,yBAAlDA,eAAkD,KAFvEE,kBAAuCrH,EAFjD,8CAOE,WACE,MAAO,CACLoB,QAAS,EACTkG,SAAU5E,WAAS6E,aACnBC,iBAAiB,EACjBC,eAAe,KAZrB,iBAgBE,WACE,GAAyB,MAArBhI,KAAK4H,aACP,OAAO5H,KAAK4H,aAGd,IACE,IAAMzB,EAAOnG,KAAK0H,aAAaO,QAAQR,EAAWS,WAClD,GAAY,MAAR/B,EAAc,CAChB,IAAMgC,EA6Cd,SAAmBA,GAGjB,OAGF,SAA6BA,GAC3B,GAAqB,IAAjBA,EAAKxG,QACP,OAEDwG,EAAaJ,iBAAkB,EAChCI,EAAKxG,QAAU,EAVfyG,CAAoBD,GAatB,SAA6BA,GAC3B,GAAqB,IAAjBA,EAAKxG,QACP,OAEDwG,EAAaH,eAAgB,EAC9BG,EAAKxG,QAAU,EAjBf0G,CAAoBF,GACbA,EAhDYG,CAAUC,KAAKC,MAAMrC,IAASnG,KAAKyI,cAChD,GAAIzI,KAAK0I,WAAWP,GAClB,OAAOA,GAGX,MAAOQ,GACPC,QAAQC,MAAM,0BAA4BF,GAG5C,OAAO3I,KAAKyI,eAjChB,iBAoCE,SAAIK,GACF,IACE,IAAK9I,KAAK0I,WAAWI,GACnB,OAGF9I,KAAK0H,aAAaqB,QAAQtB,EAAWS,UAAWK,KAAKS,UAAUF,IAC/D9I,KAAK4H,aAAekB,EACpB,MAAOH,GACPC,QAAQC,MAAM,yBAA2BF,MA7C/C,wBAiDE,SAAmBR,GAEjB,OAAqB,IAAjBA,EAAKxG,WAGLwG,EAAKN,WAAa5E,WAAS6E,cAAgBK,EAAKN,WAAa5E,WAASgG,eAGtC,mBAAzBd,EAAKJ,iBAGkB,mBAAvBI,EAAKH,oBA5DpB,KAAaP,EACJS,UAAY,yB,YChBRgB,EAAb,0FACE,WACE,GAAIC,SAASC,SAASC,MAAQF,SAASC,SAASC,KAAKC,WAAW,SAC9D,IACE,IAAMC,EAAOJ,SAASC,SAASC,KAAKG,QAAQ,SAAU,IAAIC,OAC1D,OAAOC,4CAAkCH,IAAS,GAClD,MAAOZ,GACPC,QAAQC,MAAMF,GAIlB,MAAO,KAXX,uBAcE,SAAUY,GAOR,SAASI,EAAmBC,GAC1BjC,OAAOkC,QAAQC,kBAAavJ,EAAW,GAAvC,WAA+CqJ,IAP7B,IAAhBL,EAAKnF,OACPuF,EAAmB,IAEnBA,EAAmB,QAAD,OAASI,wCAA8BR,SAlB/D,KCKO,SAAeS,EAAtB,kC,4CAAO,WAAiCpI,GAAjC,SAAAqI,EAAA,2DAEKrI,EAFL,OAGM,qBAHN,OAKM,qBALN,OAOM,qBAPN,OASM,qBATN,QAWM,qBAXN,QAaM,qBAbN,QAeM,qBAfN,QAiBM,qBAjBN,QAmBM,qBAnBN,QAqBM,qBArBN,QAuBM,qBAvBN,QAyBM,qBAzBN,QA2BM,oBA3BN,wCAIkB,0DAJlB,+DAMkB,0DANlB,gEAQkB,0DARlB,kEAUkB,0DAVlB,kEAYkB,0DAZlB,kEAckB,0DAdlB,kEAgBkB,0DAhBlB,kEAkBkB,0DAlBlB,kEAoBkB,yEApBlB,kEAsBkB,yEAtBlB,kEAwBkB,yEAxBlB,kEA0BkB,wEA1BlB,kEA4BkB,0DA5BlB,0EA8BY8C,EAAY9C,EAAD,mCAA0CA,KA9BjE,6C,sBAkCA,SAAesI,EAAtB,kC,4CAAO,WAA8BtI,GAA9B,SAAAqI,EAAA,2DAEKrI,EAFL,OAGM,qBAHN,OAKM,qBALN,OAOM,qBAPN,OASM,qBATN,QAWM,qBAXN,QAaM,qBAbN,QAeM,qBAfN,QAiBM,qBAjBN,QAmBM,qBAnBN,QAqBM,qBArBN,QAuBM,qBAvBN,QAyBM,qBAzBN,QA2BM,oBA3BN,wCAIkB,+BAJlB,+DAMkB,+BANlB,gEAQkB,+BARlB,kEAUkB,+BAVlB,kEAYkB,+BAZlB,kEAckB,+BAdlB,kEAgBkB,+BAhBlB,kEAkBkB,+BAlBlB,kEAoBkB,+BApBlB,kEAsBkB,+BAtBlB,kEAwBkB,+BAxBlB,kEA0BkB,+BA1BlB,kEA4BkB,+BA5BlB,0EA8BY8C,EAAY9C,EAAD,mCAA0CA,KA9BjE,6C,kEAoCA,WAA8CA,GAA9C,SAAAqI,EAAA,2DAEKrI,EAFL,OAGM,qBAHN,OAKM,qBALN,OAOM,qBAPN,OASM,qBATN,QAWM,qBAXN,QAaM,qBAbN,QAeM,qBAfN,QAiBM,qBAjBN,QAmBM,qBAnBN,QAqBM,qBArBN,QAuBM,qBAvBN,QAyBM,qBAzBN,QA2BM,oBA3BN,wCAImB,qDAJnB,uCAIwEuI,qBAJxE,uBAMmB,qDANnB,uCAMwEA,qBANxE,wBAQmB,qDARnB,wCAQwEA,qBARxE,yBAUmB,qDAVnB,wCAUwEA,qBAVxE,yBAYmB,qDAZnB,wCAYwEA,qBAZxE,yBAcmB,qDAdnB,wCAcwEA,qBAdxE,yBAgBmB,qDAhBnB,wCAgBwEA,qBAhBxE,yBAkBmB,qDAlBnB,wCAkBwEA,qBAlBxE,yBAoBmB,qDApBnB,wCAoBwEA,qBApBxE,yBAsBmB,qDAtBnB,wCAsBwEA,qBAtBxE,yBAwBmB,qDAxBnB,wCAwBwEA,qBAxBxE,yBA0BmB,qDA1BnB,wCA0BwEA,qBA1BxE,yBA4BmB,qDA5BnB,wCA4BuEA,qBA5BvE,iCA8BYzF,EAAY9C,EAAD,mCAA0CA,KA9BjE,6C,kEAyCA,WAAgCA,GAAhC,SAAAqI,EAAA,2DAEKrI,EAFL,OAGM,qBAHN,OAKM,qBALN,OAOM,qBAPN,OASM,qBATN,QAWM,qBAXN,QAaM,qBAbN,QAeM,qBAfN,QAiBM,qBAjBN,QAmBM,qBAnBN,QAqBM,qBArBN,QAuBM,qBAvBN,QAyBM,qBAzBN,QA2BM,oBA3BN,wCAImB,+BAJnB,+DAMmB,+BANnB,gEAQmB,+BARnB,kEAUmB,+BAVnB,kEAYmB,+BAZnB,kEAcmB,+BAdnB,kEAgBmB,+BAhBnB,kEAkBmB,+BAlBnB,kEAoBmB,+BApBnB,kEAsBmB,+BAtBnB,kEAwBmB,+BAxBnB,kEA0BmB,+BA1BnB,kEA4BmB,+BA5BnB,0EA8BY8C,EAAY9C,EAAD,mCAA0CA,KA9BjE,6C,iCCnHA,SAASwI,EAAeC,EAAkCC,EAAoBvI,GACnF,GAAe,MAAXsI,GAAmBA,IAAYC,EACjC,OAAOvI,EAGT,IAAMwI,EAAeD,EAAME,aAAaH,EAAQG,aAAazI,EAAQwI,eAC/DE,EAAaH,EAAMI,WAAWL,EAAQK,WAAW3I,EAAQ0I,aAE/D,OAAO,2BACF1I,GADL,IAEEwI,aAA8B,MAAhBA,EAAuBD,EAAME,aAAaG,OAASJ,EACjEE,WAA0B,MAAdA,EAAqBH,EAAMI,WAAWE,IAAMH,I,oBCXrD,SAASI,EAAiBnH,EAAkB6F,EAAcgB,EAA4BE,GAC3F,IAEIK,EAFEC,EAAQ,wBA4ChB,SAAsBrH,EAAkB+G,GACtC,OAAQA,GACN,KAAK/G,EAAIgH,WAAWM,GAClB,MAAO,MACT,KAAKtH,EAAIgH,WAAWE,IAClB,MAAO,OACT,KAAKlH,EAAIgH,WAAWO,GAClB,MAAO,MACT,KAAKvH,EAAIgH,WAAWQ,IAClB,MAAO,OACT,KAAKxH,EAAIgH,WAAWnC,KAClB,MAAO,QACT,KAAK7E,EAAIgH,WAAWS,SACpB,KAAKzH,EAAIgH,WAAWU,SACpB,KAAK1H,EAAIgH,WAAWW,QAClB,MAAO,GACT,QACE,OAAO3G,EAAY+F,EAAD,sCAA4C/G,EAAIgH,WAAWD,MA7D/Ca,CAAa5H,EAAK+G,IAC9Cc,EAAa7H,EAAImH,iBAAiBE,EAAUxB,EAAMgB,GAAc,EAAOE,GAG7E,MAAO,CAAEc,aAAYC,aAGrB,WACuB,MAAjBV,IACFA,EAKJ,WACE,IAAM/I,EAA2B,CAAE0J,QAAQ,EAAMC,OAAQnB,EAAcoB,SAAS,EAAMC,OAAQlI,EAAImI,WAAWC,QACvGC,EAAiD,2BAAMhB,EAAWQ,GAAe7H,EAAIkC,YAAYoG,mBAEjGC,EAA6B,CACjCC,cAAe,SAACC,EAAkBC,EAA+BC,GAC/D,OAAON,EAAMI,IAIfG,sBAAuB,SAACC,GAAD,MAAwC,IAAM7I,EAAI4I,sBAAsBC,IAC/FC,UAAW,aAGXC,oBAAqB,iBAAM,KAC3BC,eAAgB,SAACC,GAAD,MAAkB,IAClCC,WAAY,SAACT,GAAD,OAAyC,MAAnBJ,EAAMI,IACxCU,SAAU,SAACV,GAAD,OAAyC,MAAnBJ,EAAMI,GAAoBJ,EAAMI,GAAWW,mBAAgBvM,GAC3FwM,qBAAsB,SAACZ,GAAD,OAAsBA,GAC5Ca,0BAA2B,kBAAM,GACjCC,WAAY,iBAAM,MAClBC,uBAAwB,iBAAM,KAE1BC,EAAUzJ,EAAI0J,cAAJ,YAAsBnN,OAAO+E,KAAK+G,IAAShK,EAASkK,GAGpE,MAAO,CAAEoB,YAFWF,EAAQG,iBAENH,WA/BJI,IAElB,OAAOzC,ICXJ,SAAS0C,EAAoBC,EAAgBlC,GAClD,OAAQkC,GACN,KAAKxK,WAASgG,YACZ,OAOJ,SAAwBrG,GACtB,OAAOA,EAAKqG,YAAYsC,IAPxB,KAAKtI,WAAS6E,aACZ,OASJ,SAAsBlF,GACpB,IAAM8K,EAAgB,GAKtB,OAJA9K,EAAKkF,cAAa,SAAA6F,GAChBD,EAAM1J,KAAK2J,MAGND,GAdP,QACE,OAAOhJ,EAAY+I,EAAD,0BAA0BA,KCPlD,IAAMG,EAA0D,GAC1DC,EAAgD,GAE/C,SAASC,EAAelM,GAK7B,OAJkC,MAA9BgM,EAAchM,KAChBgM,EAAchM,G,2CAAemM,CAAgBnM,GAC7CgM,EAAchM,GAAaoM,OAAM,yBAAaJ,EAAchM,OAEvDgM,EAAchM,GAGhB,SAASqM,EAAqBrM,GACnC,OAA4C,IAArCiM,EAAoBjM,G,4CAG7B,WAA+BA,GAA/B,kBAmBWsM,EAnBX,SAAAjE,EAAA,6DAmBWiE,EAnBX,WAoBI,OAAOjO,OAAO+E,KAAKmJ,GAChBjJ,KAAI,SAAAI,GAAG,OAAI6I,EAAS7I,MACpBJ,KAAI,SAAAkJ,GAAO,OAAI1K,EAAImH,iBAAiBuD,EAAQjC,SAAUiC,EAAQjI,KAAMzC,EAAI8G,aAAaG,QAAQ,EAAOjH,EAAIgH,WAAWM,QArBlHqD,EAAkBnE,EAAetI,GACjC0M,EAAqBtE,EAAkBpI,GAF/C,SAGoB0M,EAHpB,cAGQ5K,EAHR,QAKMkC,YAAc,CAChBhE,cACAoK,kBAAmB,IAPvB,SASyBqC,EATzB,OASQF,EATR,qBAW2BD,KAX3B,IAWE,2BAAW3C,EAAmC,QAC5C7H,EAAIkC,YAAYoG,kBAAkBT,EAAWY,UAAYZ,EAZ7D,qCAeEsC,EAAoBjM,IAAe,EAfrC,kBAiBS8B,GAjBT,6C,sBCjBO,SAAS6K,EAAa3L,EAAY2I,GAEvC,IAAMiD,EAAW5L,EAAa6L,MAC9B,OAAID,GAAUA,EAAOpK,OAAS,EACrBoK,EAAO,GAAGE,SAASnD,GAErB3I,EAAK8L,SAASnD,GCLvB,IAAMoD,EAAkE,GAClEC,EAAoD,GAEnD,SAASC,EAAwBjN,GAMtC,OAL0B,MAAtB+M,EAAM/M,KACR+M,EAAM/M,GNqEH,SAAP,kCMrEyBkN,CAA+BlN,GACpD+M,EAAM/M,GAAaoM,OAAM,yBAAaW,EAAM/M,MAC5C+M,EAAM/M,GAAamN,MAAK,kBAAMH,EAAiBhN,IAAe,MAEzD+M,EAAM/M,GCLf,IC2BYoN,ED3BNC,GAAW,IAAI/F,EAEd,SAASgG,GAAWC,EAAmBC,GAC5C,OAAQA,EAAOvM,MACb,KAAKwM,EAAYhM,kBACf,OAAsB,MAAlB8L,EAAMG,SACDH,EAGF,2BACFA,GADL,IAEEG,SAAS,2BACJH,EAAMG,UADH,IAENC,aAAcH,EAAOxM,SAI3B,KAAKyM,EAAYlM,sBACf,OAAO,2BACFgM,GADL,IAEEK,gBAAiBJ,EAAO5L,eAG5B,KAAK6L,EAAYjM,mBACf,IAAMqM,EAAQ,2BACTN,GADS,IAEZpN,QAASqI,EAAiC,MAAlB+E,EAAMG,cAAmB/O,EAAY4O,EAAMG,SAAS5L,IAAK0L,EAAO1L,IAAKyL,EAAMpN,WAIrG,OAsBN,SAAgC2N,EAA2ChM,EAAkByL,EAAmB5F,EAAcxH,GAC5H,MAAqC8I,EAAiBnH,EAAK6F,EAAMxH,EAAQwI,aAAcxI,EAAQ0I,YAAvFc,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aACpB2D,EAAMG,SAAW,CACf1N,YAAa8N,EACbhM,MACA6H,aACAC,eACA+D,aAAchE,GA/BZoE,CAAuBF,EAAS1N,QAAQ2N,oBAAqBN,EAAO1L,IAAK+L,EAAUN,EAAM5F,KAAM4F,EAAMpN,SACrGkN,GAASW,UAAUT,EAAM5F,MAClBkG,EAET,KAAKJ,EAAYnM,SACf,OAAO,2BAAKiM,GAAZ,IAAmB5F,KAAM6F,EAAO7F,OAElC,KAAK8F,EAAY/L,YACf,OAAO,2BACF6L,GADL,IAEEpN,QAAQ,2BACHoN,EAAMpN,SACNqN,EAAOrN,WAIhB,QAGE,OAAOoN,I,SCpBDH,O,qBAAAA,I,mBAAAA,I,kBAAAA,M,iBCvBNa,GAAa,IAAIpI,EAEvBmB,QAAQkH,IACN,sJAQK,IAAMC,GAAaC,IAAMC,mBAA2C1P,GAEpE,SAAS2P,GAAT,GAA0E,IAA5CC,EAA2C,EAA3CA,SACnC,EAA0BC,qBAAWlB,GAAY,CAC/CM,gBAAiBR,EAAgBqB,QACjC9G,MAAM,IAAIL,GAAWoH,aACrBvO,QAAS,CACP2N,oBAAqBhO,4BAA0B,GAAGE,YAClDiG,SAAUgI,GAAWnP,MAAMmH,SAC3B0C,aAtBoC,GAuBpCE,WAtBgC,EAuBhC8F,gBAAgB,EAChBxI,gBAAiB8H,GAAWnP,MAAMqH,gBAClCC,cAAe6H,GAAWnP,MAAMsH,eAElCsH,cAAU/O,IAZZ,mBAAO4O,EAAP,KAAcqB,EAAd,KAeM3P,EAAQ,CAAEsO,QAAOqB,YAqFvB,OAnFAC,qBAAU,WACR,IAAMC,EAAkB,IAAIC,gBAE5B,OAHc,oCAEdC,CAAiBF,EAAgBG,QAC1B,WACLH,EAAgBI,SAJJ,4CAOd,WAAgCC,GAAhC,mBAAA9G,EAAA,yDACQyF,EAAsBP,EAAMpN,QAAQ2N,oBACpCsB,GAAsB/C,EAAqByB,GAFnD,UAIQsB,EAJR,gBAKMR,EAASS,EAA2BjC,EAAgBqB,UAL1D,sCAOYjJ,EAAM5F,YAAUK,QAAQmB,wBAPpC,WAUQ+N,EAAYG,QAVpB,oEAcsBpD,EAAe4B,GAdrC,WAcUhM,EAdV,QAeQqN,EAAYG,QAfpB,mDAmBIV,EAASS,EAA0BvN,IACnC8M,EAASS,EAA2BjC,EAAgBmC,SApBxD,kDAsBIvI,QAAQC,MAAR,MACImI,GACFR,EAASS,EAA2BjC,EAAgBpK,QAxB1D,2DAPc,yBAmCb,CAACuK,EAAM5F,KAAM4F,EAAMpN,QAAQ0I,WAAY0E,EAAMpN,QAAQwI,aAAc4E,EAAMpN,QAAQ2N,oBAAqBP,EAAMpN,QAAQwO,iBAEvHE,qBAAU,WACR,IAAMW,EAAavB,GAAWnP,MAC9B0Q,EAAWvJ,SAAWsH,EAAMpN,QAAQ8F,SACpCuJ,EAAWrJ,gBAAkBoH,EAAMpN,QAAQgG,gBAC3CqJ,EAAWpJ,cAAgBmH,EAAMpN,QAAQiG,cACzC6H,GAAWwB,IAAID,KACd,CAACjC,EAAMpN,QAAQ8F,SAAUsH,EAAMpN,QAAQgG,gBAAiBoH,EAAMpN,QAAQiG,gBAEzEyI,qBAAU,WACR,GAAsB,MAAlBtB,EAAMG,UAAmD,MAA/BH,EAAMG,SAASC,aAA7C,CAIA,IAAM+B,EAAY3J,OACZ4H,EAAeJ,EAAMG,SAASC,aAMpC,GALA+B,EAAUC,GAAKpC,EAAMG,SAAS5L,IAC9B4N,EAAU1O,KAAO2M,EACjB+B,EAAU/B,aAAeA,EACzB+B,EAAU/F,WAAa4D,EAAMG,SAAS/D,WAElC4D,EAAMpN,QAAQwO,eAAgB,CAChC,IAAM/E,EAAe2D,EAAMG,SAAS9D,eACpC8F,EAAUE,QAAUhG,EAAa6B,YACjCiE,EAAUjE,YAAc7B,EAAa6B,YACrCiE,EAAUnE,QAAU3B,EAAa2B,QACjCmE,EAAUzO,KAAO4O,GAAO,kBAAMjG,EAAa6B,YAAYqE,kBAAkBnC,MACzE+B,EAAUxO,OAAS2O,GAAO,kBAAOlC,EAAqBzM,QAAU0I,EAAa6B,YAAYsE,oBAAoBpC,MAC7G+B,EAAUvO,UAAY0O,GAAO,kBAAMjG,EAAa6B,YAAYuE,4BAA4BrC,WAExF+B,EAAUE,aAAUjR,EACpB+Q,EAAUjE,iBAAc9M,EACxB+Q,EAAUnE,aAAU5M,EACpB+Q,EAAUzO,UAAOtC,EACjB+Q,EAAUxO,YAASvC,EACnB+Q,EAAUvO,eAAYxC,EAGxB,SAASkR,EAAUI,GACjB,IACE,OAAOA,IACP,MAAOlJ,GACP,YAMJ,eAACoH,GAAW+B,SAAZ,CAAqBjR,MAAOA,EAA5B,SACGsP,I,6EC5HA,SAAS4B,GAAQC,GACtB,IAAQC,EAAoBD,EAApBC,gBACR,OACE,sBAAKC,UAAW,iDAAkDC,MAAO,CAAEF,mBAA3E,SACE,eAAC,cAAD,CAAYG,MAAO,OAAQC,SAAS,EAAMC,KAAM,OCmB/C,IAAMC,GAAb,oDAKE,WAAYP,GAAyB,IAAD,uBAClC,cAAMA,IALAQ,YAI4B,IAH5BC,kBAAoBzC,IAAM0C,YAGE,EAF5BC,YAAkD,GAEtB,EAiE5BC,iBAA6B,GAjED,EAkE5BC,sBAAwB,IAAI3M,EAAsB,IAhExD,EAAKiJ,MAAQ,CACX2D,SAAU,EACVnM,WAAY,EACZC,OAAQ,EACRmM,qBAAiBxS,GAEnB,EAAKyS,eAAiB,EAAKA,eAAeC,KAApB,iBAEtB,IAAMC,EAA2B,6DAVC,OAWlC,gEAAwBnE,MAAK,SAAAoE,GAC3BA,EAAaC,UAAUC,WAAWC,mBAAmBC,mBAAmB,CACtE7H,OAAQyH,EAAaC,UAAUC,WAAW7I,aAAagJ,OACvDC,sBAAsB,IAGxBP,EAAyBnE,MAAK,SAAAyD,GAC5B,EAAKkB,SAAS,CAAEX,gBAAiBP,EAAOmB,aACvC3F,OAAM,SAAArF,GACPC,QAAQC,MAAMF,GACd,EAAK+K,SAAS,CAAEX,iBAAiB,UAElC/E,OAAM,SAAArF,GACPC,QAAQC,MAAMF,GACd,EAAK+K,SAAS,CAAEX,iBAAiB,OAzBD,EALtC,0CAkCE,WAGE,OAFA/S,KAAK4T,kBAGH,uBAAK5R,GAAIhC,KAAKgS,MAAMhQ,GAAI6R,IAAK7T,KAAKyS,kBAAmBP,UAQvD,SAAuB4B,GACrB,IAAMC,EAAa,CAAC,cAChBD,GACFC,EAAW/P,KAAK,WAElB,OAAO+P,EAAWC,KAAK,KAbyCC,CAAcjU,KAAKgS,MAAM8B,UAAzF,UACE,sBAAK5B,UAAW,kBAAhB,SACGlS,KAAKkU,cAEPlU,KAAKgS,MAAM8B,UAAY9T,KAAKmU,eA1CrC,kCAuDE,WAAwB,IAAD,gBACInU,KAAK2S,aADT,IACrB,2BAA2C,SAC9ByB,WAFQ,8BAIrBpU,KAAK2S,YAAYvO,OAAS,IA3D9B,qBA8DE,WACE,OACE,uBAAK8N,UAAW,aAAhB,iBACOlS,KAAKmP,MAAM2D,SADlB,QACiC9S,KAAKmP,MAAMxI,WAD5C,SAC8D3G,KAAKmP,MAAMvI,YAjE/E,6BAwEE,WACE,GAAmB,MAAf5G,KAAKwS,OAAT,CAIIxS,KAAK6S,sBAAsB1M,OAASnG,KAAKgS,MAAM7L,OACjDnG,KAAK6S,sBAAwB,IAAI3M,EAAsBlG,KAAKgS,MAAM7L,OAGpE,IAAQkO,EAAcrU,KAAKgS,MAAnBqC,UACFxB,EAAwB7S,KAAK6S,sBAC7ByB,EAkBN,WACE,GAAiB,MAAbD,EACF,OAGF,IAAME,EAAY1B,EAAsB2B,0BAA0BH,EAAUI,OACtEC,EAAU7B,EAAsB2B,0BAA0BH,EAAUM,KAE1E,MAAO,CACLC,gBAAiBL,EAAU5N,WAC3BkO,YAAaN,EAAU3N,OACvBkO,cAAeJ,EAAQ/N,WACvBoO,UAAWL,EAAQ9N,QA9BToO,GAUd,GARAhV,KAAK4S,iBAAmB5S,KAAKwS,OAAOI,iBAClC5S,KAAK4S,iBACI,MAAT0B,EAAgB,GAAK,CAAC,CACpBA,QACAvS,QAAS,CAAEmQ,UAAW,2BAItBoC,EACF,IACEtU,KAAKwS,OAAOyC,qCAAqCX,GACjD,cAhGR,uBAsHE,WAAqB,IAAD,OAClB,OAAkC,MAA9BtU,KAAKmP,MAAM4D,gBACN,eAAChB,GAAD,CAASE,gBAAgB,aAEC,IAA/BjS,KAAKmP,MAAM4D,gBACN,sBAAKb,UAAW,eAAhB,8EAIP,oBAAM/C,MAAM4D,gBAAZ,CACEmC,MAAM,OACNC,OAAO,OACPtU,MAAOb,KAAKgS,MAAM7L,KAClBiP,MAAM,UACNC,SAAS,aACTC,SAAU,SAAAnP,GAAI,OAAI,EAAK6L,MAAMsD,UAAY,EAAKtD,MAAMsD,SAASnP,IAC7D6M,eAAgBhT,KAAKgT,eACrBjR,QAAS,CACPwT,iBAAiB,EACjBC,iBAAkBxV,KAAKgS,MAAMyD,iBAAmB,MAAQ,OACxDC,QAAS,CAAEC,SAAS,GACpBC,SAAU5V,KAAKgS,MAAM4D,SACrBC,kBAAkB,EAClBC,sBAAsB,EACtBC,oBAAoB,EACpBC,UAAU,EACVC,4BAA4B,OAhJtC,4BAsJE,SAAuBzD,EAAuC0D,GAAwC,IAAD,SACnGlW,KAAKwS,OAASA,EAGd,UAAAA,EAAO2D,kBAAP,SAAmBC,OAAOF,EAAO1D,OAAO6D,kBAAkBC,IAE1DtW,KAAK2S,YAAY3O,KAAKwO,EAAO+D,2BAA0B,SAAAxR,GACrD,IAAMyR,EAAchE,EAAO2D,WACR,MAAfK,GAIJ,EAAK9C,SAAS,CACZZ,SAAU0D,EAAYC,YAAY1R,EAAE+N,UACpCnM,WAAY5B,EAAE+N,SAASnM,WACvBC,OAAQ7B,EAAE+N,SAASlM,aAGvB5G,KAAK2S,YAAY3O,KAAKwO,EAAOkE,aAAY,SAAA3R,GACvC,GAAgB,MAAZA,EAAE2G,QAAoC,MAAlB3G,EAAE2G,OAAO4I,OAAuC,MAAtB,EAAKtC,MAAM2E,QAA7D,CAOA,IAAMnQ,EAAMgM,EAAOoE,cACnB,GAAW,MAAPpQ,EAAa,CACf,IAAMiO,EAAQ,EAAK5B,sBAAsBgE,wBAAwBrQ,EAAIG,WAAYH,EAAII,QACrF,EAAKoL,MAAM2E,QAAQ,CAAClC,EAAOA,UAK/B,IAAIqC,EAAa,EACbC,EAAY,EACVC,EAAaC,aAAY,WAC7B,IAAMC,EAAmB,EAAKzE,kBAAkB0E,QAChD,GAAwB,MAApBD,EAAJ,CAIA,IAAMhC,EAAQgC,EAAiBE,YACzBjC,EAAS+B,EAAiBG,aAC5BP,IAAe3B,GAAU4B,IAAc7B,IAI3C1C,EAAO8E,SAEPR,EAAa3B,EACb4B,EAAY7B,MACX,KACHlV,KAAK2S,YAAY3O,KAAK,CAAEoQ,QAAS,kBAAMmD,cAAcP,MAErDhX,KAAK4T,kBAED5T,KAAKgS,MAAMgB,gBACbhT,KAAKgS,MAAMgB,eAAeR,EAAQ0D,OAhNxC,GAAgClG,IAAMwH,WCVzBC,GAAb,oDAGE,WAAYzF,GAA4B,IAAD,8BACrC,cAAMA,IAHA0F,mBAE+B,EAErC,EAAKvI,MAAQ,CAAEwI,UAAU,GAFY,EAHzC,qDAQE,SAAkB9O,EAAY+O,GAC5B5X,KAAK0T,SAAS,CAAEiE,UAAU,EAAM9O,QAAO+O,cACvChP,QAAQC,MAAMA,GACiB,MAA3B7I,KAAKgS,MAAM6F,eACb7X,KAAK0X,cAAgB1X,KAAKgS,MAAM6F,kBAZtC,oBAgBE,WACE,OAAI7X,KAAK8X,cAEL,iCACE,uDACA,uBAAK3F,MAAO,CAAE4F,WAAY,YAA1B,UACE,+BAAM/X,KAAKmP,MAAMtG,OAAS7I,KAAKmP,MAAMtG,MAAMmP,aAC3C,+BAAMhY,KAAKmP,MAAMyI,UAAUK,uBAK5BjY,KAAKgS,MAAM7B,WA5BtB,yBA+BE,WACE,QAAKnQ,KAAKmP,MAAMwI,YAIZ3X,KAAKkY,mBACPlY,KAAK0X,mBAAgBnX,EACrBP,KAAK0T,SAAS,CACZiE,UAAU,EACV9O,WAAOtI,KAEF,MA1Cb,4BAgDE,WACE,OAA+B,MAA3BP,KAAKgS,MAAM6F,cAIU7X,KAAKgS,MAAM6F,iBACR7X,KAAK0X,kBAtDrC,GAAmC1H,IAAMwH,WCDlC,SAASW,GAAkBnG,GAChC,MAAwDoG,qBAAxD,mBAAOC,EAAP,KAA6BC,EAA7B,KAaA,OAXA7H,qBAAU,WACR6H,OAAwB/X,GAExBsO,EAAwBmD,EAAM1C,SAAS1N,aAAamN,MAAK,SAAAsJ,GACvDC,EAAwB,IAAIzT,EAAIwT,OAC/BrK,OAAM,SAAArF,GACPC,QAAQC,MAAMF,GACd2P,GAAwB,QAEzB,CAACtG,EAAM1C,SAAS1N,cAES,MAAxByW,EACK,eAACtG,GAAD,CAASE,gBAAgB,aAEL,IAAzBoG,EACK,sBAAKnG,UAAW,eAAhB,+EAIP,eAAC,GAAD,CACElQ,GAAIR,YAAUM,IAAIU,kBAAkBR,GACpCgR,eAAgBA,GAChB7M,KAKJ,WACE,GAA4B,MAAxBkS,IAAyD,IAAzBA,EAClC,MAAO,GAGT,OAAOA,EAAqBxX,MAAMmR,EAAM1C,SAAS5L,IAAKsO,EAAM1C,SAASC,cAV7DgJ,GACN3C,UAAU,IAahB,SAAS5C,GAAeR,GAErB7K,OAAe6Q,yBAA2B,kBAAMhG,EAAOX,YCtDnD,SAAS4G,GAAazG,GAC3B,OAAO,oBAAG0G,KAAM1G,EAAM2G,IAAKjN,OAAO,SAASkN,IAAI,sBAAxC,SAA+D5G,EAAM7L,OCWvE,SAAS0S,GAAQ7G,GACtB,IAAM8G,EAAeC,iBAA8B,MACnD,EAA8CX,oBAAS,GAAvD,mBAAOY,EAAP,KAAwBC,EAAxB,KAIA,OClBK,SAA2BpF,EAAmCqF,GACnE,IAAMC,EAAkBC,sBAAYF,EAAS,CAACA,IAE9CzI,qBAAU,WACR,IAAM4I,EAAW,SAACC,GACXzF,EAAIsD,UAAWtD,EAAIsD,QAAQoC,SAASD,EAAM5N,SAK/CyN,EAAgBG,IAKlB,OAFAnQ,SAASqQ,iBAAiB,YAAaH,GACvClQ,SAASqQ,iBAAiB,aAAcH,GAAU,GAC3C,WACLlQ,SAASsQ,oBAAoB,YAAaJ,GAC1ClQ,SAASsQ,oBAAoB,aAAcJ,GAAU,MAEtD,CAACF,EAAiBtF,IDHrB6F,CAAkBZ,GAAc,kBAAMG,GAAmB,MAGvD,uBAAKjX,GAAIR,YAAUM,IAAIC,QAAQC,GAAI6R,IAAKiF,EAAxC,UACE,sBAAK9W,GAAIR,YAAUM,IAAIC,QAAQE,SAAU0U,QAAS,kBAAMsC,GAAoBD,IAAkBW,KAAK,SAAnG,qBAGA,sBAAKzH,UAAU,WAAW0H,QAASZ,IACnC,uBAAK9G,UAAU,OAAO0H,QAASZ,EAA/B,UAiBJ,WACE,IAAMa,EACJ,yBACE7X,GAAIR,YAAUM,IAAIC,QAAQG,2BAC1BrB,MAAOmR,EAAMjQ,QAAQ2N,oBACrB4F,SAAU,SAAAgE,GAAK,OAAIhE,EAAS,CAAE5F,oBAAqB4J,EAAM5N,OAAO7K,SAHlE,SAKGa,4BAA0BwD,KAAI,SAAAtE,GAAC,OAAI,yBAAQC,MAAOD,EAAEgB,YAAjB,SAAmDhB,EAAEe,SAAlBf,EAAEgB,kBAG7E,OAAO,eAACkY,GAAD,CAAQzU,KAAK,UAAUxE,MAAOgZ,IA1BhCE,GA6BP,WACE,IAAMF,EACJ,0BACE7X,GAAIR,YAAUM,IAAIC,QAAQI,WAC1BtB,MAAOmR,EAAMjQ,QAAQ8F,SACrByN,SAAU,SAAAgE,GAAK,OAAIhE,EAAS,CAAEzN,SAAUtC,SAAS+T,EAAM5N,OAAO7K,MAAO,OAHvE,UAKE,0BAAQA,MAAOoC,WAAS6E,aAAxB,sCAAgE,IAAhE,WACA,yBAAQjH,MAAOoC,WAASgG,YAAxB,mCAGJ,OAAO,eAAC6Q,GAAD,CAAQzU,KAAK,YAAYxE,MAAOgZ,IAvClCG,GA0CP,WACE,IAAQtW,EAAQsO,EAARtO,IACR,GAAW,MAAPA,EACF,OAEF,OAAOuW,EAAc,cAAe,gBAAiBvW,EAAIgH,WAAYsH,EAAMjQ,QAAQ0I,YAAY,SAAA5J,GAAK,OAAIyU,EAAS,CAAE7K,WAAY5J,OA9C1HqZ,GAiDP,WACE,IAAQxW,EAAQsO,EAARtO,IACR,GAAW,MAAPA,EACF,OAEF,OAAOuW,EACL,gBACA,kBACAvW,EAAI8G,aACJwH,EAAMjQ,QAAQwI,cACd,SAAA1J,GAAK,OAAIyU,EAAS,CAAE/K,aAAc1J,OA1D/BsZ,GA8DP,WACE,IAAMN,EACJ,+BACE,wBACE7X,GAAIR,YAAUM,IAAIC,QAAQK,iBAC1BS,KAAK,WACLuX,QAASpI,EAAMjQ,QAAQwO,eACvB+E,SAAU,SAAAgE,GAAK,OAAIhE,EAAS,CAAE/E,iBAAkB+I,EAAM5N,OAAO0O,eAInE,OAAO,eAACN,GAAD,CAAQzU,KAAM,UAAWxE,MAAOgZ,IAxElCQ,GA2EP,WACE,IAAMR,EACJ,+BACE,wBACE7X,GAAIR,YAAUM,IAAIC,QAAQM,kBAC1BQ,KAAK,WACLuX,QAASpI,EAAMjQ,QAAQgG,gBACvBuN,SAAU,SAAAgE,GAAK,OAAIhE,EAAS,CAAEvN,kBAAmBuR,EAAM5N,OAAO0O,eAIpE,OAAO,eAACN,GAAD,CAAQzU,KAAM,eAAgBxE,MAAOgZ,IArFvCS,GAwFP,WACE,IAAMT,EACJ,+BACE,wBACE7X,GAAIR,YAAUM,IAAIC,QAAQO,gBAC1BO,KAAK,WACLuX,QAASpI,EAAMjQ,QAAQiG,cACvBsN,SAAU,SAAAgE,GAAK,OAAIhE,EAAS,CAAEtN,gBAAiBsR,EAAM5N,OAAO0O,eAIlE,OAAO,eAACN,GAAD,CAAQzU,KAAM,iBAAkBxE,MAAOgZ,IAlGzCU,GACD,uBAAKrI,UAAU,cAAf,UACE,eAACuG,GAAD,CAActS,KAAK,QAAQwS,IAAI,sEAC/B,8CACA,eAACF,GAAD,CAActS,KAAK,iBAAiBwS,IAAI,uDAiGhD,SAASsB,EAAc5U,EAAcmV,EAAgBzV,EAAQ0V,EAAsBnF,GACjF,IAAMuE,EACJ,yBAAQhZ,MAAO4Z,EAAcnF,SAAU,SAAAgE,GAAK,OAAIhE,EAAS/P,SAAS+T,EAAM5N,OAAO7K,MAAO,MAAtF,SACGiE,EAAU4V,kBAAkB3V,GAAGG,KAAI,SAAAyV,GAAa,OAKlC9Z,EALgD8Z,EAAc9Z,MAK/C2E,EALsDmV,EAAcnV,MAM7F,0BAAQ3E,MAAOA,EAAf,UAAmC2Z,EAAnC,IAA4ChV,EAAMwO,KAAK,SAA5BnT,GADpC,IAAmBA,EAAe2E,OAFlC,OAAO,eAACsU,GAAD,CAAQzU,KAAMA,EAAMxE,MAAOgZ,IAOpC,SAASvE,EAASvT,GAChBiQ,EAAMsD,SAAN,eAAoBvT,KAIxB,SAAS+X,GAAO9H,GACd,OACE,uBAAKE,UAAU,SAAf,UACE,uBAAKA,UAAU,aAAf,UAA6BF,EAAM3M,KAAnC,OACA,sBAAK6M,UAAU,cAAf,SACGF,EAAMnR,W,4CEpJR,SAAS+Z,GAAa5I,GAC3B,MAAsCoG,mBAASpG,EAAM6I,kBAArD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OAAO,eAAC,KAAD,CAAUC,UAAWhJ,EAAMgJ,UAAWC,UAAWH,EAAanE,QAErE,WACEoE,GAAgBD,IAHX,SAAqFA,OAAcva,EAAYyR,EAAM/I,gBCJvH,SAASiS,GAAelJ,GAC7B,MAAoCoG,oBAAS,GAA7C,mBAAO+C,EAAP,KAAmBC,EAAnB,KAEA,OACE,uBAAKlJ,UAAU,iBAAiBmJ,aAAcC,EAAqBC,aAAcD,EAAjF,UACE,sBAAKpJ,UAAU,YAAf,SAA4BF,EAAM7L,OACjCgV,GASI,sBAAKjJ,UAAU,cAAf,SAA8BF,EAAM7B,cAL7C,SAASmL,IACPF,GAAeD,ICcZ,SAASK,GAAiBxJ,GAC/B,MAA0CoG,wBAA4C7X,GAAtF,mBAAOkb,EAAP,KAAsBC,EAAtB,KAEAjL,qBAAU,WACRiL,OAAiBnb,GnBiFd,SAAP,kCmB/EIob,CAAiB3J,EAAM1C,SAAS1N,aAAamN,MAAK,SAAA0M,GAChDC,EAAiBD,MAChBzN,OAAM,SAAArF,GACPC,QAAQC,MAAMF,GACd+S,GAAiB,QAElB,CAAC1J,EAAM1C,SAAS1N,cAEnB,IAAQ2N,EAA2DyC,EAA3DzC,aAAchE,EAA6CyG,EAA7CzG,WAAYgF,EAAiCyB,EAAjCzB,eAAgB/E,EAAiBwG,EAAjBxG,aAC5CoQ,EAAmB,CACvBlY,IAAKsO,EAAM1C,SAAS5L,IACpB+X,gBACAzT,cAAegK,EAAMhK,cACrBuD,cAGF,OAAqB,MAAjBkQ,EACK,eAAC1J,GAAD,CAASE,gBAAgB,YAIhC,sBAAKC,UAAU,mBAAf,SACE,uBAAKA,UAAU,YAAf,UACE,uCACA,sBAAKlQ,GAAIR,YAAUM,IAAIa,WAAWC,KAAKZ,GAAvC,SACG6Z,GAAmBD,EAASrM,KAE9BgB,GAAkBuL,GAAkBF,EAASrM,EAAc/D,IAAe6B,kBAanF,SAASyO,GAAkBF,EAAkBrM,EAAoBlC,GAC/D,OACE,uCACE,uCACA,sBAAKrL,GAAIR,YAAUM,IAAIa,WAAWE,KAAKb,GAAvC,SACG+Z,GAAWH,EAASrM,EAAclC,KAErC,yCACA,sBAAKrL,GAAIR,YAAUM,IAAIa,WAAWG,OAAOd,GAAzC,SACGga,GAAaJ,EAASrM,EAAclC,KAEvC,4CACA,sBAAKrL,GAAIR,YAAUM,IAAIa,WAAWI,UAAUf,GAA5C,SACGia,GAAgBL,EAASrM,EAAclC,KAE1C,2CACA,+BACG6O,GAAeN,EAASrM,EAAclC,QAM/C,SAASwO,GAAmBD,EAAkBrM,GAC5C,OAAO,eAACqL,GAAD,CAAcI,UAAWvV,EAAkBmW,EAAQlY,IAAK6L,EAAa7J,MAAOmV,kBAAkB,EAAO5R,YAE5G,WACE,IAAQsC,EAAeqQ,EAAfrQ,WACR,OACE,uCACG4Q,GAAcP,EAASrM,GACvB6M,EAAiB,kBAAmB7M,EAAa8M,cAAc9Q,IAC/D6Q,EAAiB,iBAAkB7M,EAAa+M,gBAChDF,EAAiB,aAAc7M,EAAab,SAASnD,IACrD6Q,EAAiB,6BAA8B7N,EAAagB,EAAchE,IAC1E6Q,EAAiB,iBAAkB7M,EAAagN,gBAChDH,EAAiB,aAAc7M,EAAaiN,SAASjR,IACrD6Q,EAAiB,0BAA2B7M,EAAakN,sBAAsBlR,IAC/E6Q,EAAiB,gBAAiB7M,EAAazC,YAAYvB,IAE3D6Q,EAAiB,YAAa7Q,EAAWpF,KAAKuW,UAAUnN,EAAab,SAASkN,EAAQrQ,YAAagE,EAAaoN,WAEhHC,EAAoB,4CAAD,OAC0BrN,EAAa+M,eADvC,KAElBV,EAAQlY,IAAImZ,wBAAwBjB,EAAQrQ,WAAWpF,KAAMoJ,EAAa+M,iBAE3EM,EAAoB,6CAAD,OAC2BrN,EAAaoF,IADxC,KAElBiH,EAAQlY,IAAIoZ,yBAAyBlB,EAAQrQ,WAAWpF,KAAMoJ,EAAaoF,YAMnF,SAASyH,EAAiB/W,EAAc9D,GACtC,OAAOwb,GAAW1X,EAAwB,kBAAX9D,EAAsBA,EAASgH,KAAKS,UAAUzH,IAG/E,SAASqb,EAAoBvX,EAAc2X,GACzC,OAAqB,MAAjBA,EACKD,GAAW1X,EAAM,aAEjB4X,GAAYrB,EAASvW,EAAM2X,IAKxC,SAASjB,GAAWH,EAAkBhZ,EAAYyK,GAChD,GAAIzK,EAAK8C,OAASkW,EAAQlY,IAAIoC,WAAWoX,WACvC,OAAO,gDAGT,IAAMra,EAAOsa,IAAiB,kBAAM9P,EAAYqE,kBAAkB9O,MAClE,OAAY,MAARC,EACK,gDAEW,kBAATA,EACF,+DAAwBA,EAAxB,OAGFua,GAAYxB,EAAS/Y,EAE5B,WACE,IACE,OAAOwK,EAAYgQ,aAAaxa,EAAcD,GAC9C,MAAO+F,GACP,MAAM,+BAAN,OAAsCA,EAAtC,MAN8B2U,IAAqB,QAWzD,SAAStB,GAAaJ,EAAkBhZ,EAAYyK,GAClD,IAAMvK,EAASqa,IAAiB,kBAAQva,EAAaE,QAAiCuK,EAAYsE,oBAAoB/O,MACtH,OAAc,MAAVE,EACK,gDAEa,kBAAXA,EACF,iEAA0BA,EAA1B,OAGFsa,GAAYxB,EAAS9Y,EAE5B,WACE,IACE,OAAQA,EAAkBya,UAC1B,MAAO5U,GACP,MAAM,iCAAN,OAAwCA,EAAxC,MANgC6U,IAAmB,UAWzD,SAASvB,GAAgBL,EAAkBhZ,EAAYyK,GACrD,IAAMtK,EAAYoa,IAAiB,kBAAM9P,EAAYuE,4BAA4BhP,MACjF,OAAiB,MAAbG,GAA0C,kBAAdA,EACvB,gDAGFqa,GAAYxB,EAAS7Y,EAAW,aAGzC,SAASmZ,GAAeN,EAAkBhZ,EAAYyK,GACpD,IAAMoQ,EAAmB7a,EACzB,OAAiC,MAA7B6a,EAAiBC,SACZ,gDAGFN,GAAYxB,EAAS6B,EAAiBC,SAAU,YAGzD,SAASP,GAAoBQ,GAC3B,IACE,OAAOA,IACP,MAAOhV,GACP,OAAOJ,KAAKS,UAAUL,IAI1B,SAASyU,GAAYxB,EAAkBgC,EAAUC,GAC/C,OAAO,eAACjD,GAAD,CAAcI,UAAW6C,EAAOhD,kBAAkB,EAAO5R,YAAa,kBAAMkT,GAAcP,EAASgC,MAG5G,SAASzB,GAAcP,EAAkBgC,GACvC,IAAME,EAAUC,GAAiBnC,EAASgC,GAiB1C,OAdE,qCACGE,EAAQ5Y,KAAI,SAAA6B,GACX,IAcmBzB,EAAazE,EAAYmd,EAdtCC,GAca3Y,EAdayB,EAAKzB,IAcLzE,EAdUkG,EAAKlG,MAcHmd,EAdUJ,EAe5C,OAAV/c,EACKkc,GAAWzX,EAAK,aACJ/E,IAAVM,EACFkc,GAAWzX,EAAK,aACdzE,aAAiBqd,MACnBjB,GAAYrB,EAAStW,EAAKzE,GACxBsd,GAAStd,GAuFxB,SAAoB+a,EAAkBtW,EAAazE,GACjD,OACE,uBAAKqR,UAAU,SAAmB,YAAW5M,EAA7C,UACE,uBAAK4M,UAAU,MAAf,UAAsB5M,EAAtB,OACA,sBAAK4M,UAAU,QAAf,SAAwBkM,GAAYxC,EAAS/a,OAFlByE,GAxFpB+Y,CAAWzC,EAAStW,EAAKzE,GA+NtC,SAAeA,GACb,MAA6B,oBAAfA,EAAMmE,MACS,oBAAjBnE,EAAMsE,OAhOLmZ,CAAMzd,GAwBrB,SAAmB+a,EAAkBtW,EAAazE,GAChD,IAAM0d,EAAU5a,EAAW6a,KAAK3d,EAAM0d,WACtC,OAAuB,IAAnBA,EAAQna,OACH2Y,GAAWzX,EAAK,MAGrB,uBAAK4M,UAAU,QAAkB,YAAW5M,EAA5C,UACE,uBAAK4M,UAAU,MAAf,UAAsB5M,EAAtB,IAA4B,OAC5B,sBAAK4M,UAAU,QAAf,SAAwBqM,EAAQrZ,KAAI,SAACtE,EAAG0F,GAAJ,OAAU8X,GAAYxC,EAAShb,EAAE,GAAIA,EAAE,GAAI0F,QAC/E,sBAAK4L,UAAU,SAAf,SAAyB,QAHC5M,GA7BrBmZ,CAAU7C,EAAStW,EAAKzE,GACL,kBAAVA,EAqCtB,SAAsB+a,EAAkBtW,EAAazE,GACnD,OAAgD,IAA5Ckd,GAAiBnC,EAAS/a,GAAOuD,OAC5B2Y,GAAWzX,EAAK,MAGrB,uBAAK4M,UAAU,SAAmB,YAAW5M,EAA7C,UACE,uBAAK4M,UAAU,MAAf,UAAsB5M,EAAtB,OACA,sBAAK4M,UAAU,QAAf,SAAwBkM,GAAYxC,EAAS/a,OAFlByE,GAzCtBoZ,CAAa9C,EAAStW,EAAKzE,GAiDxC,SAA2B+a,EAAkBtW,EAAazE,EAAYmd,GACpE,OACE,uBAAK9L,UAAU,OAAiB,YAAW5M,EAA3C,UACE,uBAAK4M,UAAU,MAAf,UAAsB5M,EAAtB,OACA,sBAAK4M,UAAU,QAAf,SAAwByM,QAFCrZ,GAM7B,SAASqZ,IACP,GAAIR,GAASH,GACX,OAAQ1Y,GACN,IAAK,OACH,MAAM,GAAN,OAAUzE,EAAV,wBAA+B4E,EAAkBmW,EAAQlY,IAAK7C,GAA9D,KACF,IAAK,QACH,OAAO+d,GAAmBhD,EAAQlY,IAAImb,UAAWhe,GAGvD,OAAIie,GAASd,IAAmB,gBAAR1Y,EACfsZ,GAAmBhD,EAAQlY,IAAIqb,YAAale,GAEjDie,GAASd,IAAmB,UAAR1Y,EACfsZ,GAAmBhD,EAAQlY,IAAIsb,UAAWne,GAE/Coe,GAAWjB,IAAmB,UAAR1Y,EACjBsZ,GAAmBhD,EAAQlY,IAAIwb,YAAare,GA0KzD,SAAoBA,GAElB,OAA4B,MAArBA,EAAMse,aAA2C,MAApBte,EAAMue,WA1KpCC,CAAWrB,IAAmB,UAAR1Y,EACjBsZ,GAAmBhD,EAAQlY,IAAI4b,UAAWze,GAE5C0e,KAAavW,UAAUnI,IA5ErB2e,CAAkB5D,EAAStW,EAAKzE,EAAOmd,IA3B5C,MAAwB,aAApBjX,EAAK0Y,WAEL,sBAAKvN,UAAU,WAA0B,YAAWnL,EAAKzB,IAAzD,SACG2Y,GAD4BlX,EAAKzB,KAKjC2Y,OAyBf,SAAShB,GAAYrB,EAAkBtW,EAAazE,GAClD,OAAqB,IAAjBA,EAAMuD,OACD2Y,GAAWzX,EAAK,MAGrB,uBAAK4M,UAAU,QAAkB,YAAW5M,EAA5C,UACE,uBAAK4M,UAAU,MAAf,UAAsB5M,EAAtB,SACA,sBAAK4M,UAAU,QAAf,SAAwBrR,EAAMqE,KAAI,SAACtE,EAAG0F,GAAJ,OAAU8X,GAAYxC,EAAShb,OAAGL,EAAW+F,QAC/E,sBAAK4L,UAAU,SAAf,iBAH0B5M,GA+ElC,SAASyX,GAAWzX,EAAyBzE,GAC3C,OACE,uBAAKqR,UAAU,OAAiB,YAAW5M,EAA3C,UACU,MAAPA,OAAc/E,EAAY,uBAAK2R,UAAU,MAAf,UAAsB5M,EAAtB,OAC3B,sBAAK4M,UAAU,QAAf,SAAwBrR,MAFCyE,GAO/B,SAAS8Y,GAAYxC,EAAkB/a,EAAYyE,EAAcuB,GAC/D,IAAM6Y,EAAYC,GAAa/D,EAAS/a,GAGxC,OAFAyE,EAaA,WACE,GAAW,MAAPA,EACF,OAAOoa,EACF,GAAiB,MAAbA,EACT,MAAM,GAAN,OAAUpa,EAAV,aAAkBqa,GAAa/D,EAAS/a,IAE1C,OAAOyE,EAnBHsa,GAEe,kBAAV/e,EACFkc,GAAWzX,EAAD,WAAUzE,EAAV,MAEE,kBAAVA,GAGU,mBAAVA,EAFFkc,GAAWzX,EAAKzE,EAAMmX,YAKxB,eAAC4C,GAAD,CAAcI,UAAW1V,EAAiBuV,kBAAkB,EAAM5R,YAAa,kBAAMkT,GAAcP,EAAS/a,KAAzEgG,GAY5C,SAAS8Y,GAAa/D,EAAkBgC,GACtC,GAAW,MAAPA,EAAJ,CAGA,GAAIO,GAASP,GACX,OAAOiC,EAAWpa,EAAkBmW,EAAQlY,IAAKka,EAAIlY,OAEvD,GAAIoa,GAAclC,GAChB,OAAOiC,EAAW,aAEpB,GAAIf,GAASlB,GACX,OAAOiC,EAAW,QAEpB,GAAIZ,GAAWrB,GACb,OAAOiC,EAAW,UAEpB,IAAME,SAAiBnC,EACvB,GAAgB,WAAZmC,GAAoC,WAAZA,GAAoC,YAAZA,EAGpD,OAAOF,EAAW,UAElB,SAASA,EAAWG,GAClB,IAAM3a,EAIR,WACE,IACE,MAA2B,oBAAhBuY,EAAIL,QACNK,EAAIL,UAETY,GAASP,IAA6B,MAApBA,EAAYvY,KAClBuY,EAAYvY,KACdkT,eAEd,EACA,MAAO5P,GACP,QAfW4U,GACb,OAAe,MAARlY,EAAe2a,EAAf,UAA0BA,EAA1B,aAAoC3a,EAApC,MAmBX,SAAS0Y,GAAiBnC,EAAkBgC,GAC1C,OAAW,MAAPA,EACK,GAEF3d,OAAO+E,KAAK4Y,GAChB1Y,KAAI,SAAAI,GAAG,MAAK,CACXA,MACAma,WAAYQ,GAAiBrE,EAASgC,EAAKtY,GAC3CzE,MAAO+c,EAAItY,OAEZL,QAAO,SAAAib,GACN,OAAsB,IAAlBA,EAAGT,aAGA7D,EAAQ5T,eAAmC,aAAlBkY,EAAGT,eAIzC,IAAMU,GAAqB,IAAIC,IAAI,CAAC,SAAU,YAAa,WACrDC,GAAqB,IAAID,IAAI,CAAC,UAAW,WAC/C,SAASH,GAAiBrE,EAAkBgC,EAAUtY,GACpD,IAAQmW,EAAkBG,EAAlBH,cACR,GAAI0C,GAASP,GAAM,CACjB,GAAIuC,GAAmBG,IAAIhb,GACzB,OAAO,EAET,IAAKmW,EACH,OAAO,EAET,IAAM8E,EAAW9a,EAAkBmW,EAAQlY,IAAKka,EAAIlY,MACpD,OAAO8a,EAAgB/E,EAAcgF,2BAA2B/f,IAAI6f,IAEtE,OAAIzB,GAASlB,IACHyC,GAAmBC,IAAIhb,IAAQkb,EAAgB/E,GAAiBA,EAAciF,gBAEpFZ,GAAclC,GACT4C,EAAgB/E,GAAiBA,EAAckF,sBAEpD1B,GAAWrB,IACN4C,EAAgB/E,GAAiBA,EAAcmF,kBAIxD,SAASJ,EAAgBK,GACvB,OAAKA,MAGEA,EAAoBP,IAAIhb,IAAc,aASjD,SAAS6Y,GAAStd,GAChB,MAAuC,kBAAxBA,EAAe6E,KAGhC,SAASoZ,GAASje,GAChB,OAAuC,MAA/BA,EAAeigB,aAGzB,SAAS7B,GAAWpe,GAClB,OAA4C,MAApCA,EAAiBkgB,gBAG3B,SAASjB,GAAcjf,GACrB,OAAyB,MAArBA,EAAMmgB,aAGH7C,GAAStd,EAAMmgB,aAQxB,SAASpC,GAAmBqC,EAAcpgB,GACxC,IAAM2E,ECrfD,SAA0Byb,EAAcC,GAC7C,IAEMC,EAFWlhB,OAAO+E,KAAKic,GAC1B/b,KAAI,SAAA7E,GAAC,OAAI4gB,EAAQ5gB,MAAI4E,QAAO,SAAArE,GAAC,MAAiB,kBAANA,KACbqE,QAAO,SAAAmc,GAAC,OAAoB,KAAfA,EAAIF,MAE/C,OAAOC,EACJlc,QAAO,SAACmc,EAAG9a,GAAJ,OAAU6a,EAAaE,QAAQD,KAAO9a,KAC7CpB,KAAI,SAAAkc,GAAC,OAAIH,EAAQG,MD8eNE,CAAiBL,EAASpgB,GACxC,OAAqB,IAAjB2E,EAAMpB,OACD,qCAAGvD,IAGL,eAACqa,GAAD,CAAgB/U,KAAMtF,EAAMmX,WAA5B,SAGE,8BAAKxS,EAAMN,KAAI,SAACG,EAAMiB,GAAP,OAAa,8BAAajB,GAAJiB,UE/ezC,SAASib,GAAWvP,GACzB,IAAQzG,EAAsDyG,EAAtDzG,WAAYgE,EAA0CyC,EAA1CzC,aAAciS,EAA4BxP,EAA5BwP,aAAc/T,EAAcuE,EAAdvE,KAAM/J,EAAQsO,EAARtO,IAClD4C,EAAI,EAYR,OAXAmb,2BAAgB,WACd,IAAMhf,EAAa0G,SAASuY,eAAelgB,YAAUM,IAAIW,WAAWT,IAC9DuN,EAAepG,SAASwY,cAAT,WAA2BngB,YAAUM,IAAIW,WAAWT,GAApD,aAA2DR,YAAUM,IAAIW,WAAWC,oBACzG,GAAID,GAAc8M,EAAc,CAC9B,IAAMqS,EAAerS,EAAasS,wBAC5BC,EAAiBrf,EAAWof,yBAC9BD,EAAaG,EAAI,GAAKH,EAAaG,EAAIH,EAAazM,OAAS2M,EAAe3M,SAC9E5F,EAAayS,eAAe,CAAEC,MAAO,SAAUC,OAAQ,cAG1D,CAAC3S,IACG,sBAAKvN,GAAIR,YAAUM,IAAIW,WAAWT,GAAlC,SAEP,SAASmgB,EAAWvf,EAAYqG,GAC9B,IAAMkH,EAAWlH,EAAYrG,GACvBsP,EAAY,YAActP,IAAS2M,EAAe,IAAM/N,YAAUM,IAAIW,WAAWC,kBAAoB,IACrG6d,EAAW9a,EAAkB/B,EAAKd,EAAK8C,MACvCmY,EAAQ,sBAAKlH,QAAS,kBAAM6K,EAAa5e,IAAOsP,UAAWA,EAAnD,SAA+DqO,IAC7E,OAAwB,IAApBpQ,EAAS/L,OACJ,sBAAe8N,UAAU,UAAU,YAAWqO,EAA9C,SAAyD1C,GAA/CvX,KAGf,sBAAK,YAAWia,EAAhB,SACE,eAAC,KAAD,CAAUvF,UAAW6C,EAArB,SACG1N,EAASjL,KAAI,SAAAkd,GAAC,OAAID,EAAWC,EAAGnZ,SAFN3C,KAXS6b,CAAW5W,EAAYiC,EAAoBC,EAAMlC,MCpB1F,SAAS8W,KACd,Mb2HK,WACL,IAAMzG,EAAU5L,IAAMsS,WAAWvS,IACjC,GAAe,MAAX6L,EACF,MAAM,IAAIhX,MAAM,0BAElB,OAAOgX,EahIqB2G,GAApBpT,EAAR,EAAQA,MAAOqB,EAAf,EAAeA,SACTlB,EAAWH,EAAMG,SAEvB,OACE,sBAAK4C,UAAU,MAAf,SACE,gBAAC,KAAD,CAAWsQ,MAAM,aAAaC,YAAa,GAAIC,aAAa,EAA5D,UACE,0BAAQxQ,UAAU,qBAAlB,UACE,qBAAIlQ,GAAG,QAAP,mCACA,eAAC,GAAD,CACE0B,IAAiB,MAAZ4L,OAAmB/O,EAAY+O,EAAS5L,IAC7C3B,QAASoN,EAAMpN,QACfuT,SAAU,SAAAvT,GAAO,OACfyO,EAAS,CACP3N,KAAM,cACNd,kBAIR,gBAAC,KAAD,CAAWygB,MAAM,WAAWG,QAAS,GAAIF,YAAY,MAArD,UAoBN,WACE,OAAItT,EAAMpN,QAAQgG,gBAEd,gBAAC,KAAD,CAAWya,MAAM,aAAaC,YAAkC,GAArB9a,OAAOib,YAAlD,UACGC,IAQP,WACE,GAAgB,MAAZvT,GAAoBH,EAAMK,kBAAoBR,EAAgBqB,QAChE,OAAO,eAAC,GAAD,IAGT,OACE,eAAC,GAAD,CAA0BwH,aAAc,kBAAM1I,EAAM5F,MAApD,SACE,eAAC,GAAD,CAA8B+F,SAAUA,MAdvCwT,MAIED,IAeT,SAASA,IACP,OACE,eAAC,GAAD,CACE7gB,GAAIR,YAAUM,IAAIS,eAAeP,GACjCsT,SAAU,SAAA/L,GAAI,OAAIiH,EAAS,CAAE3N,KAAM,WAAY0G,UAC/CoN,QAAS,SAAArC,GACP,GAAgB,MAAZhF,EAAJ,CAGA,IAAMyT,EC3EX,SAA8BtV,EAAgBlC,EAAwB+I,EAAyB0O,GACpG,IAAM/Z,EAAcuE,EAAoBC,EAAMlC,GACxC0X,EAAcD,EAAYld,WAE5Bod,EAA2C,CAAEtgB,KAAM2I,EAAYkJ,MAAOlJ,EAAWmD,SAASnD,IAE9F,OAEA,SAAS4X,EAAkBvgB,GACzB,IADqC,EA6BjBwgB,EA5BdjT,EAAWlH,EAAYrG,GADQ,cAEjBuN,GAFiB,IAErC,2BAA8B,CAAC,IAApBxC,EAAmB,QAC5B,GAAIA,EAAMjI,OAASud,EAAYI,WAAY,CACzC,GAAkB1V,EAAMgH,IAsBfL,EAAM,GArBb,SAGF,IAAMgP,EAAa/U,EAAaZ,EAAOpC,GAEvC,IAmBgB6X,EAnBCE,IAoBHhP,EAAM,IAAM8O,EAAU9O,EAAM,GAnBxC,OAGF,IAAMiP,EAAmB5V,EAAMjI,OAASud,EAAYO,eAC9CC,EAAeP,EAAUzO,QAAU6O,GAAchP,EAAM,KAAOgP,EAC/DC,GAAqBE,IACxBP,EAAY,CAAEtgB,KAAM+K,EAAO8G,MAAO6O,IAItCH,EAAkBxV,IArBiB,+BAHvCwV,CAAkB5X,GACX2X,EAAUtgB,KDqEY8gB,CACjBvU,EAAMpN,QAAQ8F,SACdyH,EAAS/D,WACT+I,EACAhF,EAAS5L,KAEX8M,EAAS,CAAE3N,KAAM,oBAAqBD,KAAMmgB,MAE9C5c,KAAMgJ,EAAM5F,KACZ8K,UAAWsP,IACX7P,UAAU,EACV2B,kBAAkB,EAClBzC,eAAgB4Q,KAhEfC,GAsET,WACE,GAAgB,MAAZvU,GAAoBH,EAAMK,kBAAoBR,EAAgBqB,QAChE,OAAO,eAAC,GAAD,IACF,GAAIlB,EAAMK,kBAAoBR,EAAgBpK,MACnD,OAAO,sBAAKsN,UAAW,eAAhB,+EAGT,OACE,eAAC,GAAD,UACE,gBAAC,KAAD,CAAWsQ,MAAM,WAAWG,QAAS,GAAIF,YAAY,MAArD,UACE,eAAC,GAAD,CACE/e,IAAK4L,EAAS5L,IACd6L,aAAcD,EAASC,aACvBhE,WAAY+D,EAAS/D,WACrBiW,aAAc,SAAA5e,GAAI,OAAI4N,EAAS,CAAE3N,KAAM,oBAAqBD,UAC5D6K,KAAM0B,EAAMpN,QAAQ8F,WAEtB,eAAC,GAAD,CACEyH,SAAUA,EACVC,aAAcD,EAASC,aACvBhE,WAAY+D,EAAS/D,WACrBC,aAAc8D,EAAS9D,aACvB+E,eAAgBpB,EAAMpN,QAAQwO,eAC9BvI,cAAemH,EAAMpN,QAAQiG,qBA5F9B8b,WAMT,SAASH,IACP,GAAgB,MAAZrU,EAAJ,CAIA,IAAQC,EAA6BD,EAA7BC,aAAchE,EAAe+D,EAAf/D,WACtB,OAAOgE,IAAiBhE,OAAahL,EAAY,CAC/CkU,MAAOlG,EAAagB,EAAchE,GAClCoJ,IAAKpF,EAAaoF,MAqFtB,SAASiP,EAAmBpR,GAE1BhL,YAAW,kBAAMgL,EAAOuR,UAAS,KAGhCpc,OAAeqc,oBAAsB,SAAC7d,GACrC,IAAMqQ,EAAchE,EAAO2D,WACR,MAAfK,GAIJhE,EAAOyR,aAAa,YAAa,CAAC,CAChC3P,MAAOkC,EAAY0N,oBACnB/d,Y,YEtIRge,KAASC,OACP,eAAClU,GAAD,UACE,eAAC,GAAD,MAEF/G,SAASuY,eAAe,W","file":"static/js/main.a4cec693.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constants = void 0;\n__exportStar(require(\"./compilerVersions.generated\"), exports);\nexports.constants = __importStar(require(\"./constants\"));\n__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compilerVersionCollection = void 0;\nexports.compilerVersionCollection = [\n    { version: \"4.4.2\", packageName: \"typescript-4.4.2\" },\n    { version: \"4.3.5\", packageName: \"typescript-4.3.5\" },\n    { version: \"4.2.4\", packageName: \"typescript-4.2.4\" },\n    { version: \"4.1.5\", packageName: \"typescript-4.1.5\" },\n    { version: \"4.0.5\", packageName: \"typescript-4.0.5\" },\n    { version: \"3.9.7\", packageName: \"typescript-3.9.7\" },\n    { version: \"3.8.3\", packageName: \"typescript-3.8.3\" },\n    { version: \"3.7.5\", packageName: \"typescript-3.7.5\" },\n    { version: \"3.6.4\", packageName: \"typescript-3.6.4\" },\n    { version: \"3.5.3\", packageName: \"typescript-3.5.3\" },\n    { version: \"3.4.5\", packageName: \"typescript-3.4.5\" },\n    { version: \"3.3.3\", packageName: \"typescript-3.3.3\" },\n    { version: \"@next (4.5.0-dev.20211012)\", packageName: \"typescript-next\" }\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.general = exports.css = void 0;\nexports.css = {\n    options: {\n        id: \"options\",\n        buttonId: \"optionsButton\",\n        compilerVersionSelectionId: \"compilerVersionSelection\",\n        treeModeId: \"treeMode\",\n        bindingEnabledId: \"bindingEnabled\",\n        showFactoryCodeId: \"showFactoryCode\",\n        showInternalsId: \"showInternals\",\n    },\n    mainCodeEditor: {\n        id: \"codeEditor\",\n    },\n    factoryCodeEditor: {\n        id: \"factoryCodeEditor\",\n    },\n    treeViewer: {\n        id: \"treeViewer\",\n        selectedNodeClass: \"selected\",\n    },\n    properties: {\n        node: {\n            id: \"node\",\n        },\n        type: {\n            id: \"type\",\n        },\n        symbol: {\n            id: \"symbol\",\n        },\n        signature: {\n            id: \"signature\",\n        },\n    },\n};\nexports.general = {\n    sourceFileRefreshDelay: 150,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeMode = void 0;\nvar TreeMode;\n(function (TreeMode) {\n    TreeMode[TreeMode[\"forEachChild\"] = 0] = \"forEachChild\";\n    TreeMode[TreeMode[\"getChildren\"] = 1] = \"getChildren\";\n})(TreeMode = exports.TreeMode || (exports.TreeMode = {}));\n","export const SET_CODE = \"SET_CODE\";\n// eslint-disable-next-line\nexport type SET_CODE = typeof SET_CODE;\n\nexport const SET_API_LOADING_STATE = \"SET_API_LOADING_STATE\";\n// eslint-disable-next-line\nexport type SET_API_LOADING_STATE = typeof SET_API_LOADING_STATE;\n\nexport const REFRESH_SOURCEFILE = \"REFRESH_SOURCEFILE\";\n// eslint-disable-next-line\nexport type REFRESH_SOURCEFILE = typeof REFRESH_SOURCEFILE;\n\nexport const SET_SELECTED_NODE = \"SET_SELECTED_NODE\";\n// eslint-disable-next-line\nexport type SET_SELECTED_NODE = typeof SET_SELECTED_NODE;\n\nexport const SET_OPTIONS = \"SET_OPTIONS\";\n// eslint-disable-next-line\nexport type SET_OPTIONS = typeof SET_OPTIONS;\n","import { CompilerApi, Node } from \"../compiler\";\nimport { actions as constants } from \"../constants\";\nimport { ApiLoadingState, OptionsState } from \"../types\";\n\nexport interface SetCode {\n  type: constants.SET_CODE;\n  code: string;\n}\n\nexport function setCode(code: string): SetCode {\n  return {\n    type: constants.SET_CODE,\n    code,\n  };\n}\n\nexport interface SetApiLoadingState {\n  type: constants.SET_API_LOADING_STATE;\n  loadingState: ApiLoadingState;\n}\n\nexport function setApiLoadingState(loadingState: ApiLoadingState): SetApiLoadingState {\n  return {\n    type: constants.SET_API_LOADING_STATE,\n    loadingState,\n  };\n}\n\nexport interface RefreshSourceFile {\n  type: constants.REFRESH_SOURCEFILE;\n  api: CompilerApi;\n}\n\nexport function refreshSourceFile(api: CompilerApi): RefreshSourceFile {\n  return {\n    type: constants.REFRESH_SOURCEFILE,\n    api,\n  };\n}\n\nexport interface SetSelectedNode {\n  type: constants.SET_SELECTED_NODE;\n  node: Node;\n}\n\nexport function setSelectedNode(node: Node): SetSelectedNode {\n  return {\n    type: constants.SET_SELECTED_NODE,\n    node,\n  };\n}\n\nexport interface SetOptions {\n  type: constants.SET_OPTIONS;\n  options: Partial<OptionsState>;\n}\n\nexport function setOptions(options: Partial<OptionsState>): SetOptions {\n  return {\n    type: constants.SET_OPTIONS,\n    options,\n  };\n}\n\nexport type AllActions = SetCode | SetApiLoadingState | RefreshSourceFile | SetSelectedNode | SetOptions;\n","import { Iterator } from \"../compiler\";\n\nexport class ArrayUtils {\n  static from<T>(iterator: Iterator<T>) {\n    const array: T[] = [];\n    while (true) {\n      const next = iterator.next();\n      if (next.done) {\n        return array;\n      }\n      array.push(next.value);\n    }\n  }\n\n  static binarySearch<T>(items: ReadonlyArray<T>, compareTo: (value: T) => number) {\n    let top = items.length - 1;\n    let bottom = 0;\n\n    while (bottom <= top) {\n      const mid = Math.floor((top + bottom) / 2);\n      const comparisonResult = compareTo(items[mid]);\n      if (comparisonResult === 0) {\n        return mid;\n      } else if (comparisonResult < 0) {\n        top = mid - 1;\n      } else {\n        bottom = mid + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  private constructor() {\n  }\n}\n","export function assertNever(value: never, message: string): never {\n  throw new Error(message);\n}\n","export class Box<T> {\n  constructor(readonly value: T) {\n  }\n}\n","export function createHashSet<T>(): HashSet<T> {\n  if (typeof Set !== \"undefined\") {\n    return new Set<T>();\n  }\n  return new Es5HashSet<T>();\n}\n\nexport interface HashSet<T> {\n  has(value: T): boolean;\n  clear(): void;\n  delete(value: T): boolean;\n  add(value: T): void;\n  values(): IterableIterator<T>;\n}\n\nexport class Es5HashSet<T> implements HashSet<T> {\n  private readonly items: T[] = [];\n\n  has(value: T) {\n    // slow and O(n)...\n    return this.items.indexOf(value) >= 0;\n  }\n\n  add(value: T) {\n    if (!this.has(value)) {\n      this.items.push(value);\n    }\n  }\n\n  delete(value: T) {\n    const index = this.items.indexOf(value);\n    if (index === -1) {\n      return false;\n    }\n    this.items.splice(index, 1);\n    return true;\n  }\n\n  clear() {\n    this.items.length = 0;\n  }\n\n  *values() {\n    for (const item of this.items) {\n      yield item;\n    }\n  }\n}\n","export class EnumUtils {\n  private constructor() {\n  }\n\n  static getNames(e: any) {\n    return Object.keys(e)\n      .filter(k => typeof e[k] === \"number\") as string[];\n  }\n\n  static getValues<T extends number>(e: any) {\n    return Object.keys(e)\n      .map(k => e[k])\n      .filter(v => typeof v === \"number\") as T[];\n  }\n\n  static getNamesForValues(e: any) {\n    const values: { [value: number]: string[] } = {};\n\n    for (const name of this.getNames(e)) {\n      const value = e[name];\n      if (values[value] == null) {\n        values[value] = [];\n      }\n      values[value].push(name);\n    }\n\n    return Object.keys(values).map(key => ({\n      value: parseInt(key, 10),\n      names: values[key] as string[],\n    }));\n  }\n}\n","import { CompilerApi, SyntaxKind } from \"../compiler\";\n\nexport function getSyntaxKindName(api: CompilerApi, kind: SyntaxKind) {\n  return getKindCacheForApi(api)[kind];\n}\n\nconst kindCache: { [packageName: string]: { [kind: number]: string } } = {};\n\nfunction getKindCacheForApi(api: CompilerApi) {\n  if (kindCache[api.tsAstViewer.packageName] == null) {\n    kindCache[api.tsAstViewer.packageName] = getKindNamesForApi(api);\n  }\n  return kindCache[api.tsAstViewer.packageName];\n}\n\nfunction getKindNamesForApi(api: CompilerApi) {\n  // some SyntaxKinds are repeated, so only use the first one\n  const kindNames: { [kind: number]: string } = {};\n  for (const name of Object.keys(api.SyntaxKind).filter(k => isNaN(parseInt(k, 10)))) {\n    const value = (api.SyntaxKind as any)[name] as number;\n    if (kindNames[value] == null) {\n      kindNames[value] = name;\n    }\n  }\n  return kindNames;\n}\n","import { ArrayUtils } from \"./ArrayUtils\";\nimport { createLineNumberAndColumns, LineNumberAndColumn } from \"./createLineNumberAndColumns\";\n\n/** An efficient way to compute the line and column of a position in a string. */\nexport class LineAndColumnComputer {\n  private lineInfos: LineNumberAndColumn[];\n\n  constructor(public readonly text: string) {\n    this.lineInfos = createLineNumberAndColumns(text);\n  }\n\n  getNumberAndColumnFromPos(pos: number) {\n    if (pos < 0) {\n      return { lineNumber: 1, column: 1 };\n    }\n\n    const index = ArrayUtils.binarySearch(this.lineInfos, info => {\n      if (pos < info.pos) {\n        return -1;\n      }\n      if (pos >= info.pos && pos < info.pos + info.length + 1) { // `+ 1` is for newline char\n        return 0;\n      }\n      return 1;\n    });\n    const lineInfo = index >= 0 ? this.lineInfos[index] : this.lineInfos[this.lineInfos.length - 1];\n\n    if (lineInfo == null) {\n      return { lineNumber: 1, column: 1 };\n    }\n\n    return { lineNumber: lineInfo.number, column: Math.min(pos - lineInfo.pos + 1, lineInfo.length + 1) };\n  }\n\n  getPosFromLineAndColumn(line: number, column: number) {\n    if (this.lineInfos.length === 0 || line < 1) {\n      return 0;\n    }\n\n    const lineInfo = this.lineInfos[line - 1];\n    if (lineInfo == null) {\n      const lastLineInfo = this.lineInfos[this.lineInfos.length - 1];\n      return lastLineInfo.pos + lastLineInfo.length;\n    }\n    return lineInfo.pos + Math.min(lineInfo.length, column - 1);\n  }\n}\n","export interface LineNumberAndColumn {\n  pos: number;\n  number: number;\n  length: number;\n}\n\nexport function createLineNumberAndColumns(text: string) {\n  const lineInfos: LineNumberAndColumn[] = [];\n  let lastPos = 0;\n\n  for (let i = 0; i < text.length; i++) {\n    if (text[i] === \"\\n\") {\n      pushLineInfo(i);\n    }\n  }\n\n  pushLineInfo(text.length);\n\n  return lineInfos;\n\n  function pushLineInfo(pos: number) {\n    lineInfos.push({\n      pos: lastPos,\n      length: pos - lastPos,\n      number: lineInfos.length + 1,\n    });\n    lastPos = pos + 1;\n  }\n}\n","export function sleep(timeoutMs: number) {\n  return new Promise(resolve => setTimeout(resolve, timeoutMs));\n}\n","import { TreeMode } from \"@ts-ast-viewer/shared\";\n\nexport interface VersionedState {\n  version: 1 | 2 | 3;\n}\n\nexport interface SavedState extends VersionedState {\n  treeMode: TreeMode;\n  showFactoryCode: boolean;\n  showInternals: boolean;\n}\n\nexport interface LocalStorage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n}\n\nexport class StateSaver {\n  static _stateKey = \"tsSimpleAst_savedState\"; // accidentally used name... oh well..\n  private _cachedState: SavedState | undefined = undefined;\n\n  constructor(private readonly localStorage: LocalStorage = window.localStorage) {\n  }\n\n  private get defaultState() {\n    return {\n      version: 3 as 3,\n      treeMode: TreeMode.forEachChild,\n      showFactoryCode: true,\n      showInternals: false,\n    };\n  }\n\n  get() {\n    if (this._cachedState != null) {\n      return this._cachedState;\n    }\n\n    try {\n      const text = this.localStorage.getItem(StateSaver._stateKey);\n      if (text != null) {\n        const data = transform(JSON.parse(text) || this.defaultState);\n        if (this.verifyData(data)) {\n          return data;\n        }\n      }\n    } catch (err) {\n      console.error(\"Problem getting state: \" + err);\n    }\n\n    return this.defaultState;\n  }\n\n  set(sessionState: SavedState) {\n    try {\n      if (!this.verifyData(sessionState)) {\n        return;\n      }\n\n      this.localStorage.setItem(StateSaver._stateKey, JSON.stringify(sessionState));\n      this._cachedState = sessionState;\n    } catch (err) {\n      console.error(\"Problem saving state: \" + err);\n    }\n  }\n\n  private verifyData(data: SavedState): data is SavedState {\n    // better to have some schema transforms in the future, but for now it's simple\n    if (data.version !== 3) {\n      return false;\n    }\n    if (data.treeMode !== TreeMode.forEachChild && data.treeMode !== TreeMode.getChildren) {\n      return false;\n    }\n    if (typeof data.showFactoryCode !== \"boolean\") {\n      return false;\n    }\n    if (typeof data.showInternals !== \"boolean\") {\n      return false;\n    }\n    return true;\n  }\n}\n\n// todo: better transformations\n\nfunction transform(data: SavedState) {\n  transformToVersion2(data);\n  transformToVersion3(data);\n  return data;\n}\n\nfunction transformToVersion2(data: VersionedState) {\n  if (data.version !== 1) {\n    return;\n  }\n  (data as any).showFactoryCode = true;\n  data.version = 2;\n}\n\nfunction transformToVersion3(data: VersionedState) {\n  if (data.version !== 2) {\n    return;\n  }\n  (data as any).showInternals = false;\n  data.version = 3;\n}\n","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nexport class UrlSaver {\n  getUrlCode() {\n    if (document.location.hash && document.location.hash.startsWith(\"#code\")) {\n      try {\n        const code = document.location.hash.replace(\"#code/\", \"\").trim();\n        return decompressFromEncodedURIComponent(code) || \"\"; // will be null on error\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    return \"\";\n  }\n\n  updateUrl(code: string) {\n    if (code.length === 0) {\n      updateLocationHash(\"\");\n    } else {\n      updateLocationHash(`code/${compressToEncodedURIComponent(code)}`);\n    }\n\n    function updateLocationHash(locationHash: string) {\n      window.history.replaceState(undefined, \"\", `#${locationHash}`);\n    }\n  }\n}\n","// dprint-ignore-file\n/* Automatically maintained from package.json. Do not edit! */\n\nimport { CompilerPackageNames, CompilerVersions } from \"@ts-ast-viewer/shared\";\nimport { Node, CompilerApi } from \"./CompilerApi\";\nimport { assertNever } from \"../utils\";\n\nexport async function importCompilerApi(packageName: CompilerPackageNames) {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return await import(\"typescript-4.4.2\");\n        case \"typescript-4.3.5\":\n            return await import(\"typescript-4.3.5\");\n        case \"typescript-4.2.4\":\n            return await import(\"typescript-4.2.4\");\n        case \"typescript-4.1.5\":\n            return await import(\"typescript-4.1.5\");\n        case \"typescript-4.0.5\":\n            return await import(\"typescript-4.0.5\");\n        case \"typescript-3.9.7\":\n            return await import(\"typescript-3.9.7\");\n        case \"typescript-3.8.3\":\n            return await import(\"typescript-3.8.3\");\n        case \"typescript-3.7.5\":\n            return await import(\"typescript-3.7.5\");\n        case \"typescript-3.6.4\":\n            return await import(\"typescript-3.6.4\");\n        case \"typescript-3.5.3\":\n            return await import(\"typescript-3.5.3\");\n        case \"typescript-3.4.5\":\n            return await import(\"typescript-3.4.5\");\n        case \"typescript-3.3.3\":\n            return await import(\"typescript-3.3.3\");\n        case \"typescript-next\":\n            return await import(\"typescript-next\");\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n\nexport async function importLibFiles(packageName: CompilerPackageNames) {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return await import(\"../resources/libFiles/typescript-4.4.2/index\");\n        case \"typescript-4.3.5\":\n            return await import(\"../resources/libFiles/typescript-4.3.5/index\");\n        case \"typescript-4.2.4\":\n            return await import(\"../resources/libFiles/typescript-4.2.4/index\");\n        case \"typescript-4.1.5\":\n            return await import(\"../resources/libFiles/typescript-4.1.5/index\");\n        case \"typescript-4.0.5\":\n            return await import(\"../resources/libFiles/typescript-4.0.5/index\");\n        case \"typescript-3.9.7\":\n            return await import(\"../resources/libFiles/typescript-3.9.7/index\");\n        case \"typescript-3.8.3\":\n            return await import(\"../resources/libFiles/typescript-3.8.3/index\");\n        case \"typescript-3.7.5\":\n            return await import(\"../resources/libFiles/typescript-3.7.5/index\");\n        case \"typescript-3.6.4\":\n            return await import(\"../resources/libFiles/typescript-3.6.4/index\");\n        case \"typescript-3.5.3\":\n            return await import(\"../resources/libFiles/typescript-3.5.3/index\");\n        case \"typescript-3.4.5\":\n            return await import(\"../resources/libFiles/typescript-3.4.5/index\");\n        case \"typescript-3.3.3\":\n            return await import(\"../resources/libFiles/typescript-3.3.3/index\");\n        case \"typescript-next\":\n            return await import(\"../resources/libFiles/typescript-next/index\");\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n\nexport type FactoryCodeGenerator = (ts: CompilerApi, node: Node) => string;\n\nexport async function getGenerateFactoryCodeFunction(packageName: CompilerPackageNames): Promise<FactoryCodeGenerator> {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return (await import(\"../resources/factoryCode/typescript-4.4.2\")).generateFactoryCode as any;\n        case \"typescript-4.3.5\":\n            return (await import(\"../resources/factoryCode/typescript-4.3.5\")).generateFactoryCode as any;\n        case \"typescript-4.2.4\":\n            return (await import(\"../resources/factoryCode/typescript-4.2.4\")).generateFactoryCode as any;\n        case \"typescript-4.1.5\":\n            return (await import(\"../resources/factoryCode/typescript-4.1.5\")).generateFactoryCode as any;\n        case \"typescript-4.0.5\":\n            return (await import(\"../resources/factoryCode/typescript-4.0.5\")).generateFactoryCode as any;\n        case \"typescript-3.9.7\":\n            return (await import(\"../resources/factoryCode/typescript-3.9.7\")).generateFactoryCode as any;\n        case \"typescript-3.8.3\":\n            return (await import(\"../resources/factoryCode/typescript-3.8.3\")).generateFactoryCode as any;\n        case \"typescript-3.7.5\":\n            return (await import(\"../resources/factoryCode/typescript-3.7.5\")).generateFactoryCode as any;\n        case \"typescript-3.6.4\":\n            return (await import(\"../resources/factoryCode/typescript-3.6.4\")).generateFactoryCode as any;\n        case \"typescript-3.5.3\":\n            return (await import(\"../resources/factoryCode/typescript-3.5.3\")).generateFactoryCode as any;\n        case \"typescript-3.4.5\":\n            return (await import(\"../resources/factoryCode/typescript-3.4.5\")).generateFactoryCode as any;\n        case \"typescript-3.3.3\":\n            return (await import(\"../resources/factoryCode/typescript-3.3.3\")).generateFactoryCode as any;\n        case \"typescript-next\":\n            return (await import(\"../resources/factoryCode/typescript-next\")).generateFactoryCode as any;\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n\nexport interface PublicApiInfo {\n    nodePropertiesBySyntaxKind: Map<string, Set<string>>;\n    symbolProperties: Set<string>;\n    typeProperties: Set<string>;\n    signatureProperties: Set<string>;\n}\n\nexport async function getPublicApiInfo(packageName: CompilerPackageNames): Promise<PublicApiInfo> {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.4.2\"));\n        case \"typescript-4.3.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.3.5\"));\n        case \"typescript-4.2.4\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.2.4\"));\n        case \"typescript-4.1.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.1.5\"));\n        case \"typescript-4.0.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.0.5\"));\n        case \"typescript-3.9.7\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.9.7\"));\n        case \"typescript-3.8.3\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.8.3\"));\n        case \"typescript-3.7.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.7.5\"));\n        case \"typescript-3.6.4\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.6.4\"));\n        case \"typescript-3.5.3\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.5.3\"));\n        case \"typescript-3.4.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.4.5\"));\n        case \"typescript-3.3.3\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.3.3\"));\n        case \"typescript-next\":\n            return (await import(\"../resources/publicApiInfo/typescript-next\"));\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n","import { OptionsState } from \"../types\";\nimport { CompilerApi } from \"./CompilerApi\";\n\nexport function convertOptions(apiFrom: CompilerApi | undefined, apiTo: CompilerApi, options: OptionsState) {\n  if (apiFrom == null || apiFrom === apiTo) {\n    return options;\n  }\n\n  const scriptTarget = apiTo.ScriptTarget[apiFrom.ScriptTarget[options.scriptTarget]];\n  const scriptKind = apiTo.ScriptKind[apiFrom.ScriptKind[options.scriptKind]];\n\n  return {\n    ...options,\n    scriptTarget: scriptTarget == null ? apiTo.ScriptTarget.Latest : scriptTarget,\n    scriptKind: scriptKind == null ? apiTo.ScriptKind.TSX : scriptKind,\n  };\n}\n","import { assertNever } from \"../utils\";\nimport { CompilerApi, CompilerHost, CompilerOptions, Program, ScriptKind, ScriptTarget, SourceFile, TypeChecker } from \"./CompilerApi\";\n\nexport function createSourceFile(api: CompilerApi, code: string, scriptTarget: ScriptTarget, scriptKind: ScriptKind) {\n  const filePath = `/ts-ast-viewer${getExtension(api, scriptKind)}`;\n  const sourceFile = api.createSourceFile(filePath, code, scriptTarget, false, scriptKind);\n  let bindingResult: { typeChecker: TypeChecker; program: Program } | undefined;\n\n  return { sourceFile, bindingTools: getBindingTools };\n\n  // binding may be disabled, so make this deferred\n  function getBindingTools() {\n    if (bindingResult == null) {\n      bindingResult = getBindingResult();\n    }\n    return bindingResult;\n  }\n\n  function getBindingResult() {\n    const options: CompilerOptions = { strict: true, target: scriptTarget, allowJs: true, module: api.ModuleKind.ES2015 };\n    const files: { [name: string]: SourceFile | undefined } = { [filePath]: sourceFile, ...api.tsAstViewer.cachedSourceFiles };\n\n    const compilerHost: CompilerHost = {\n      getSourceFile: (fileName: string, languageVersion: ScriptTarget, onError?: (message: string) => void) => {\n        return files[fileName];\n      },\n      // getSourceFileByPath: (...) => {}, // not providing these will force it to use the file name as the file path\n      // getDefaultLibLocation: (...) => {},\n      getDefaultLibFileName: (defaultLibOptions: CompilerOptions) => \"/\" + api.getDefaultLibFileName(defaultLibOptions),\n      writeFile: () => {\n        // do nothing\n      },\n      getCurrentDirectory: () => \"/\",\n      getDirectories: (path: string) => [],\n      fileExists: (fileName: string) => files[fileName] != null,\n      readFile: (fileName: string) => files[fileName] != null ? files[fileName]!.getFullText() : undefined,\n      getCanonicalFileName: (fileName: string) => fileName,\n      useCaseSensitiveFileNames: () => true,\n      getNewLine: () => \"\\n\",\n      getEnvironmentVariable: () => \"\",\n    };\n    const program = api.createProgram([...Object.keys(files)], options, compilerHost);\n    const typeChecker = program.getTypeChecker();\n\n    return { typeChecker, program };\n  }\n}\n\nfunction getExtension(api: CompilerApi, scriptKind: ScriptKind) {\n  switch (scriptKind) {\n    case api.ScriptKind.TS:\n      return \".ts\";\n    case api.ScriptKind.TSX:\n      return \".tsx\";\n    case api.ScriptKind.JS:\n      return \".js\";\n    case api.ScriptKind.JSX:\n      return \".jsx\";\n    case api.ScriptKind.JSON:\n      return \".json\";\n    case api.ScriptKind.External:\n    case api.ScriptKind.Deferred:\n    case api.ScriptKind.Unknown:\n      return \"\";\n    default:\n      return assertNever(scriptKind, `Not implemented ScriptKind: ${api.ScriptKind[scriptKind]}`);\n  }\n}\n","import { TreeMode } from \"@ts-ast-viewer/shared\";\nimport { assertNever } from \"../utils\";\nimport { Node, SourceFile } from \"./CompilerApi\";\n\nexport function getChildrenFunction(mode: TreeMode, sourceFile: SourceFile) {\n  switch (mode) {\n    case TreeMode.getChildren:\n      return getAllChildren;\n    case TreeMode.forEachChild:\n      return forEachChild;\n    default:\n      return assertNever(mode, `Unhandled mode: ${mode}`);\n  }\n\n  function getAllChildren(node: Node) {\n    return node.getChildren(sourceFile);\n  }\n\n  function forEachChild(node: Node) {\n    const nodes: Node[] = [];\n    node.forEachChild(child => {\n      nodes.push(child);\n      return undefined;\n    });\n    return nodes;\n  }\n}\n","import { CompilerPackageNames } from \"@ts-ast-viewer/shared\";\nimport { CompilerApi } from \"./CompilerApi\";\nimport { importCompilerApi, importLibFiles } from \"./compilerVersions.generated\";\n\nconst compilerTypes: { [name: string]: Promise<CompilerApi> } = {};\nconst compilerTypesLoaded: { [name: string]: true } = {};\n\nexport function getCompilerApi(packageName: CompilerPackageNames): Promise<CompilerApi> {\n  if (compilerTypes[packageName] == null) {\n    compilerTypes[packageName] = loadCompilerApi(packageName);\n    compilerTypes[packageName].catch(() => delete compilerTypes[packageName]);\n  }\n  return compilerTypes[packageName];\n}\n\nexport function hasLoadedCompilerApi(packageName: CompilerPackageNames) {\n  return compilerTypesLoaded[packageName] === true;\n}\n\nasync function loadCompilerApi(packageName: CompilerPackageNames) {\n  const libFilesPromise = importLibFiles(packageName);\n  const compilerApiPromise = importCompilerApi(packageName);\n  const api = await compilerApiPromise as any as CompilerApi;\n\n  api.tsAstViewer = {\n    packageName,\n    cachedSourceFiles: {},\n  };\n  const libFiles = await libFilesPromise;\n\n  for (const sourceFile of getLibSourceFiles()) {\n    api.tsAstViewer.cachedSourceFiles[sourceFile.fileName] = sourceFile;\n  }\n\n  compilerTypesLoaded[packageName] = true;\n\n  return api;\n\n  function getLibSourceFiles() {\n    return Object.keys(libFiles)\n      .map(key => libFiles[key] as { fileName: string; text: string })\n      .map(libFile => api.createSourceFile(libFile.fileName, libFile.text, api.ScriptTarget.Latest, false, api.ScriptKind.TS));\n  }\n}\n","import { Node, SourceFile } from \"./CompilerApi\";\n\nexport function getStartSafe(node: Node, sourceFile: SourceFile) {\n  // workaround for compiler api bug with getStart(sourceFile, true) (see PR #35029 in typescript repo)\n  const jsDocs = ((node as any).jsDoc) as Node[] | undefined;\n  if (jsDocs && jsDocs.length > 0) {\n    return jsDocs[0].getStart(sourceFile);\n  }\n  return node.getStart(sourceFile);\n}\n","import { CompilerPackageNames } from \"@ts-ast-viewer/shared\";\nimport { FactoryCodeGenerator, getGenerateFactoryCodeFunction } from \"./compilerVersions.generated\";\n\nconst cache: { [packageName: string]: Promise<FactoryCodeGenerator> } = {};\nconst hasLoadedVersion: { [packageName: string]: true } = {};\n\nexport function getFactoryCodeGenerator(packageName: CompilerPackageNames): Promise<FactoryCodeGenerator> {\n  if (cache[packageName] == null) {\n    cache[packageName] = getGenerateFactoryCodeFunction(packageName);\n    cache[packageName].catch(() => delete cache[packageName]);\n    cache[packageName].then(() => hasLoadedVersion[packageName] = true);\n  }\n  return cache[packageName];\n}\n","import { CompilerPackageNames } from \"@ts-ast-viewer/shared\";\nimport { AllActions } from \"../actions\";\nimport { CompilerApi, convertOptions, createSourceFile } from \"../compiler\";\nimport { actions as actionNames } from \"./../constants\";\nimport { OptionsState, StoreState } from \"../types\";\nimport { UrlSaver } from \"../utils\";\n\nconst urlSaver = new UrlSaver();\n\nexport function appReducer(state: StoreState, action: AllActions): StoreState {\n  switch (action.type) {\n    case actionNames.SET_SELECTED_NODE: {\n      if (state.compiler == null) {\n        return state;\n      }\n\n      return {\n        ...state,\n        compiler: {\n          ...state.compiler,\n          selectedNode: action.node,\n        },\n      };\n    }\n    case actionNames.SET_API_LOADING_STATE: {\n      return {\n        ...state,\n        apiLoadingState: action.loadingState,\n      };\n    }\n    case actionNames.REFRESH_SOURCEFILE: {\n      const newState = {\n        ...state,\n        options: convertOptions(state.compiler == null ? undefined : state.compiler.api, action.api, state.options),\n      };\n      fillNewSourceFileState(newState.options.compilerPackageName, action.api, newState, state.code, state.options);\n      urlSaver.updateUrl(state.code);\n      return newState;\n    }\n    case actionNames.SET_CODE: {\n      return { ...state, code: action.code };\n    }\n    case actionNames.SET_OPTIONS: {\n      return {\n        ...state,\n        options: {\n          ...state.options,\n          ...action.options,\n        },\n      };\n    }\n    default: {\n      // eslint-disable-next-line\n      const assertNever: never = action;\n      return state;\n    }\n  }\n}\n\nfunction fillNewSourceFileState(compilerPackageName: CompilerPackageNames, api: CompilerApi, state: StoreState, code: string, options: OptionsState) {\n  const { sourceFile, bindingTools } = createSourceFile(api, code, options.scriptTarget, options.scriptKind);\n  state.compiler = {\n    packageName: compilerPackageName,\n    api,\n    sourceFile,\n    bindingTools,\n    selectedNode: sourceFile,\n  };\n}\n","import { CompilerPackageNames, TreeMode } from \"@ts-ast-viewer/shared\";\nimport { CompilerApi, Node, Program, ScriptKind, ScriptTarget, SourceFile, TypeChecker } from \"../compiler\";\n\nexport interface StoreState {\n  code: string;\n  options: OptionsState;\n  apiLoadingState: ApiLoadingState;\n  compiler: CompilerState | undefined;\n}\n\nexport interface CompilerState {\n  packageName: CompilerPackageNames;\n  api: CompilerApi;\n  sourceFile: SourceFile;\n  selectedNode: Node;\n  // this is deferred because binding may be disabled\n  bindingTools: () => BindingTools;\n}\n\nexport interface BindingTools {\n  program: Program;\n  typeChecker: TypeChecker;\n}\n\nexport interface OptionsState {\n  compilerPackageName: CompilerPackageNames;\n  treeMode: TreeMode;\n  scriptTarget: ScriptTarget;\n  scriptKind: ScriptKind;\n  bindingEnabled: boolean;\n  showFactoryCode: boolean;\n  showInternals: boolean;\n}\n\nexport enum ApiLoadingState {\n  Loading,\n  Loaded,\n  Error,\n}\n","import { compilerVersionCollection, constants } from \"@ts-ast-viewer/shared\";\nimport { AllActions } from \"actions\";\nimport React, { useEffect, useReducer } from \"react\";\nimport * as actions from \"./actions\";\nimport { getCompilerApi, hasLoadedCompilerApi, ScriptKind, ScriptTarget } from \"./compiler\";\nimport { appReducer } from \"./reducers\";\nimport { ApiLoadingState, StoreState } from \"./types\";\nimport { sleep, StateSaver, UrlSaver } from \"./utils\";\n\nconst initialScriptTarget: ScriptTarget = 99 /* Latest */;\nconst initialScriptKind: ScriptKind = 4 /* TSX */;\nconst stateSaver = new StateSaver();\n\nconsole.log(\n  \"[ts-ast-viewer]: Inspect the ts, sourceFile, node, symbol, type, signature, program, and checker/typeChecker global variables here in the console.\",\n);\n\nexport interface AppContextValue {\n  state: StoreState;\n  dispatch: React.Dispatch<AllActions>;\n}\n\nexport const AppContext = React.createContext<AppContextValue | undefined>(undefined);\n\nexport function AppContextProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(appReducer, {\n    apiLoadingState: ApiLoadingState.Loading,\n    code: new UrlSaver().getUrlCode(),\n    options: {\n      compilerPackageName: compilerVersionCollection[0].packageName,\n      treeMode: stateSaver.get().treeMode,\n      scriptTarget: initialScriptTarget,\n      scriptKind: initialScriptKind,\n      bindingEnabled: true,\n      showFactoryCode: stateSaver.get().showFactoryCode,\n      showInternals: stateSaver.get().showInternals,\n    },\n    compiler: undefined,\n  });\n\n  const value = { state, dispatch };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    updateSourceFile(abortController.signal);\n    return () => {\n      abortController.abort();\n    };\n\n    async function updateSourceFile(abortSignal: AbortSignal) {\n      const compilerPackageName = state.options.compilerPackageName;\n      const changeLoadingState = !hasLoadedCompilerApi(compilerPackageName);\n      try {\n        if (changeLoadingState) {\n          dispatch(actions.setApiLoadingState(ApiLoadingState.Loading));\n        } else {\n          await sleep(constants.general.sourceFileRefreshDelay); // debounce\n        }\n\n        if (abortSignal.aborted) {\n          return;\n        }\n\n        const api = await getCompilerApi(compilerPackageName);\n        if (abortSignal.aborted) {\n          return;\n        }\n\n        dispatch(actions.refreshSourceFile(api));\n        dispatch(actions.setApiLoadingState(ApiLoadingState.Loaded));\n      } catch (err) {\n        console.error(err);\n        if (changeLoadingState) {\n          dispatch(actions.setApiLoadingState(ApiLoadingState.Error));\n        }\n      }\n    }\n  }, [state.code, state.options.scriptKind, state.options.scriptTarget, state.options.compilerPackageName, state.options.bindingEnabled]);\n\n  useEffect(() => {\n    const savedState = stateSaver.get();\n    savedState.treeMode = state.options.treeMode;\n    savedState.showFactoryCode = state.options.showFactoryCode;\n    savedState.showInternals = state.options.showInternals;\n    stateSaver.set(savedState);\n  }, [state.options.treeMode, state.options.showFactoryCode, state.options.showInternals]);\n\n  useEffect(() => {\n    if (state.compiler == null || state.compiler.selectedNode == null) {\n      return;\n    }\n\n    const windowAny = window as any;\n    const selectedNode = state.compiler.selectedNode;\n    windowAny.ts = state.compiler.api;\n    windowAny.node = selectedNode;\n    windowAny.selectedNode = selectedNode;\n    windowAny.sourceFile = state.compiler.sourceFile;\n\n    if (state.options.bindingEnabled) {\n      const bindingTools = state.compiler.bindingTools();\n      windowAny.checker = bindingTools.typeChecker;\n      windowAny.typeChecker = bindingTools.typeChecker;\n      windowAny.program = bindingTools.program;\n      windowAny.type = tryGet(() => bindingTools.typeChecker.getTypeAtLocation(selectedNode));\n      windowAny.symbol = tryGet(() => (selectedNode as any).symbol || bindingTools.typeChecker.getSymbolAtLocation(selectedNode));\n      windowAny.signature = tryGet(() => bindingTools.typeChecker.getSignatureFromDeclaration(selectedNode as any));\n    } else {\n      windowAny.checker = undefined;\n      windowAny.typeChecker = undefined;\n      windowAny.program = undefined;\n      windowAny.type = undefined;\n      windowAny.symbol = undefined;\n      windowAny.signature = undefined;\n    }\n\n    function tryGet<T>(getValue: () => T) {\n      try {\n        return getValue();\n      } catch (err) {\n        return undefined;\n      }\n    }\n  });\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport function useAppContext() {\n  const context = React.useContext(AppContext);\n  if (context == null) {\n    throw new Error(\"Context was undefined.\");\n  }\n  return context;\n}\n","import React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\n\nexport function Spinner(props: { backgroundColor?: string }) {\n  const { backgroundColor } = props;\n  return (\n    <div className={\"verticallyCenter horizontallyCenter fillHeight\"} style={{ backgroundColor }}>\n      <BeatLoader color={\"#fff\"} loading={true} size={25} />\n    </div>\n  );\n}\n","import type * as monacoEditorForTypes from \"monaco-editor\";\nimport React from \"react\";\nimport type ReactMonacoEditorForTypes from \"react-monaco-editor\";\nimport type { EditorDidMount } from \"react-monaco-editor\";\nimport { LineAndColumnComputer } from \"../utils\";\nimport { Spinner } from \"./Spinner\";\n\nexport interface CodeEditorProps {\n  id?: string;\n  onChange?: (text: string) => void;\n  onClick?: (range: [number, number]) => void;\n  text: string;\n  highlight?: { start: number; end: number } | undefined;\n  showInfo?: boolean;\n  readOnly?: boolean;\n  renderWhiteSpace?: boolean;\n  editorDidMount?: EditorDidMount;\n}\n\nexport interface CodeEditorState {\n  position: number;\n  lineNumber: number;\n  column: number;\n  editorComponent: (typeof ReactMonacoEditorForTypes) | undefined | false;\n}\n\nexport class CodeEditor extends React.Component<CodeEditorProps, CodeEditorState> {\n  private editor: Parameters<EditorDidMount>[0] | undefined;\n  private outerContainerRef = React.createRef<HTMLDivElement>();\n  private disposables: monacoEditorForTypes.IDisposable[] = [];\n\n  constructor(props: CodeEditorProps) {\n    super(props);\n    this.state = {\n      position: 0,\n      lineNumber: 1,\n      column: 1,\n      editorComponent: undefined,\n    };\n    this.editorDidMount = this.editorDidMount.bind(this);\n\n    const reactMonacoEditorPromise = import(\"react-monaco-editor\");\n    import(\"monaco-editor\").then(monacoEditor => {\n      monacoEditor.languages.typescript.typescriptDefaults.setCompilerOptions({\n        target: monacoEditor.languages.typescript.ScriptTarget.ESNext,\n        allowNonTsExtensions: true,\n      });\n\n      reactMonacoEditorPromise.then(editor => {\n        this.setState({ editorComponent: editor.default });\n      }).catch(err => {\n        console.error(err);\n        this.setState({ editorComponent: false });\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({ editorComponent: false });\n    });\n  }\n\n  render() {\n    this.updateHighlight();\n\n    return (\n      <div id={this.props.id} ref={this.outerContainerRef} className={getClassNames(this.props.showInfo)}>\n        <div className={\"editorContainer\"}>\n          {this.getEditor()}\n        </div>\n        {this.props.showInfo && this.getInfo()}\n      </div>\n    );\n\n    function getClassNames(showInfo: boolean | undefined) {\n      const classNames = [\"codeEditor\"];\n      if (showInfo) {\n        classNames.push(\"hasInfo\");\n      }\n      return classNames.join(\" \");\n    }\n  }\n\n  componentWillUnmount() {\n    for (const disposable of this.disposables) {\n      disposable.dispose();\n    }\n    this.disposables.length = 0; // clear\n  }\n\n  private getInfo() {\n    return (\n      <div className={\"editorInfo\"}>\n        Pos {this.state.position}, Ln {this.state.lineNumber}, Col {this.state.column}\n      </div>\n    );\n  }\n\n  private deltaDecorations: string[] = [];\n  private lineAndColumnComputer = new LineAndColumnComputer(\"\");\n  private updateHighlight() {\n    if (this.editor == null) {\n      return;\n    }\n\n    if (this.lineAndColumnComputer.text !== this.props.text) {\n      this.lineAndColumnComputer = new LineAndColumnComputer(this.props.text);\n    }\n\n    const { highlight } = this.props;\n    const lineAndColumnComputer = this.lineAndColumnComputer;\n    const range = getRange();\n\n    this.deltaDecorations = this.editor.deltaDecorations(\n      this.deltaDecorations,\n      range == null ? [] : [{\n        range,\n        options: { className: \"editorRangeHighlight\" },\n      }],\n    );\n\n    if (range) {\n      try {\n        this.editor.revealRangeInCenterIfOutsideViewport(range);\n      } catch {\n        // ignore, for some reason this was throwing\n      }\n    }\n\n    function getRange(): monacoEditorForTypes.IRange | undefined {\n      if (highlight == null) {\n        return undefined;\n      }\n\n      const startInfo = lineAndColumnComputer.getNumberAndColumnFromPos(highlight.start);\n      const endInfo = lineAndColumnComputer.getNumberAndColumnFromPos(highlight.end);\n\n      return {\n        startLineNumber: startInfo.lineNumber,\n        startColumn: startInfo.column,\n        endLineNumber: endInfo.lineNumber,\n        endColumn: endInfo.column,\n      };\n    }\n  }\n\n  private getEditor() {\n    if (this.state.editorComponent == null) {\n      return <Spinner backgroundColor=\"#1e1e1e\" />;\n    }\n    if (this.state.editorComponent === false) {\n      return <div className={\"errorMessage\"}>Error loading code editor. Please refresh the page to try again.</div>;\n    }\n\n    return (\n      <this.state.editorComponent\n        width=\"100%\"\n        height=\"100%\"\n        value={this.props.text}\n        theme=\"vs-dark\"\n        language=\"typescript\"\n        onChange={text => this.props.onChange && this.props.onChange(text)}\n        editorDidMount={this.editorDidMount}\n        options={{\n          automaticLayout: false,\n          renderWhitespace: this.props.renderWhiteSpace ? \"all\" : \"none\",\n          minimap: { enabled: false },\n          readOnly: this.props.readOnly,\n          quickSuggestions: false,\n          occurrencesHighlight: false,\n          selectionHighlight: false,\n          codeLens: false,\n          suggestOnTriggerCharacters: false,\n        }}\n      />\n    );\n  }\n\n  private editorDidMount(editor: Parameters<EditorDidMount>[0], monaco: Parameters<EditorDidMount>[1]) {\n    this.editor = editor;\n\n    // use lf newlines\n    editor.getModel()?.setEOL(monaco.editor.EndOfLineSequence.LF);\n\n    this.disposables.push(editor.onDidChangeCursorPosition(e => {\n      const editorModel = editor.getModel();\n      if (editorModel == null) {\n        return;\n      }\n\n      this.setState({\n        position: editorModel.getOffsetAt(e.position),\n        lineNumber: e.position.lineNumber,\n        column: e.position.column,\n      });\n    }));\n    this.disposables.push(editor.onMouseDown(e => {\n      if (e.target == null || e.target.range == null || this.props.onClick == null) {\n        return;\n      }\n\n      // Sometimes e.target.range will be the column right before if clicked to the left enough,\n      // but the cursor position will still be at the next column. For that reason, always\n      // use the editor posiion.\n      const pos = editor.getPosition();\n      if (pos != null) {\n        const start = this.lineAndColumnComputer.getPosFromLineAndColumn(pos.lineNumber, pos.column);\n        this.props.onClick([start, start]);\n      }\n    }));\n\n    // manually refresh the layout of the editor (lightweight compared to monaco editor)\n    let lastHeight = 0;\n    let lastWidth = 0;\n    const intervalId = setInterval(() => {\n      const containerElement = this.outerContainerRef.current;\n      if (containerElement == null) {\n        return;\n      }\n\n      const width = containerElement.offsetWidth;\n      const height = containerElement.offsetHeight;\n      if (lastHeight === height && lastWidth === width) {\n        return;\n      }\n\n      editor.layout();\n\n      lastHeight = height;\n      lastWidth = width;\n    }, 500);\n    this.disposables.push({ dispose: () => clearInterval(intervalId) });\n\n    this.updateHighlight();\n\n    if (this.props.editorDidMount) {\n      this.props.editorDidMount(editor, monaco);\n    }\n  }\n}\n","import React from \"react\";\n\nexport interface ErrorBoundaryProps {\n  /** Some value that when changed from the previous value will reset the error boundary. */\n  getResetHash?: () => string;\n}\n\nexport interface ErrorBoundaryState {\n  hasError: boolean;\n  error?: any;\n  errorInfo?: any;\n}\n\n/**\n * From: https://reactjs.org/docs/error-boundaries.html\n */\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  private lastResetHash: string | undefined;\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ hasError: true, error, errorInfo });\n    console.error(error);\n    if (this.props.getResetHash != null) {\n      this.lastResetHash = this.props.getResetHash();\n    }\n  }\n\n  render() {\n    if (this.getHasError()) {\n      return (\n        <div>\n          <h2>Something went wrong</h2>\n          <div style={{ whiteSpace: \"pre-wrap\" }}>\n            <div>{this.state.error && this.state.error.toString()}</div>\n            <div>{this.state.errorInfo.componentStack}</div>\n          </div>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n\n  private getHasError() {\n    if (!this.state.hasError) {\n      return false;\n    }\n\n    if (this.hasHashChanged()) {\n      this.lastResetHash = undefined;\n      this.setState({\n        hasError: false,\n        error: undefined,\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  private hasHashChanged() {\n    if (this.props.getResetHash == null) {\n      return false;\n    }\n\n    const currentResetHash = this.props.getResetHash();\n    return currentResetHash !== this.lastResetHash;\n  }\n}\n","import { constants } from \"@ts-ast-viewer/shared\";\nimport type * as monacoEditorForTypes from \"monaco-editor\";\nimport React, { useEffect, useState } from \"react\";\nimport { FactoryCodeGenerator, getFactoryCodeGenerator } from \"../compiler\";\nimport { CompilerState } from \"../types\";\nimport { Box } from \"../utils\";\nimport { CodeEditor } from \"./CodeEditor\";\nimport { Spinner } from \"./Spinner\";\n\n// todo: Move out getting the code generation function from this class (need to start loading it sooner than what's done here)\n\nexport interface FactoryCodeEditorProps {\n  compiler: CompilerState;\n}\n\nexport function FactoryCodeEditor(props: FactoryCodeEditorProps) {\n  const [factoryCodeGenerator, setFactoryCodeGenerator] = useState<Box<FactoryCodeGenerator> | false | undefined>();\n\n  useEffect(() => {\n    setFactoryCodeGenerator(undefined);\n\n    getFactoryCodeGenerator(props.compiler.packageName).then(factoryCodeGenerator => {\n      setFactoryCodeGenerator(new Box(factoryCodeGenerator));\n    }).catch(err => {\n      console.error(err);\n      setFactoryCodeGenerator(false);\n    });\n  }, [props.compiler.packageName]);\n\n  if (factoryCodeGenerator == null) {\n    return <Spinner backgroundColor=\"#1e1e1e\" />;\n  }\n  if (factoryCodeGenerator === false) {\n    return <div className={\"errorMessage\"}>Error loading factory code. Please refresh the page to try again.</div>;\n  }\n\n  return (\n    <CodeEditor\n      id={constants.css.factoryCodeEditor.id}\n      editorDidMount={editorDidMount}\n      text={getText()}\n      readOnly={true}\n    />\n  );\n\n  function getText() {\n    if (factoryCodeGenerator == null || factoryCodeGenerator === false) {\n      return \"\";\n    }\n\n    return factoryCodeGenerator.value(props.compiler.api, props.compiler.selectedNode);\n  }\n}\n\nfunction editorDidMount(editor: monacoEditorForTypes.editor.IStandaloneCodeEditor) {\n  // global method for cypress\n  (window as any).getFactoryCodeEditorText = () => editor.getValue();\n}\n","import React from \"react\";\n\nexport function ExternalLink(props: { text: string; url: string }): React.ReactElement {\n  return <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">{props.text}</a>;\n}\n","import { CompilerPackageNames, compilerVersionCollection, constants, TreeMode } from \"@ts-ast-viewer/shared\";\nimport React, { useRef, useState } from \"react\";\nimport { CompilerApi, ScriptKind, ScriptTarget } from \"../compiler\";\nimport { useOnClickOutside } from \"../hooks\";\nimport { OptionsState } from \"../types\";\nimport { EnumUtils } from \"../utils\";\nimport { ExternalLink } from \"./ExternalLink\";\n\nexport interface OptionsProps {\n  api: CompilerApi | undefined;\n  options: OptionsState;\n  onChange: (options: Partial<OptionsState>) => void;\n}\n\nexport function Options(props: OptionsProps) {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const [showOptionsMenu, setShowOptionsMenu] = useState(false);\n\n  useOnClickOutside(containerRef, () => setShowOptionsMenu(false));\n\n  return (\n    <div id={constants.css.options.id} ref={containerRef}>\n      <div id={constants.css.options.buttonId} onClick={() => setShowOptionsMenu(!showOptionsMenu)} role=\"button\">\n        Options\n      </div>\n      <div className=\"menuLine\" hidden={!showOptionsMenu} />\n      <div className=\"menu\" hidden={!showOptionsMenu}>\n        {getCompilerVersions()}\n        {getTreeMode()}\n        {getScriptKind()}\n        {getScriptTarget()}\n        {getBindingEnabled()}\n        {getShowFactoryCode()}\n        {getShowInternals()}\n        <div className=\"bottomLinks\">\n          <ExternalLink text=\"About\" url=\"https://github.com/dsherret/ts-ast-viewer/tree/main/docs/about.md\" />\n          <span>&nbsp;|&nbsp;</span>\n          <ExternalLink text=\"View on GitHub\" url=\"https://github.com/dsherret/ts-ast-viewer\" />\n        </div>\n      </div>\n    </div>\n  );\n\n  function getCompilerVersions() {\n    const selection = (\n      <select\n        id={constants.css.options.compilerVersionSelectionId}\n        value={props.options.compilerPackageName}\n        onChange={event => onChange({ compilerPackageName: event.target.value as CompilerPackageNames })}\n      >\n        {compilerVersionCollection.map(v => <option value={v.packageName} key={v.packageName}>{v.version}</option>)}\n      </select>\n    );\n    return <Option name=\"Version\" value={selection} />;\n  }\n\n  function getTreeMode() {\n    const selection = (\n      <select\n        id={constants.css.options.treeModeId}\n        value={props.options.treeMode}\n        onChange={event => onChange({ treeMode: parseInt(event.target.value, 10) as TreeMode })}\n      >\n        <option value={TreeMode.forEachChild}>node.forEachChild(child ={\">\"} ...)</option>\n        <option value={TreeMode.getChildren}>node.getChildren()</option>\n      </select>\n    );\n    return <Option name=\"Tree mode\" value={selection} />;\n  }\n\n  function getScriptKind() {\n    const { api } = props;\n    if (api == null) {\n      return undefined;\n    }\n    return getEnumOption(\"Script kind\", \"ts.ScriptKind\", api.ScriptKind, props.options.scriptKind, value => onChange({ scriptKind: value as ScriptKind }));\n  }\n\n  function getScriptTarget() {\n    const { api } = props;\n    if (api == null) {\n      return undefined;\n    }\n    return getEnumOption(\n      \"Script target\",\n      \"ts.ScriptTarget\",\n      api.ScriptTarget,\n      props.options.scriptTarget,\n      value => onChange({ scriptTarget: value as ScriptTarget }),\n    );\n  }\n\n  function getBindingEnabled() {\n    const selection = (\n      <div>\n        <input\n          id={constants.css.options.bindingEnabledId}\n          type=\"checkbox\"\n          checked={props.options.bindingEnabled}\n          onChange={event => onChange({ bindingEnabled: !!event.target.checked })}\n        />\n      </div>\n    );\n    return <Option name={\"Binding\"} value={selection} />;\n  }\n\n  function getShowFactoryCode() {\n    const selection = (\n      <div>\n        <input\n          id={constants.css.options.showFactoryCodeId}\n          type=\"checkbox\"\n          checked={props.options.showFactoryCode}\n          onChange={event => onChange({ showFactoryCode: !!event.target.checked })}\n        />\n      </div>\n    );\n    return <Option name={\"Factory code\"} value={selection} />;\n  }\n\n  function getShowInternals() {\n    const selection = (\n      <div>\n        <input\n          id={constants.css.options.showInternalsId}\n          type=\"checkbox\"\n          checked={props.options.showInternals}\n          onChange={event => onChange({ showInternals: !!event.target.checked })}\n        />\n      </div>\n    );\n    return <Option name={\"Show internals\"} value={selection} />;\n  }\n\n  function getEnumOption(name: string, prefix: string, e: any, currentValue: number, onChange: (value: number) => void) {\n    const selection = (\n      <select value={currentValue} onChange={event => onChange(parseInt(event.target.value, 10))}>\n        {EnumUtils.getNamesForValues(e).map(namesForValue => getOption(namesForValue.value, namesForValue.names))}\n      </select>\n    );\n    return <Option name={name} value={selection} />;\n\n    function getOption(value: number, names: string[]) {\n      return <option value={value} key={value}>{prefix}.{names.join(\" / \")}</option>;\n    }\n  }\n\n  function onChange(options: Partial<OptionsState>) {\n    props.onChange({ ...options });\n  }\n}\n\nfunction Option(props: { name: string; value: React.ReactNode }) {\n  return (\n    <div className=\"option\">\n      <div className=\"optionName\">{props.name}:</div>\n      <div className=\"optionValue\">\n        {props.value}\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: React.RefObject<HTMLElement>, handler: (event: MouseEvent | TouchEvent) => void) {\n  const memoizedHandler = useCallback(handler, [handler]);\n\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        // nothing to do when clicked inside\n        return;\n      }\n\n      memoizedHandler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener, false);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener, false);\n    };\n  }, [memoizedHandler, ref]);\n}\n","import React, { useState } from \"react\";\nimport TreeView from \"react-treeview\";\n\nexport interface LazyTreeViewProps {\n  defaultCollapsed: boolean;\n  nodeLabel: React.ReactNode;\n  getChildren: () => JSX.Element;\n}\n\nexport function LazyTreeView(props: LazyTreeViewProps) {\n  const [isCollapsed, setIsCollapsed] = useState(props.defaultCollapsed);\n\n  return <TreeView nodeLabel={props.nodeLabel} collapsed={isCollapsed} onClick={toggleState}>{isCollapsed ? undefined : props.getChildren()}</TreeView>;\n\n  function toggleState() {\n    setIsCollapsed(!isCollapsed);\n  }\n}\n","import React, { useState } from \"react\";\n\nexport interface ToolTippedTextProps {\n  text: string;\n  children: React.ReactNode;\n}\n\n// adapted from https://codesandbox.io/s/XopkqJ5oV\nexport function ToolTippedText(props: ToolTippedTextProps) {\n  const [isHovering, setIsHovering] = useState(false);\n\n  return (\n    <div className=\"toolTippedText\" onMouseEnter={onMouseHoverChanged} onMouseLeave={onMouseHoverChanged}>\n      <div className=\"titleText\">{props.text}</div>\n      {isHovering && getToolTip()}\n    </div>\n  );\n\n  function onMouseHoverChanged() {\n    setIsHovering(!isHovering);\n  }\n\n  function getToolTip() {\n    return <div className=\"tooltipText\">{props.children}</div>;\n  }\n}\n","import { constants } from \"@ts-ast-viewer/shared\";\nimport CircularJson from \"circular-json\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  CommentRange,\n  CompilerApi,\n  FlowNode,\n  getPublicApiInfo,\n  getStartSafe,\n  Node,\n  PublicApiInfo,\n  ReadonlyMap,\n  Signature,\n  SourceFile,\n  Symbol,\n  Type,\n  TypeChecker,\n} from \"../compiler\";\nimport { BindingTools, CompilerState } from \"../types\";\nimport { ArrayUtils, getEnumFlagNames, getSyntaxKindName } from \"../utils\";\nimport { LazyTreeView } from \"./LazyTreeView\";\nimport { Spinner } from \"./Spinner\";\nimport { ToolTippedText } from \"./ToolTippedText\";\n\nexport interface PropertiesViewerProps {\n  compiler: CompilerState;\n  sourceFile: SourceFile;\n  bindingTools: () => BindingTools;\n  selectedNode: Node;\n  bindingEnabled: boolean;\n  showInternals: boolean;\n}\n\nexport function PropertiesViewer(props: PropertiesViewerProps) {\n  const [publicApiInfo, setPublicApiInfo] = useState<PublicApiInfo | false | undefined>(undefined);\n\n  useEffect(() => {\n    setPublicApiInfo(undefined);\n\n    getPublicApiInfo(props.compiler.packageName).then(publicApiInfo => {\n      setPublicApiInfo(publicApiInfo);\n    }).catch(err => {\n      console.error(err);\n      setPublicApiInfo(false);\n    });\n  }, [props.compiler.packageName]);\n\n  const { selectedNode, sourceFile, bindingEnabled, bindingTools } = props;\n  const context: Context = {\n    api: props.compiler.api,\n    publicApiInfo,\n    showInternals: props.showInternals,\n    sourceFile,\n  };\n\n  if (publicApiInfo == null) {\n    return <Spinner backgroundColor=\"#1e1e1e\" />;\n  }\n\n  return (\n    <div className=\"propertiesViewer\">\n      <div className=\"container\">\n        <h2>Node</h2>\n        <div id={constants.css.properties.node.id}>\n          {getForSelectedNode(context, selectedNode)}\n        </div>\n        {bindingEnabled && getBindingSection(context, selectedNode, bindingTools().typeChecker)}\n      </div>\n    </div>\n  );\n}\n\ninterface Context {\n  api: CompilerApi;\n  publicApiInfo: PublicApiInfo | undefined | false;\n  showInternals: boolean;\n  sourceFile: SourceFile;\n}\n\nfunction getBindingSection(context: Context, selectedNode: Node, typeChecker: TypeChecker) {\n  return (\n    <>\n      <h2>Type</h2>\n      <div id={constants.css.properties.type.id}>\n        {getForType(context, selectedNode, typeChecker)}\n      </div>\n      <h2>Symbol</h2>\n      <div id={constants.css.properties.symbol.id}>\n        {getForSymbol(context, selectedNode, typeChecker)}\n      </div>\n      <h2>Signature</h2>\n      <div id={constants.css.properties.signature.id}>\n        {getForSignature(context, selectedNode, typeChecker)}\n      </div>\n      <h2>FlowNode</h2>\n      <div>\n        {getForFlowNode(context, selectedNode, typeChecker)}\n      </div>\n    </>\n  );\n}\n\nfunction getForSelectedNode(context: Context, selectedNode: Node) {\n  return <LazyTreeView nodeLabel={getSyntaxKindName(context.api, selectedNode.kind)} defaultCollapsed={false} getChildren={getChildren} />;\n\n  function getChildren() {\n    const { sourceFile } = context;\n    return (\n      <>\n        {getProperties(context, selectedNode)}\n        {getMethodElement(\"getChildCount()\", selectedNode.getChildCount(sourceFile))}\n        {getMethodElement(\"getFullStart()\", selectedNode.getFullStart())}\n        {getMethodElement(\"getStart()\", selectedNode.getStart(sourceFile))}\n        {getMethodElement(\"getStart(sourceFile, true)\", getStartSafe(selectedNode, sourceFile))}\n        {getMethodElement(\"getFullWidth()\", selectedNode.getFullWidth())}\n        {getMethodElement(\"getWidth()\", selectedNode.getWidth(sourceFile))}\n        {getMethodElement(\"getLeadingTriviaWidth()\", selectedNode.getLeadingTriviaWidth(sourceFile))}\n        {getMethodElement(\"getFullText()\", selectedNode.getFullText(sourceFile))}\n        {/* Need to do this because internally typescript doesn't pass the sourceFile to getStart() in TokenOrIdentifierObject (bug in ts I need to report...) */}\n        {getMethodElement(\"getText()\", sourceFile.text.substring(selectedNode.getStart(context.sourceFile), selectedNode.getEnd()))}\n        {/* comments */}\n        {getForCommentRanges(\n          `ts.getLeadingCommentRanges(fileFullText, ${selectedNode.getFullStart()})`,\n          context.api.getLeadingCommentRanges(context.sourceFile.text, selectedNode.getFullStart()),\n        )}\n        {getForCommentRanges(\n          `ts.getTrailingCommentRanges(fileFullText, ${selectedNode.end})`,\n          context.api.getTrailingCommentRanges(context.sourceFile.text, selectedNode.end),\n        )}\n      </>\n    );\n  }\n\n  function getMethodElement(name: string, result: string | number) {\n    return getTextDiv(name, typeof result === \"string\" ? result : JSON.stringify(result));\n  }\n\n  function getForCommentRanges(name: string, commentRanges: CommentRange[] | undefined) {\n    if (commentRanges == null) {\n      return getTextDiv(name, \"undefined\");\n    } else {\n      return getArrayDiv(context, name, commentRanges);\n    }\n  }\n}\n\nfunction getForType(context: Context, node: Node, typeChecker: TypeChecker) {\n  if (node.kind === context.api.SyntaxKind.SourceFile) {\n    return <>[None]</>;\n  }\n\n  const type = getOrReturnError(() => typeChecker.getTypeAtLocation(node));\n  if (type == null) {\n    return <>[None]</>;\n  }\n  if (typeof type === \"string\") {\n    return <>[Error getting type: {type}]</>;\n  }\n\n  return getTreeView(context, type, getTypeToString() || \"Type\");\n\n  function getTypeToString() {\n    try {\n      return typeChecker.typeToString(type as Type, node);\n    } catch (err) {\n      return `[Problem getting type text: ${err}]`;\n    }\n  }\n}\n\nfunction getForSymbol(context: Context, node: Node, typeChecker: TypeChecker) {\n  const symbol = getOrReturnError(() => ((node as any).symbol as Symbol | undefined) || typeChecker.getSymbolAtLocation(node));\n  if (symbol == null) {\n    return <>[None]</>;\n  }\n  if (typeof symbol === \"string\") {\n    return <>[Error getting symbol: {symbol}]</>;\n  }\n\n  return getTreeView(context, symbol, getSymbolName() || \"Symbol\");\n\n  function getSymbolName() {\n    try {\n      return (symbol as Symbol).getName();\n    } catch (err) {\n      return `[Problem getting symbol name: ${err}]`;\n    }\n  }\n}\n\nfunction getForSignature(context: Context, node: Node, typeChecker: TypeChecker) {\n  const signature = getOrReturnError(() => typeChecker.getSignatureFromDeclaration(node as any));\n  if (signature == null || typeof signature === \"string\") {\n    return <>[None]</>;\n  }\n\n  return getTreeView(context, signature, \"Signature\");\n}\n\nfunction getForFlowNode(context: Context, node: Node, typeChecker: TypeChecker) {\n  const nodeWithFlowNode = node as Node & { flowNode?: FlowNode };\n  if (nodeWithFlowNode.flowNode == null) {\n    return <>[None]</>;\n  }\n\n  return getTreeView(context, nodeWithFlowNode.flowNode, \"FlowNode\");\n}\n\nfunction getOrReturnError<T>(getFunc: () => T): T | string {\n  try {\n    return getFunc();\n  } catch (err) {\n    return JSON.stringify(err);\n  }\n}\n\nfunction getTreeView(context: Context, obj: any, label: string) {\n  return <LazyTreeView nodeLabel={label} defaultCollapsed={false} getChildren={() => getProperties(context, obj)} />;\n}\n\nfunction getProperties(context: Context, obj: any) {\n  const keyInfo = getObjectKeyInfo(context, obj);\n\n  const values = (\n    <>\n      {keyInfo.map(info => {\n        const element = getNodeKeyValue(info.key, info.value, obj);\n        if (info.permission === \"internal\") {\n          return (\n            <div className=\"internal\" key={info.key} data-name={info.key}>\n              {element}\n            </div>\n          );\n        }\n        return element;\n      })}\n    </>\n  );\n  return values;\n\n  function getNodeKeyValue(key: string, value: any, parent: any): JSX.Element {\n    if (value === null) {\n      return getTextDiv(key, \"null\");\n    } else if (value === undefined) {\n      return getTextDiv(key, \"undefined\");\n    } else if (value instanceof Array) {\n      return getArrayDiv(context, key, value);\n    } else if (isTsNode(value)) {\n      return getNodeDiv(context, key, value);\n    } else if (isMap(value)) {\n      return getMapDiv(context, key, value);\n    } else if (typeof value === \"object\") {\n      return getObjectDiv(context, key, value);\n    } else {\n      return getCustomValueDiv(context, key, value, parent);\n    }\n  }\n}\n\nfunction getArrayDiv(context: Context, key: string, value: unknown[]) {\n  if (value.length === 0) {\n    return getTextDiv(key, \"[]\");\n  } else {\n    return (\n      <div className=\"array\" key={key} data-name={key}>\n        <div className=\"key\">{key}: [</div>\n        <div className=\"value\">{value.map((v, i) => getTreeNode(context, v, undefined, i))}</div>\n        <div className=\"suffix\">]</div>\n      </div>\n    );\n  }\n}\n\nfunction getMapDiv(context: Context, key: string, value: ReadonlyMap<unknown>) {\n  const entries = ArrayUtils.from(value.entries());\n  if (entries.length === 0) {\n    return getTextDiv(key, \"{}\");\n  } else {\n    return (\n      <div className=\"array\" key={key} data-name={key}>\n        <div className=\"key\">{key}:{\"{\"}</div>\n        <div className=\"value\">{entries.map((v, i) => getTreeNode(context, v[1], v[0], i))}</div>\n        <div className=\"suffix\">{\"}\"}</div>\n      </div>\n    );\n  }\n}\n\nfunction getObjectDiv(context: Context, key: string, value: unknown) {\n  if (getObjectKeyInfo(context, value).length === 0) {\n    return getTextDiv(key, \"{}\");\n  } else {\n    return (\n      <div className=\"object\" key={key} data-name={key}>\n        <div className=\"key\">{key}:</div>\n        <div className=\"value\">{getTreeNode(context, value)}</div>\n      </div>\n    );\n  }\n}\n\nfunction getCustomValueDiv(context: Context, key: string, value: any, parent: any) {\n  return (\n    <div className=\"text\" key={key} data-name={key}>\n      <div className=\"key\">{key}:</div>\n      <div className=\"value\">{getCustomValue()}</div>\n    </div>\n  );\n\n  function getCustomValue() {\n    if (isTsNode(parent)) {\n      switch (key) {\n        case \"kind\":\n          return `${value} (SyntaxKind.${getSyntaxKindName(context.api, value)})`;\n        case \"flags\":\n          return getEnumFlagElement(context.api.NodeFlags, value);\n      }\n    }\n    if (isTsType(parent) && key === \"objectFlags\") {\n      return getEnumFlagElement(context.api.ObjectFlags, value);\n    }\n    if (isTsType(parent) && key === \"flags\") {\n      return getEnumFlagElement(context.api.TypeFlags, value);\n    }\n    if (isTsSymbol(parent) && key === \"flags\") {\n      return getEnumFlagElement(context.api.SymbolFlags, value);\n    }\n    if (isFlowNode(parent) && key === \"flags\") {\n      return getEnumFlagElement(context.api.FlowFlags, value);\n    }\n    return CircularJson.stringify(value);\n  }\n}\n\nfunction getNodeDiv(context: Context, key: string, value: Node) {\n  return (\n    <div className=\"object\" key={key} data-name={key}>\n      <div className=\"key\">{key}:</div>\n      <div className=\"value\">{getTreeNode(context, value)}</div>\n    </div>\n  );\n}\n\nfunction getTextDiv(key: string | undefined, value: string) {\n  return (\n    <div className=\"text\" key={key} data-name={key}>\n      {key == null ? undefined : <div className=\"key\">{key}:</div>}\n      <div className=\"value\">{value}</div>\n    </div>\n  );\n}\n\nfunction getTreeNode(context: Context, value: any, key?: string, index?: number): JSX.Element {\n  const labelName = getLabelName(context, value);\n  key = getKey();\n\n  if (typeof value === \"string\") {\n    return getTextDiv(key, `\"${value}\"`);\n  }\n  if (typeof value === \"number\") {\n    return getTextDiv(key, value.toString());\n  }\n  if (typeof value === \"boolean\") {\n    return getTextDiv(key, value.toString());\n  }\n  return <LazyTreeView nodeLabel={key} key={index} defaultCollapsed={true} getChildren={() => getProperties(context, value)} />;\n\n  function getKey() {\n    if (key == null) {\n      return labelName;\n    } else if (labelName != null) {\n      return `${key}: ${getLabelName(context, value)}`;\n    }\n    return key;\n  }\n}\n\nfunction getLabelName(context: Context, obj: any) {\n  if (obj == null) {\n    return undefined;\n  }\n  if (isTsNode(obj)) {\n    return appendName(getSyntaxKindName(context.api, obj.kind));\n  }\n  if (isTsSignature(obj)) {\n    return appendName(\"Signature\");\n  }\n  if (isTsType(obj)) {\n    return appendName(\"Type\");\n  }\n  if (isTsSymbol(obj)) {\n    return appendName(\"Symbol\");\n  }\n  const objType = typeof obj;\n  if (objType === \"string\" || objType === \"number\" || objType === \"boolean\") {\n    return undefined;\n  }\n  return appendName(\"Object\");\n\n  function appendName(title: string) {\n    const name = getName();\n    return name == null ? title : `${title} (${name})`;\n  }\n\n  function getName() {\n    try {\n      if (typeof obj.getName === \"function\") {\n        return obj.getName();\n      }\n      if (isTsNode(obj) && (obj as any).name != null) {\n        const name = (obj as any).name as Node;\n        return name.getText();\n      }\n      return undefined;\n    } catch (err) {\n      return undefined;\n    }\n  }\n}\n\nfunction getObjectKeyInfo(context: Context, obj: any) {\n  if (obj == null) {\n    return [];\n  }\n  return Object.keys(obj)\n    .map(key => ({\n      key,\n      permission: getKeyPermission(context, obj, key),\n      value: obj[key],\n    }))\n    .filter(kv => {\n      if (kv.permission === false) {\n        return false;\n      }\n      return context.showInternals || kv.permission !== \"internal\";\n    });\n}\n\nconst nodeDisallowedKeys = new Set([\"parent\", \"_children\", \"symbol\"]);\nconst typeDisallowedKeys = new Set([\"checker\", \"symbol\"]);\nfunction getKeyPermission(context: Context, obj: any, key: string): true | false | \"internal\" {\n  const { publicApiInfo } = context;\n  if (isTsNode(obj)) {\n    if (nodeDisallowedKeys.has(key)) {\n      return false;\n    }\n    if (!publicApiInfo) {\n      return true;\n    }\n    const kindName = getSyntaxKindName(context.api, obj.kind);\n    return hasInProperties(publicApiInfo.nodePropertiesBySyntaxKind.get(kindName));\n  }\n  if (isTsType(obj)) {\n    return !typeDisallowedKeys.has(key) && hasInProperties(publicApiInfo && publicApiInfo.typeProperties);\n  }\n  if (isTsSignature(obj)) {\n    return hasInProperties(publicApiInfo && publicApiInfo.signatureProperties);\n  }\n  if (isTsSymbol(obj)) {\n    return hasInProperties(publicApiInfo && publicApiInfo.symbolProperties);\n  }\n  return true;\n\n  function hasInProperties(publicApiProperties: Set<string> | undefined | false) {\n    if (!publicApiProperties) {\n      return true;\n    }\n    return publicApiProperties.has(key) ? true : \"internal\";\n  }\n}\n\nfunction isMap(value: any): value is ReadonlyMap<unknown> {\n  return typeof value.keys === \"function\"\n    && typeof value.values === \"function\";\n}\n\nfunction isTsNode(value: any): value is Node {\n  return typeof (value as Node).kind === \"number\";\n}\n\nfunction isTsType(value: any): value is Type {\n  return (value as Type).getBaseTypes != null;\n}\n\nfunction isTsSymbol(value: any): value is Symbol {\n  return (value as Symbol).getDeclarations != null;\n}\n\nfunction isTsSignature(value: any): value is Signature {\n  if (value.declaration == null) {\n    return false;\n  }\n  return isTsNode(value.declaration);\n}\n\nfunction isFlowNode(value: any): value is FlowNode {\n  // TODO: FlowStart does not have antecedent(s)\n  return value.antecedents != null || value.antecedent != null;\n}\n\nfunction getEnumFlagElement(enumObj: any, value: number) {\n  const names = getEnumFlagNames(enumObj, value);\n  if (names.length === 0) {\n    return <>{value}</>;\n  }\n\n  return <ToolTippedText text={value.toString()}>{getNames()}</ToolTippedText>;\n\n  function getNames() {\n    return <ul>{names.map((name, i) => <li key={i}>{name}</li>)}</ul>;\n  }\n}\n","export function getEnumFlagNames(enumObj: any, flags: number) {\n  const allFlags = Object.keys(enumObj)\n    .map(k => enumObj[k]).filter(v => typeof v === \"number\") as number[];\n  const matchedFlags = allFlags.filter(f => (f & flags) !== 0);\n\n  return matchedFlags\n    .filter((f, i) => matchedFlags.indexOf(f) === i)\n    .map(f => enumObj[f]);\n}\n","import { constants, TreeMode } from \"@ts-ast-viewer/shared\";\nimport React, { useLayoutEffect } from \"react\";\nimport TreeView from \"react-treeview\";\nimport { CompilerApi, getChildrenFunction, Node, SourceFile } from \"../compiler\";\nimport { getSyntaxKindName } from \"../utils\";\n\nexport interface TreeViewerProps {\n  api: CompilerApi;\n  sourceFile: SourceFile;\n  selectedNode: Node;\n  onSelectNode: (node: Node) => void;\n  mode: TreeMode;\n}\n\nexport function TreeViewer(props: TreeViewerProps) {\n  const { sourceFile, selectedNode, onSelectNode, mode, api } = props;\n  let i = 0;\n  useLayoutEffect(() => {\n    const treeViewer = document.getElementById(constants.css.treeViewer.id);\n    const selectedNode = document.querySelector(`#${constants.css.treeViewer.id} .${constants.css.treeViewer.selectedNodeClass}`);\n    if (treeViewer && selectedNode) {\n      const selectedRect = selectedNode.getBoundingClientRect();\n      const treeViewerRect = treeViewer.getBoundingClientRect();\n      if (selectedRect.y < 0 || selectedRect.y + selectedRect.height > treeViewerRect.height) {\n        selectedNode.scrollIntoView({ block: \"center\", inline: \"center\" });\n      }\n    }\n  }, [selectedNode]);\n  return <div id={constants.css.treeViewer.id}>{renderNode(sourceFile, getChildrenFunction(mode, sourceFile))}</div>;\n\n  function renderNode(node: Node, getChildren: (node: Node) => (Node[])): JSX.Element {\n    const children = getChildren(node);\n    const className = \"nodeText\" + (node === selectedNode ? \" \" + constants.css.treeViewer.selectedNodeClass : \"\");\n    const kindName = getSyntaxKindName(api, node.kind);\n    const label = <div onClick={() => onSelectNode(node)} className={className}>{kindName}</div>;\n    if (children.length === 0) {\n      return <div key={i++} className=\"endNode\" data-name={kindName}>{label}</div>;\n    } else {\n      return (\n        <div data-name={kindName} key={i++}>\n          <TreeView nodeLabel={label}>\n            {children.map(n => renderNode(n, getChildren))}\n          </TreeView>\n        </div>\n      );\n    }\n  }\n}\n","import { constants } from \"@ts-ast-viewer/shared\";\nimport { useAppContext } from \"AppContext\";\nimport SplitPane from \"react-split-pane\";\nimport \"./App.css\";\nimport { getDescendantAtRange, getStartSafe } from \"./compiler\";\nimport * as components from \"./components\";\nimport { ApiLoadingState } from \"./types\";\n\nexport function App() {\n  const { state, dispatch } = useAppContext();\n  const compiler = state.compiler;\n\n  return (\n    <div className=\"App\">\n      <SplitPane split=\"horizontal\" defaultSize={50} allowResize={false}>\n        <header className=\"AppHeader clearfix\">\n          <h2 id=\"title\">TypeScript AST Viewer</h2>\n          <components.Options\n            api={compiler == null ? undefined : compiler.api}\n            options={state.options}\n            onChange={options =>\n              dispatch({\n                type: \"SET_OPTIONS\",\n                options,\n              })}\n          />\n        </header>\n        <SplitPane split=\"vertical\" minSize={50} defaultSize=\"33%\">\n          {getCodeEditorArea()}\n          {getCompilerDependentPanes()}\n        </SplitPane>\n      </SplitPane>\n    </div>\n  );\n\n  function getCodeHighlightRange() {\n    if (compiler == null) {\n      return undefined;\n    }\n\n    const { selectedNode, sourceFile } = compiler;\n    return selectedNode === sourceFile ? undefined : {\n      start: getStartSafe(selectedNode, sourceFile),\n      end: selectedNode.end,\n    };\n  }\n\n  function getCodeEditorArea() {\n    if (state.options.showFactoryCode) {\n      return (\n        <SplitPane split=\"horizontal\" defaultSize={window.innerHeight * 0.70}>\n          {getCodeEditor()}\n          {getFactoryCodeEditor()}\n        </SplitPane>\n      );\n    } else {\n      return getCodeEditor();\n    }\n\n    function getFactoryCodeEditor() {\n      if (compiler == null || state.apiLoadingState === ApiLoadingState.Loading) {\n        return <components.Spinner />;\n      }\n\n      return (\n        <components.ErrorBoundary getResetHash={() => state.code}>\n          <components.FactoryCodeEditor compiler={compiler} />\n        </components.ErrorBoundary>\n      );\n    }\n\n    function getCodeEditor() {\n      return (\n        <components.CodeEditor\n          id={constants.css.mainCodeEditor.id}\n          onChange={code => dispatch({ type: \"SET_CODE\", code })}\n          onClick={range => {\n            if (compiler == null) {\n              return;\n            }\n            const descendant = getDescendantAtRange(\n              state.options.treeMode,\n              compiler.sourceFile,\n              range,\n              compiler.api,\n            );\n            dispatch({ type: \"SET_SELECTED_NODE\", node: descendant });\n          }}\n          text={state.code}\n          highlight={getCodeHighlightRange()}\n          showInfo={true}\n          renderWhiteSpace={true}\n          editorDidMount={codeEditorDidMount}\n        />\n      );\n    }\n  }\n\n  function getCompilerDependentPanes() {\n    if (compiler == null || state.apiLoadingState === ApiLoadingState.Loading) {\n      return <components.Spinner />;\n    } else if (state.apiLoadingState === ApiLoadingState.Error) {\n      return <div className={\"errorMessage\"}>Error loading compiler API. Please refresh the page to try again.</div>;\n    }\n\n    return (\n      <components.ErrorBoundary>\n        <SplitPane split=\"vertical\" minSize={50} defaultSize=\"50%\">\n          <components.TreeViewer\n            api={compiler.api}\n            selectedNode={compiler.selectedNode}\n            sourceFile={compiler.sourceFile}\n            onSelectNode={node => dispatch({ type: \"SET_SELECTED_NODE\", node })}\n            mode={state.options.treeMode}\n          />\n          <components.PropertiesViewer\n            compiler={compiler}\n            selectedNode={compiler.selectedNode}\n            sourceFile={compiler.sourceFile}\n            bindingTools={compiler.bindingTools}\n            bindingEnabled={state.options.bindingEnabled}\n            showInternals={state.options.showInternals}\n          />\n        </SplitPane>\n      </components.ErrorBoundary>\n    );\n  }\n\n  function codeEditorDidMount(editor: Parameters<import(\"react-monaco-editor\").EditorDidMount>[0]) {\n    // For some reason a slight delay is necessary here. Otherwise it won't let the user type.\n    setTimeout(() => editor.focus(), 100);\n\n    // global method for cypress\n    (window as any).setMonacoEditorText = (text: string) => {\n      const editorModel = editor.getModel();\n      if (editorModel == null) {\n        return;\n      }\n\n      editor.executeEdits(\"my-source\", [{\n        range: editorModel.getFullModelRange(),\n        text,\n      }]);\n    };\n  }\n}\n","import { TreeMode } from \"@ts-ast-viewer/shared\";\nimport { CompilerApi, Node, SourceFile } from \"./CompilerApi\";\nimport { getChildrenFunction } from \"./getChildrenFunction\";\nimport { getStartSafe } from \"./getStartSafe\";\n\nexport function getDescendantAtRange(mode: TreeMode, sourceFile: SourceFile, range: [number, number], compilerApi: CompilerApi) {\n  const getChildren = getChildrenFunction(mode, sourceFile);\n  const syntaxKinds = compilerApi.SyntaxKind;\n\n  let bestMatch: { node: Node; start: number } = { node: sourceFile, start: sourceFile.getStart(sourceFile) };\n  searchDescendants(sourceFile);\n  return bestMatch.node;\n\n  function searchDescendants(node: Node) {\n    const children = getChildren(node);\n    for (const child of children) {\n      if (child.kind !== syntaxKinds.SyntaxList) {\n        if (isBeforeRange(child.end)) {\n          continue;\n        }\n\n        const childStart = getStartSafe(child, sourceFile);\n\n        if (isAfterRange(childStart)) {\n          return;\n        }\n\n        const isEndOfFileToken = child.kind === syntaxKinds.EndOfFileToken;\n        const hasSameStart = bestMatch.start === childStart && range[0] === childStart;\n        if (!isEndOfFileToken && !hasSameStart) {\n          bestMatch = { node: child, start: childStart };\n        }\n      }\n\n      searchDescendants(child);\n    }\n  }\n\n  function isBeforeRange(pos: number) {\n    return pos < range[0];\n  }\n\n  function isAfterRange(nodeEnd: number) {\n    return nodeEnd >= range[0] && nodeEnd > range[1];\n  }\n}\n","import { AppContextProvider } from \"AppContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./external/react-splitpane.css\";\nimport \"./external/react-treeview.css\";\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n  </AppContextProvider>,\n  document.getElementById(\"root\") as HTMLElement,\n);\n"],"sourceRoot":""}