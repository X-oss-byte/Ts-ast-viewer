{"version":3,"sources":["../../shared/dist/index.js","../../shared/dist/compilerVersions.generated.js","../../shared/dist/constants.js","../../shared/dist/types.js","constants/actions.ts","actions/index.tsx","utils/ArrayUtils.ts","utils/assertNever.ts","utils/Box.ts","utils/createHashSet.ts","utils/EnumUtils.ts","utils/getSyntaxKindName.ts","utils/LineAndColumnComputer.ts","utils/createLineNumberAndColumns.ts","utils/sleep.ts","utils/StateSaver.ts","utils/UrlSaver.ts","compiler/compilerVersions.generated.ts","compiler/convertOptions.ts","compiler/createSourceFile.ts","compiler/getChildrenFunction.ts","compiler/getCompilerApi.ts","compiler/getStartSafe.ts","compiler/getFactoryCodeGenerator.ts","reducers/index.tsx","types/index.tsx","AppContext.tsx","components/Spinner.tsx","components/CodeEditor.tsx","components/ErrorBoundary.tsx","components/FactoryCodeEditor.tsx","components/ExternalLink.tsx","components/Options.tsx","hooks/useOnClickOutside.ts","components/LazyTreeView.tsx","components/ToolTippedText.tsx","components/PropertiesViewer.tsx","utils/getEnumFlagNames.ts","components/TreeViewer.tsx","App.tsx","compiler/getDescendantAtRange.ts","index.tsx"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__exportStar","exports","p","prototype","hasOwnProperty","call","__importStar","mod","__esModule","result","constants","require","compilerVersionCollection","version","packageName","general","css","options","id","buttonId","compilerVersionSelectionId","treeModeId","bindingEnabledId","showFactoryCodeId","showInternalsId","mainCodeEditor","factoryCodeEditor","treeViewer","selectedNodeClass","properties","node","type","symbol","signature","sourceFileRefreshDelay","TreeMode","SET_CODE","SET_API_LOADING_STATE","REFRESH_SOURCEFILE","SET_SELECTED_NODE","SET_OPTIONS","setApiLoadingState","loadingState","refreshSourceFile","api","ArrayUtils","iterator","array","next","done","push","items","compareTo","top","length","bottom","mid","Math","floor","comparisonResult","assertNever","message","Error","Box","EnumUtils","e","keys","filter","map","values","getNames","name","key","parseInt","names","getSyntaxKindName","kind","kindCache","tsAstViewer","kindNames","SyntaxKind","isNaN","getKindNamesForApi","getKindCacheForApi","LineAndColumnComputer","text","lineInfos","lastPos","i","pushLineInfo","pos","number","createLineNumberAndColumns","lineNumber","column","index","binarySearch","info","lineInfo","min","line","lastLineInfo","sleep","timeoutMs","Promise","resolve","setTimeout","StateSaver","localStorage","window","_cachedState","treeMode","forEachChild","showFactoryCode","showInternals","getItem","_stateKey","data","transformToVersion2","transformToVersion3","transform","JSON","parse","defaultState","verifyData","err","console","error","sessionState","setItem","stringify","getChildren","UrlSaver","document","location","hash","startsWith","code","replace","trim","decompressFromEncodedURIComponent","updateLocationHash","locationHash","history","replaceState","compressToEncodedURIComponent","importCompilerApi","a","importLibFiles","generateFactoryCode","convertOptions","apiFrom","apiTo","scriptTarget","ScriptTarget","scriptKind","ScriptKind","Latest","TSX","createSourceFile","bindingResult","filePath","TS","JS","JSX","External","Deferred","Unknown","getExtension","sourceFile","bindingTools","strict","target","allowJs","module","ModuleKind","ES2015","files","cachedSourceFiles","compilerHost","getSourceFile","fileName","languageVersion","onError","getDefaultLibFileName","defaultLibOptions","writeFile","getCurrentDirectory","getDirectories","path","fileExists","readFile","getFullText","getCanonicalFileName","useCaseSensitiveFileNames","getNewLine","getEnvironmentVariable","program","createProgram","typeChecker","getTypeChecker","getBindingResult","getChildrenFunction","mode","nodes","child","compilerTypes","compilerTypesLoaded","getCompilerApi","loadCompilerApi","catch","hasLoadedCompilerApi","getLibSourceFiles","libFiles","libFile","libFilesPromise","compilerApiPromise","getStartSafe","jsDocs","jsDoc","getStart","cache","hasLoadedVersion","getFactoryCodeGenerator","getGenerateFactoryCodeFunction","then","ApiLoadingState","urlSaver","appReducer","state","action","actionNames","compiler","selectedNode","apiLoadingState","newState","compilerPackageName","fillNewSourceFileState","updateUrl","stateSaver","log","AppContext","React","createContext","AppContextProvider","children","useReducer","Loading","getUrlCode","bindingEnabled","dispatch","useEffect","abortController","AbortController","updateSourceFile","signal","abort","abortSignal","changeLoadingState","actions","aborted","Loaded","savedState","set","windowAny","ts","checker","tryGet","getTypeAtLocation","getSymbolAtLocation","getSignatureFromDeclaration","getValue","Provider","Spinner","props","backgroundColor","className","style","color","loading","size","CodeEditor","editor","outerContainerRef","createRef","disposables","deltaDecorations","lineAndColumnComputer","position","editorComponent","editorDidMount","bind","reactMonacoEditorPromise","monacoEditor","languages","typescript","typescriptDefaults","setCompilerOptions","ESNext","allowNonTsExtensions","setState","default","updateHighlight","ref","showInfo","classNames","join","getClassNames","getEditor","getInfo","dispose","highlight","range","startInfo","getNumberAndColumnFromPos","start","endInfo","end","startLineNumber","startColumn","endLineNumber","endColumn","getRange","revealRangeInCenter","width","height","theme","language","onChange","automaticLayout","renderWhitespace","renderWhiteSpace","minimap","enabled","readOnly","quickSuggestions","occurrencesHighlight","selectionHighlight","codeLens","suggestOnTriggerCharacters","monaco","getModel","setEOL","EndOfLineSequence","LF","onDidChangeCursorPosition","editorModel","getOffsetAt","onMouseDown","onClick","getPosition","getPosFromLineAndColumn","lastHeight","lastWidth","intervalId","setInterval","containerElement","current","offsetWidth","offsetHeight","layout","clearInterval","Component","ErrorBoundary","lastResetHash","hasError","errorInfo","getResetHash","getHasError","whiteSpace","toString","componentStack","hasHashChanged","FactoryCodeEditor","useState","factoryCodeGenerator","setFactoryCodeGenerator","getFactoryCodeEditorText","ExternalLink","href","url","rel","Options","containerRef","useRef","showOptionsMenu","setShowOptionsMenu","handler","memoizedHandler","useCallback","listener","event","contains","addEventListener","removeEventListener","useOnClickOutside","role","hidden","selection","Option","getCompilerVersions","getTreeMode","getEnumOption","getScriptKind","getScriptTarget","checked","getBindingEnabled","getShowFactoryCode","getShowInternals","prefix","currentValue","getNamesForValues","namesForValue","LazyTreeView","defaultCollapsed","isCollapsed","setIsCollapsed","nodeLabel","collapsed","ToolTippedText","isHovering","setIsHovering","onMouseEnter","onMouseHoverChanged","onMouseLeave","PropertiesViewer","publicApiInfo","setPublicApiInfo","getPublicApiInfo","context","getForSelectedNode","getBindingSection","getForType","getForSymbol","getForSignature","getForFlowNode","getProperties","getMethodElement","getChildCount","getFullStart","getFullWidth","getWidth","getLeadingTriviaWidth","substring","getEnd","getForCommentRanges","getLeadingCommentRanges","getTrailingCommentRanges","getTextDiv","commentRanges","getArrayDiv","SourceFile","getOrReturnError","getTreeView","typeToString","getTypeToString","getName","getSymbolName","nodeWithFlowNode","flowNode","getFunc","obj","label","keyInfo","getObjectKeyInfo","parent","element","Array","isTsNode","getTreeNode","getNodeDiv","isMap","entries","from","getMapDiv","getObjectDiv","getCustomValue","getEnumFlagElement","NodeFlags","isTsType","ObjectFlags","TypeFlags","isTsSymbol","SymbolFlags","antecedents","antecedent","isFlowNode","FlowFlags","CircularJson","getCustomValueDiv","permission","labelName","getLabelName","getKey","appendName","isTsSignature","objType","title","getText","getKeyPermission","kv","nodeDisallowedKeys","Set","typeDisallowedKeys","has","kindName","hasInProperties","nodePropertiesBySyntaxKind","typeProperties","signatureProperties","symbolProperties","publicApiProperties","getBaseTypes","getDeclarations","declaration","enumObj","flags","matchedFlags","f","indexOf","getEnumFlagNames","TreeViewer","onSelectNode","useLayoutEffect","selectedDom","querySelector","scrollIntoView","block","inline","renderNode","n","App","useContext","useAppContext","split","defaultSize","allowResize","minSize","innerHeight","getCodeEditor","descendant","compilerApi","syntaxKinds","bestMatch","searchDescendants","nodeEnd","SyntaxList","childStart","isEndOfFileToken","EndOfFileToken","hasSameStart","getDescendantAtRange","getCodeHighlightRange","codeEditorDidMount","getCodeEditorArea","getCompilerDependentPanes","focus","setMonacoEditorText","executeEdits","getFullModelRange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a35c26cb.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constants = void 0;\n__exportStar(require(\"./compilerVersions.generated\"), exports);\nexports.constants = __importStar(require(\"./constants\"));\n__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compilerVersionCollection = void 0;\nexports.compilerVersionCollection = [\n    { version: \"4.4.2\", packageName: \"typescript-4.4.2\" },\n    { version: \"4.3.5\", packageName: \"typescript-4.3.5\" },\n    { version: \"4.2.4\", packageName: \"typescript-4.2.4\" },\n    { version: \"4.1.5\", packageName: \"typescript-4.1.5\" },\n    { version: \"4.0.5\", packageName: \"typescript-4.0.5\" },\n    { version: \"3.9.7\", packageName: \"typescript-3.9.7\" },\n    { version: \"3.8.3\", packageName: \"typescript-3.8.3\" },\n    { version: \"3.7.5\", packageName: \"typescript-3.7.5\" },\n    { version: \"3.6.4\", packageName: \"typescript-3.6.4\" },\n    { version: \"3.5.3\", packageName: \"typescript-3.5.3\" },\n    { version: \"3.4.5\", packageName: \"typescript-3.4.5\" },\n    { version: \"3.3.3\", packageName: \"typescript-3.3.3\" },\n    { version: \"@next (4.5.0-dev.20210915)\", packageName: \"typescript-next\" }\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.general = exports.css = void 0;\nexports.css = {\n    options: {\n        id: \"options\",\n        buttonId: \"optionsButton\",\n        compilerVersionSelectionId: \"compilerVersionSelection\",\n        treeModeId: \"treeMode\",\n        bindingEnabledId: \"bindingEnabled\",\n        showFactoryCodeId: \"showFactoryCode\",\n        showInternalsId: \"showInternals\",\n    },\n    mainCodeEditor: {\n        id: \"codeEditor\",\n    },\n    factoryCodeEditor: {\n        id: \"factoryCodeEditor\",\n    },\n    treeViewer: {\n        id: \"treeViewer\",\n        selectedNodeClass: \"selected\",\n    },\n    properties: {\n        node: {\n            id: \"node\",\n        },\n        type: {\n            id: \"type\",\n        },\n        symbol: {\n            id: \"symbol\",\n        },\n        signature: {\n            id: \"signature\",\n        },\n    },\n};\nexports.general = {\n    sourceFileRefreshDelay: 150,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeMode = void 0;\nvar TreeMode;\n(function (TreeMode) {\n    TreeMode[TreeMode[\"forEachChild\"] = 0] = \"forEachChild\";\n    TreeMode[TreeMode[\"getChildren\"] = 1] = \"getChildren\";\n})(TreeMode = exports.TreeMode || (exports.TreeMode = {}));\n","export const SET_CODE = \"SET_CODE\";\n// eslint-disable-next-line\nexport type SET_CODE = typeof SET_CODE;\n\nexport const SET_API_LOADING_STATE = \"SET_API_LOADING_STATE\";\n// eslint-disable-next-line\nexport type SET_API_LOADING_STATE = typeof SET_API_LOADING_STATE;\n\nexport const REFRESH_SOURCEFILE = \"REFRESH_SOURCEFILE\";\n// eslint-disable-next-line\nexport type REFRESH_SOURCEFILE = typeof REFRESH_SOURCEFILE;\n\nexport const SET_SELECTED_NODE = \"SET_SELECTED_NODE\";\n// eslint-disable-next-line\nexport type SET_SELECTED_NODE = typeof SET_SELECTED_NODE;\n\nexport const SET_OPTIONS = \"SET_OPTIONS\";\n// eslint-disable-next-line\nexport type SET_OPTIONS = typeof SET_OPTIONS;\n","import { CompilerApi, Node } from \"../compiler\";\nimport { actions as constants } from \"../constants\";\nimport { ApiLoadingState, OptionsState } from \"../types\";\n\nexport interface SetCode {\n    type: constants.SET_CODE;\n    code: string;\n}\n\nexport function setCode(code: string): SetCode {\n    return {\n        type: constants.SET_CODE,\n        code,\n    };\n}\n\nexport interface SetApiLoadingState {\n    type: constants.SET_API_LOADING_STATE;\n    loadingState: ApiLoadingState;\n}\n\nexport function setApiLoadingState(loadingState: ApiLoadingState): SetApiLoadingState {\n    return {\n        type: constants.SET_API_LOADING_STATE,\n        loadingState,\n    };\n}\n\nexport interface RefreshSourceFile {\n    type: constants.REFRESH_SOURCEFILE;\n    api: CompilerApi;\n}\n\nexport function refreshSourceFile(api: CompilerApi): RefreshSourceFile {\n    return {\n        type: constants.REFRESH_SOURCEFILE,\n        api,\n    };\n}\n\nexport interface SetSelectedNode {\n    type: constants.SET_SELECTED_NODE;\n    node: Node;\n}\n\nexport function setSelectedNode(node: Node): SetSelectedNode {\n    return {\n        type: constants.SET_SELECTED_NODE,\n        node,\n    };\n}\n\nexport interface SetOptions {\n    type: constants.SET_OPTIONS;\n    options: Partial<OptionsState>;\n}\n\nexport function setOptions(options: Partial<OptionsState>): SetOptions {\n    return {\n        type: constants.SET_OPTIONS,\n        options,\n    };\n}\n\nexport type AllActions = SetCode | SetApiLoadingState | RefreshSourceFile | SetSelectedNode | SetOptions;\n","import { Iterator } from \"../compiler\";\n\nexport class ArrayUtils {\n    static from<T>(iterator: Iterator<T>) {\n        const array: T[] = [];\n        while (true) {\n            const next = iterator.next();\n            if (next.done)\n                return array;\n            array.push(next.value);\n        }\n    }\n\n    static binarySearch<T>(items: ReadonlyArray<T>, compareTo: (value: T) => number) {\n        let top = items.length - 1;\n        let bottom = 0;\n\n        while (bottom <= top) {\n            const mid = Math.floor((top + bottom) / 2);\n            const comparisonResult = compareTo(items[mid]);\n            if (comparisonResult === 0)\n                return mid;\n            else if (comparisonResult < 0)\n                top = mid - 1;\n            else\n                bottom = mid + 1;\n        }\n\n        return -1;\n    }\n\n    private constructor() {\n    }\n}\n","export function assertNever(value: never, message: string): never {\n    throw new Error(message);\n}\n","export class Box<T> {\n    constructor(readonly value: T) {\n    }\n}\n","export function createHashSet<T>(): HashSet<T> {\n    if (typeof Set !== \"undefined\")\n        return new Set<T>();\n    return new Es5HashSet<T>();\n}\n\nexport interface HashSet<T> {\n    has(value: T): boolean;\n    clear(): void;\n    delete(value: T): boolean;\n    add(value: T): void;\n    values(): IterableIterator<T>;\n}\n\nexport class Es5HashSet<T> implements HashSet<T> {\n    private readonly items: T[] = [];\n\n    has(value: T) {\n        // slow and O(n)...\n        return this.items.indexOf(value) >= 0;\n    }\n\n    add(value: T) {\n        if (!this.has(value))\n            this.items.push(value);\n    }\n\n    delete(value: T) {\n        const index = this.items.indexOf(value);\n        if (index === -1)\n            return false;\n        this.items.splice(index, 1);\n        return true;\n    }\n\n    clear() {\n        this.items.length = 0;\n    }\n\n    *values() {\n        for (const item of this.items)\n            yield item;\n    }\n}\n","export class EnumUtils {\n    private constructor() {\n    }\n\n    static getNames(e: any) {\n        return Object.keys(e)\n            .filter(k => typeof e[k] === \"number\") as string[];\n    }\n\n    static getValues<T extends number>(e: any) {\n        return Object.keys(e)\n            .map(k => e[k])\n            .filter(v => typeof v === \"number\") as T[];\n    }\n\n    static getNamesForValues(e: any) {\n        const values: { [value: number]: string[] } = {};\n\n        for (const name of this.getNames(e)) {\n            const value = e[name];\n            if (values[value] == null)\n                values[value] = [];\n            values[value].push(name);\n        }\n\n        return Object.keys(values).map(key => ({\n            value: parseInt(key, 10),\n            names: values[key] as string[],\n        }));\n    }\n}\n","import { CompilerApi, SyntaxKind } from \"../compiler\";\n\nexport function getSyntaxKindName(api: CompilerApi, kind: SyntaxKind) {\n    return getKindCacheForApi(api)[kind];\n}\n\nconst kindCache: { [packageName: string]: { [kind: number]: string } } = {};\n\nfunction getKindCacheForApi(api: CompilerApi) {\n    if (kindCache[api.tsAstViewer.packageName] == null)\n        kindCache[api.tsAstViewer.packageName] = getKindNamesForApi(api);\n    return kindCache[api.tsAstViewer.packageName];\n}\n\nfunction getKindNamesForApi(api: CompilerApi) {\n    // some SyntaxKinds are repeated, so only use the first one\n    const kindNames: { [kind: number]: string } = {};\n    for (const name of Object.keys(api.SyntaxKind).filter(k => isNaN(parseInt(k, 10)))) {\n        const value = (api.SyntaxKind as any)[name] as number;\n        if (kindNames[value] == null)\n            kindNames[value] = name;\n    }\n    return kindNames;\n}\n","import { ArrayUtils } from \"./ArrayUtils\";\nimport { createLineNumberAndColumns, LineNumberAndColumn } from \"./createLineNumberAndColumns\";\n\n/** An efficient way to compute the line and column of a position in a string. */\nexport class LineAndColumnComputer {\n    private lineInfos: LineNumberAndColumn[];\n\n    constructor(public readonly text: string) {\n        this.lineInfos = createLineNumberAndColumns(text);\n    }\n\n    getNumberAndColumnFromPos(pos: number) {\n        if (pos < 0)\n            return { lineNumber: 1, column: 1 };\n\n        const index = ArrayUtils.binarySearch(this.lineInfos, info => {\n            if (pos < info.pos)\n                return -1;\n            if (pos >= info.pos && pos < info.pos + info.length + 1) // `+ 1` is for newline char\n                return 0;\n            return 1;\n        });\n        const lineInfo = index >= 0 ? this.lineInfos[index] : this.lineInfos[this.lineInfos.length - 1];\n\n        if (lineInfo == null)\n            return { lineNumber: 1, column: 1 };\n\n        return { lineNumber: lineInfo.number, column: Math.min(pos - lineInfo.pos + 1, lineInfo.length + 1) };\n    }\n\n    getPosFromLineAndColumn(line: number, column: number) {\n        if (this.lineInfos.length === 0 || line < 1)\n            return 0;\n\n        const lineInfo = this.lineInfos[line - 1];\n        if (lineInfo == null) {\n            const lastLineInfo = this.lineInfos[this.lineInfos.length - 1];\n            return lastLineInfo.pos + lastLineInfo.length;\n        }\n        return lineInfo.pos + Math.min(lineInfo.length, column - 1);\n    }\n}\n","export interface LineNumberAndColumn {\n    pos: number;\n    number: number;\n    length: number;\n}\n\nexport function createLineNumberAndColumns(text: string) {\n    const lineInfos: LineNumberAndColumn[] = [];\n    let lastPos = 0;\n\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] === \"\\n\")\n            pushLineInfo(i);\n    }\n\n    pushLineInfo(text.length);\n\n    return lineInfos;\n\n    function pushLineInfo(pos: number) {\n        lineInfos.push({\n            pos: lastPos,\n            length: pos - lastPos,\n            number: lineInfos.length + 1,\n        });\n        lastPos = pos + 1;\n    }\n}\n","export function sleep(timeoutMs: number) {\n    return new Promise(resolve => setTimeout(resolve, timeoutMs));\n}\n","import { TreeMode } from \"@ts-ast-viewer/shared\";\n\nexport interface VersionedState {\n    version: 1 | 2 | 3;\n}\n\nexport interface SavedState extends VersionedState {\n    treeMode: TreeMode;\n    showFactoryCode: boolean;\n    showInternals: boolean;\n}\n\nexport interface LocalStorage {\n    getItem(key: string): string | null;\n    setItem(key: string, value: string): void;\n}\n\nexport class StateSaver {\n    static _stateKey = \"tsSimpleAst_savedState\"; // accidentally used name... oh well..\n    private _cachedState: SavedState | undefined = undefined;\n\n    constructor(private readonly localStorage: LocalStorage = window.localStorage) {\n    }\n\n    private get defaultState() {\n        return {\n            version: 3 as 3,\n            treeMode: TreeMode.forEachChild,\n            showFactoryCode: true,\n            showInternals: false,\n        };\n    }\n\n    get() {\n        if (this._cachedState != null)\n            return this._cachedState;\n\n        try {\n            const text = this.localStorage.getItem(StateSaver._stateKey);\n            if (text != null) {\n                const data = transform(JSON.parse(text) || this.defaultState);\n                if (this.verifyData(data))\n                    return data;\n            }\n        } catch (err) {\n            console.error(\"Problem getting state: \" + err);\n        }\n\n        return this.defaultState;\n    }\n\n    set(sessionState: SavedState) {\n        try {\n            if (!this.verifyData(sessionState))\n                return;\n\n            this.localStorage.setItem(StateSaver._stateKey, JSON.stringify(sessionState));\n            this._cachedState = sessionState;\n        } catch (err) {\n            console.error(\"Problem saving state: \" + err);\n        }\n    }\n\n    private verifyData(data: SavedState): data is SavedState {\n        // better to have some schema transforms in the future, but for now it's simple\n        if (data.version !== 3)\n            return false;\n        if (data.treeMode !== TreeMode.forEachChild && data.treeMode !== TreeMode.getChildren)\n            return false;\n        if (typeof data.showFactoryCode !== \"boolean\")\n            return false;\n        if (typeof data.showInternals !== \"boolean\")\n            return false;\n        return true;\n    }\n}\n\n// todo: better transformations\n\nfunction transform(data: SavedState) {\n    transformToVersion2(data);\n    transformToVersion3(data);\n    return data;\n}\n\nfunction transformToVersion2(data: VersionedState) {\n    if (data.version !== 1)\n        return;\n    (data as any).showFactoryCode = true;\n    data.version = 2;\n}\n\nfunction transformToVersion3(data: VersionedState) {\n    if (data.version !== 2)\n        return;\n    (data as any).showInternals = false;\n    data.version = 3;\n}\n","import { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from \"lz-string\";\n\nexport class UrlSaver {\n    getUrlCode() {\n        if (document.location.hash && document.location.hash.startsWith(\"#code\")) {\n            try {\n                const code = document.location.hash.replace(\"#code/\", \"\").trim();\n                return decompressFromEncodedURIComponent(code) || \"\"; // will be null on error\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        return \"\";\n    }\n\n    updateUrl(code: string) {\n        if (code.length === 0)\n            updateLocationHash(\"\");\n        else\n            updateLocationHash(`code/${compressToEncodedURIComponent(code)}`);\n\n        function updateLocationHash(locationHash: string) {\n            window.history.replaceState(undefined, \"\", `#${locationHash}`);\n        }\n    }\n}\n","// dprint-ignore-file\n/* Automatically maintained from package.json. Do not edit! */\n\nimport { CompilerPackageNames, CompilerVersions } from \"@ts-ast-viewer/shared\";\nimport { Node, CompilerApi } from \"./CompilerApi\";\nimport { assertNever } from \"../utils\";\n\nexport async function importCompilerApi(packageName: CompilerPackageNames) {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return await import(\"typescript-4.4.2\");\n        case \"typescript-4.3.5\":\n            return await import(\"typescript-4.3.5\");\n        case \"typescript-4.2.4\":\n            return await import(\"typescript-4.2.4\");\n        case \"typescript-4.1.5\":\n            return await import(\"typescript-4.1.5\");\n        case \"typescript-4.0.5\":\n            return await import(\"typescript-4.0.5\");\n        case \"typescript-3.9.7\":\n            return await import(\"typescript-3.9.7\");\n        case \"typescript-3.8.3\":\n            return await import(\"typescript-3.8.3\");\n        case \"typescript-3.7.5\":\n            return await import(\"typescript-3.7.5\");\n        case \"typescript-3.6.4\":\n            return await import(\"typescript-3.6.4\");\n        case \"typescript-3.5.3\":\n            return await import(\"typescript-3.5.3\");\n        case \"typescript-3.4.5\":\n            return await import(\"typescript-3.4.5\");\n        case \"typescript-3.3.3\":\n            return await import(\"typescript-3.3.3\");\n        case \"typescript-next\":\n            return await import(\"typescript-next\");\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n\nexport async function importLibFiles(packageName: CompilerPackageNames) {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return await import(\"../resources/libFiles/typescript-4.4.2/index\");\n        case \"typescript-4.3.5\":\n            return await import(\"../resources/libFiles/typescript-4.3.5/index\");\n        case \"typescript-4.2.4\":\n            return await import(\"../resources/libFiles/typescript-4.2.4/index\");\n        case \"typescript-4.1.5\":\n            return await import(\"../resources/libFiles/typescript-4.1.5/index\");\n        case \"typescript-4.0.5\":\n            return await import(\"../resources/libFiles/typescript-4.0.5/index\");\n        case \"typescript-3.9.7\":\n            return await import(\"../resources/libFiles/typescript-3.9.7/index\");\n        case \"typescript-3.8.3\":\n            return await import(\"../resources/libFiles/typescript-3.8.3/index\");\n        case \"typescript-3.7.5\":\n            return await import(\"../resources/libFiles/typescript-3.7.5/index\");\n        case \"typescript-3.6.4\":\n            return await import(\"../resources/libFiles/typescript-3.6.4/index\");\n        case \"typescript-3.5.3\":\n            return await import(\"../resources/libFiles/typescript-3.5.3/index\");\n        case \"typescript-3.4.5\":\n            return await import(\"../resources/libFiles/typescript-3.4.5/index\");\n        case \"typescript-3.3.3\":\n            return await import(\"../resources/libFiles/typescript-3.3.3/index\");\n        case \"typescript-next\":\n            return await import(\"../resources/libFiles/typescript-next/index\");\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n\nexport type FactoryCodeGenerator = (ts: CompilerApi, node: Node) => string;\n\nexport async function getGenerateFactoryCodeFunction(packageName: CompilerPackageNames): Promise<FactoryCodeGenerator> {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return (await import(\"../resources/factoryCode/typescript-4.4.2\")).generateFactoryCode as any;\n        case \"typescript-4.3.5\":\n            return (await import(\"../resources/factoryCode/typescript-4.3.5\")).generateFactoryCode as any;\n        case \"typescript-4.2.4\":\n            return (await import(\"../resources/factoryCode/typescript-4.2.4\")).generateFactoryCode as any;\n        case \"typescript-4.1.5\":\n            return (await import(\"../resources/factoryCode/typescript-4.1.5\")).generateFactoryCode as any;\n        case \"typescript-4.0.5\":\n            return (await import(\"../resources/factoryCode/typescript-4.0.5\")).generateFactoryCode as any;\n        case \"typescript-3.9.7\":\n            return (await import(\"../resources/factoryCode/typescript-3.9.7\")).generateFactoryCode as any;\n        case \"typescript-3.8.3\":\n            return (await import(\"../resources/factoryCode/typescript-3.8.3\")).generateFactoryCode as any;\n        case \"typescript-3.7.5\":\n            return (await import(\"../resources/factoryCode/typescript-3.7.5\")).generateFactoryCode as any;\n        case \"typescript-3.6.4\":\n            return (await import(\"../resources/factoryCode/typescript-3.6.4\")).generateFactoryCode as any;\n        case \"typescript-3.5.3\":\n            return (await import(\"../resources/factoryCode/typescript-3.5.3\")).generateFactoryCode as any;\n        case \"typescript-3.4.5\":\n            return (await import(\"../resources/factoryCode/typescript-3.4.5\")).generateFactoryCode as any;\n        case \"typescript-3.3.3\":\n            return (await import(\"../resources/factoryCode/typescript-3.3.3\")).generateFactoryCode as any;\n        case \"typescript-next\":\n            return (await import(\"../resources/factoryCode/typescript-next\")).generateFactoryCode as any;\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n\nexport interface PublicApiInfo {\n    nodePropertiesBySyntaxKind: Map<string, Set<string>>;\n    symbolProperties: Set<string>;\n    typeProperties: Set<string>;\n    signatureProperties: Set<string>;\n}\n\nexport async function getPublicApiInfo(packageName: CompilerPackageNames): Promise<PublicApiInfo> {\n    // these explicit import statements are required to get webpack to include these modules\n    switch (packageName) {\n        case \"typescript-4.4.2\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.4.2\"));\n        case \"typescript-4.3.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.3.5\"));\n        case \"typescript-4.2.4\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.2.4\"));\n        case \"typescript-4.1.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.1.5\"));\n        case \"typescript-4.0.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-4.0.5\"));\n        case \"typescript-3.9.7\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.9.7\"));\n        case \"typescript-3.8.3\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.8.3\"));\n        case \"typescript-3.7.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.7.5\"));\n        case \"typescript-3.6.4\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.6.4\"));\n        case \"typescript-3.5.3\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.5.3\"));\n        case \"typescript-3.4.5\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.4.5\"));\n        case \"typescript-3.3.3\":\n            return (await import(\"../resources/publicApiInfo/typescript-3.3.3\"));\n        case \"typescript-next\":\n            return (await import(\"../resources/publicApiInfo/typescript-next\"));\n        default:\n            return assertNever(packageName, `Not implemented version: ${packageName}`);\n    }\n}\n","import { OptionsState } from \"../types\";\nimport { CompilerApi } from \"./CompilerApi\";\n\nexport function convertOptions(apiFrom: CompilerApi | undefined, apiTo: CompilerApi, options: OptionsState) {\n    if (apiFrom == null || apiFrom === apiTo)\n        return options;\n\n    const scriptTarget = apiTo.ScriptTarget[apiFrom.ScriptTarget[options.scriptTarget]];\n    const scriptKind = apiTo.ScriptKind[apiFrom.ScriptKind[options.scriptKind]];\n\n    return {\n        ...options,\n        scriptTarget: scriptTarget == null ? apiTo.ScriptTarget.Latest : scriptTarget,\n        scriptKind: scriptKind == null ? apiTo.ScriptKind.TSX : scriptKind,\n    };\n}\n","import { assertNever } from \"../utils\";\nimport { CompilerApi, CompilerHost, CompilerOptions, Program, ScriptKind, ScriptTarget, SourceFile, TypeChecker } from \"./CompilerApi\";\n\nexport function createSourceFile(api: CompilerApi, code: string, scriptTarget: ScriptTarget, scriptKind: ScriptKind) {\n    const filePath = `/ts-ast-viewer${getExtension(api, scriptKind)}`;\n    const sourceFile = api.createSourceFile(filePath, code, scriptTarget, false, scriptKind);\n    let bindingResult: { typeChecker: TypeChecker; program: Program } | undefined;\n\n    return { sourceFile, bindingTools: getBindingTools };\n\n    // binding may be disabled, so make this deferred\n    function getBindingTools() {\n        if (bindingResult == null)\n            bindingResult = getBindingResult();\n        return bindingResult;\n    }\n\n    function getBindingResult() {\n        const options: CompilerOptions = { strict: true, target: scriptTarget, allowJs: true, module: api.ModuleKind.ES2015 };\n        const files: { [name: string]: SourceFile | undefined } = { [filePath]: sourceFile, ...api.tsAstViewer.cachedSourceFiles };\n\n        const compilerHost: CompilerHost = {\n            getSourceFile: (fileName: string, languageVersion: ScriptTarget, onError?: (message: string) => void) => {\n                return files[fileName];\n            },\n            // getSourceFileByPath: (...) => {}, // not providing these will force it to use the file name as the file path\n            // getDefaultLibLocation: (...) => {},\n            getDefaultLibFileName: (defaultLibOptions: CompilerOptions) => \"/\" + api.getDefaultLibFileName(defaultLibOptions),\n            writeFile: () => {\n                // do nothing\n            },\n            getCurrentDirectory: () => \"/\",\n            getDirectories: (path: string) => [],\n            fileExists: (fileName: string) => files[fileName] != null,\n            readFile: (fileName: string) => files[fileName] != null ? files[fileName]!.getFullText() : undefined,\n            getCanonicalFileName: (fileName: string) => fileName,\n            useCaseSensitiveFileNames: () => true,\n            getNewLine: () => \"\\n\",\n            getEnvironmentVariable: () => \"\",\n        };\n        const program = api.createProgram([...Object.keys(files)], options, compilerHost);\n        const typeChecker = program.getTypeChecker();\n\n        return { typeChecker, program };\n    }\n}\n\nfunction getExtension(api: CompilerApi, scriptKind: ScriptKind) {\n    switch (scriptKind) {\n        case api.ScriptKind.TS:\n            return \".ts\";\n        case api.ScriptKind.TSX:\n            return \".tsx\";\n        case api.ScriptKind.JS:\n            return \".js\";\n        case api.ScriptKind.JSX:\n            return \".jsx\";\n        case api.ScriptKind.JSON:\n            return \".json\";\n        case api.ScriptKind.External:\n        case api.ScriptKind.Deferred:\n        case api.ScriptKind.Unknown:\n            return \"\";\n        default:\n            return assertNever(scriptKind, `Not implemented ScriptKind: ${api.ScriptKind[scriptKind]}`);\n    }\n}\n","import { TreeMode } from \"@ts-ast-viewer/shared\";\nimport { assertNever } from \"../utils\";\nimport { Node, SourceFile } from \"./CompilerApi\";\n\nexport function getChildrenFunction(mode: TreeMode, sourceFile: SourceFile) {\n    switch (mode) {\n        case TreeMode.getChildren:\n            return getAllChildren;\n        case TreeMode.forEachChild:\n            return forEachChild;\n        default:\n            return assertNever(mode, `Unhandled mode: ${mode}`);\n    }\n\n    function getAllChildren(node: Node) {\n        return node.getChildren(sourceFile);\n    }\n\n    function forEachChild(node: Node) {\n        const nodes: Node[] = [];\n        node.forEachChild(child => {\n            nodes.push(child);\n            return undefined;\n        });\n        return nodes;\n    }\n}\n","import { CompilerPackageNames } from \"@ts-ast-viewer/shared\";\nimport { CompilerApi } from \"./CompilerApi\";\nimport { importCompilerApi, importLibFiles } from \"./compilerVersions.generated\";\n\nconst compilerTypes: { [name: string]: Promise<CompilerApi> } = {};\nconst compilerTypesLoaded: { [name: string]: true } = {};\n\nexport function getCompilerApi(packageName: CompilerPackageNames): Promise<CompilerApi> {\n    if (compilerTypes[packageName] == null) {\n        compilerTypes[packageName] = loadCompilerApi(packageName);\n        compilerTypes[packageName].catch(() => delete compilerTypes[packageName]);\n    }\n    return compilerTypes[packageName];\n}\n\nexport function hasLoadedCompilerApi(packageName: CompilerPackageNames) {\n    return compilerTypesLoaded[packageName] === true;\n}\n\nasync function loadCompilerApi(packageName: CompilerPackageNames) {\n    const libFilesPromise = importLibFiles(packageName);\n    const compilerApiPromise = importCompilerApi(packageName);\n    const api = await compilerApiPromise as any as CompilerApi;\n\n    api.tsAstViewer = {\n        packageName,\n        cachedSourceFiles: {},\n    };\n    const libFiles = await libFilesPromise;\n\n    for (const sourceFile of getLibSourceFiles())\n        api.tsAstViewer.cachedSourceFiles[sourceFile.fileName] = sourceFile;\n\n    compilerTypesLoaded[packageName] = true;\n\n    return api;\n\n    function getLibSourceFiles() {\n        return Object.keys(libFiles)\n            .map(key => libFiles[key] as { fileName: string; text: string })\n            .map(libFile => api.createSourceFile(libFile.fileName, libFile.text, api.ScriptTarget.Latest, false, api.ScriptKind.TS));\n    }\n}\n","import { Node, SourceFile } from \"./CompilerApi\";\n\nexport function getStartSafe(node: Node, sourceFile: SourceFile) {\n    // workaround for compiler api bug with getStart(sourceFile, true) (see PR #35029 in typescript repo)\n    const jsDocs = ((node as any).jsDoc) as Node[] | undefined;\n    if (jsDocs && jsDocs.length > 0)\n        return jsDocs[0].getStart(sourceFile);\n    return node.getStart(sourceFile);\n}\n","import { CompilerPackageNames } from \"@ts-ast-viewer/shared\";\nimport { FactoryCodeGenerator, getGenerateFactoryCodeFunction } from \"./compilerVersions.generated\";\n\nconst cache: { [packageName: string]: Promise<FactoryCodeGenerator> } = {};\nconst hasLoadedVersion: { [packageName: string]: true } = {};\n\nexport function getFactoryCodeGenerator(packageName: CompilerPackageNames): Promise<FactoryCodeGenerator> {\n    if (cache[packageName] == null) {\n        cache[packageName] = getGenerateFactoryCodeFunction(packageName);\n        cache[packageName].catch(() => delete cache[packageName]);\n        cache[packageName].then(() => hasLoadedVersion[packageName] = true);\n    }\n    return cache[packageName];\n}\n","import { CompilerPackageNames } from \"@ts-ast-viewer/shared\";\nimport { AllActions } from \"../actions\";\nimport { CompilerApi, convertOptions, createSourceFile } from \"../compiler\";\nimport { actions as actionNames } from \"./../constants\";\nimport { OptionsState, StoreState } from \"../types\";\nimport { UrlSaver } from \"../utils\";\n\nconst urlSaver = new UrlSaver();\n\nexport function appReducer(state: StoreState, action: AllActions): StoreState {\n    switch (action.type) {\n        case actionNames.SET_SELECTED_NODE: {\n            if (state.compiler == null)\n                return state;\n\n            return {\n                ...state,\n                compiler: {\n                    ...state.compiler,\n                    selectedNode: action.node,\n                },\n            };\n        }\n        case actionNames.SET_API_LOADING_STATE: {\n            return {\n                ...state,\n                apiLoadingState: action.loadingState,\n            };\n        }\n        case actionNames.REFRESH_SOURCEFILE: {\n            const newState = {\n                ...state,\n                options: convertOptions(state.compiler == null ? undefined : state.compiler.api, action.api, state.options),\n            };\n            fillNewSourceFileState(newState.options.compilerPackageName, action.api, newState, state.code, state.options);\n            urlSaver.updateUrl(state.code);\n            return newState;\n        }\n        case actionNames.SET_CODE: {\n            return { ...state, code: action.code };\n        }\n        case actionNames.SET_OPTIONS: {\n            return {\n                ...state,\n                options: {\n                    ...state.options,\n                    ...action.options,\n                },\n            };\n        }\n        default: {\n            // eslint-disable-next-line\n            const assertNever: never = action;\n            return state;\n        }\n    }\n}\n\nfunction fillNewSourceFileState(compilerPackageName: CompilerPackageNames, api: CompilerApi, state: StoreState, code: string, options: OptionsState) {\n    const { sourceFile, bindingTools } = createSourceFile(api, code, options.scriptTarget, options.scriptKind);\n    state.compiler = {\n        packageName: compilerPackageName,\n        api,\n        sourceFile,\n        bindingTools,\n        selectedNode: sourceFile,\n    };\n}\n","import { CompilerPackageNames, TreeMode } from \"@ts-ast-viewer/shared\";\nimport { CompilerApi, Node, Program, ScriptKind, ScriptTarget, SourceFile, TypeChecker } from \"../compiler\";\n\nexport interface StoreState {\n    code: string;\n    options: OptionsState;\n    apiLoadingState: ApiLoadingState;\n    compiler: CompilerState | undefined;\n}\n\nexport interface CompilerState {\n    packageName: CompilerPackageNames;\n    api: CompilerApi;\n    sourceFile: SourceFile;\n    selectedNode: Node;\n    // this is deferred because binding may be disabled\n    bindingTools: () => BindingTools;\n}\n\nexport interface BindingTools {\n    program: Program;\n    typeChecker: TypeChecker;\n}\n\nexport interface OptionsState {\n    compilerPackageName: CompilerPackageNames;\n    treeMode: TreeMode;\n    scriptTarget: ScriptTarget;\n    scriptKind: ScriptKind;\n    bindingEnabled: boolean;\n    showFactoryCode: boolean;\n    showInternals: boolean;\n}\n\nexport enum ApiLoadingState {\n    Loading,\n    Loaded,\n    Error,\n}\n","import { compilerVersionCollection, constants } from \"@ts-ast-viewer/shared\";\nimport { AllActions } from \"actions\";\nimport React, { useEffect, useReducer } from \"react\";\nimport * as actions from \"./actions\";\nimport { getCompilerApi, hasLoadedCompilerApi, ScriptKind, ScriptTarget } from \"./compiler\";\nimport { appReducer } from \"./reducers\";\nimport { ApiLoadingState, StoreState } from \"./types\";\nimport { sleep, StateSaver, UrlSaver } from \"./utils\";\n\nconst initialScriptTarget: ScriptTarget = 99 /* Latest */;\nconst initialScriptKind: ScriptKind = 4 /* TSX */;\nconst stateSaver = new StateSaver();\n\nconsole.log(\n    \"[ts-ast-viewer]: Inspect the ts, sourceFile, node, symbol, type, signature, program, and checker/typeChecker global variables here in the console.\",\n);\n\nexport interface AppContextValue {\n    state: StoreState;\n    dispatch: React.Dispatch<AllActions>;\n}\n\nexport const AppContext = React.createContext<AppContextValue | undefined>(undefined);\n\nexport function AppContextProvider({ children }: { children: React.ReactNode }) {\n    const [state, dispatch] = useReducer(appReducer, {\n        apiLoadingState: ApiLoadingState.Loading,\n        code: new UrlSaver().getUrlCode(),\n        options: {\n            compilerPackageName: compilerVersionCollection[0].packageName,\n            treeMode: stateSaver.get().treeMode,\n            scriptTarget: initialScriptTarget,\n            scriptKind: initialScriptKind,\n            bindingEnabled: true,\n            showFactoryCode: stateSaver.get().showFactoryCode,\n            showInternals: stateSaver.get().showInternals,\n        },\n        compiler: undefined,\n    });\n\n    const value = { state, dispatch };\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        updateSourceFile(abortController.signal);\n        return () => {\n            abortController.abort();\n        };\n\n        async function updateSourceFile(abortSignal: AbortSignal) {\n            const compilerPackageName = state.options.compilerPackageName;\n            const changeLoadingState = !hasLoadedCompilerApi(compilerPackageName);\n            try {\n                if (changeLoadingState)\n                    dispatch(actions.setApiLoadingState(ApiLoadingState.Loading));\n                else\n                    await sleep(constants.general.sourceFileRefreshDelay); // debounce\n\n                if (abortSignal.aborted)\n                    return;\n\n                const api = await getCompilerApi(compilerPackageName);\n                if (abortSignal.aborted)\n                    return;\n\n                dispatch(actions.refreshSourceFile(api));\n                dispatch(actions.setApiLoadingState(ApiLoadingState.Loaded));\n            } catch (err) {\n                console.error(err);\n                if (changeLoadingState)\n                    dispatch(actions.setApiLoadingState(ApiLoadingState.Error));\n            }\n        }\n    }, [state.code, state.options.scriptKind, state.options.scriptTarget, state.options.compilerPackageName, state.options.bindingEnabled]);\n\n    useEffect(() => {\n        const savedState = stateSaver.get();\n        savedState.treeMode = state.options.treeMode;\n        savedState.showFactoryCode = state.options.showFactoryCode;\n        savedState.showInternals = state.options.showInternals;\n        stateSaver.set(savedState);\n    }, [state.options.treeMode, state.options.showFactoryCode, state.options.showInternals]);\n\n    useEffect(() => {\n        if (state.compiler == null || state.compiler.selectedNode == null)\n            return;\n\n        const windowAny = window as any;\n        const selectedNode = state.compiler.selectedNode;\n        windowAny.ts = state.compiler.api;\n        windowAny.node = selectedNode;\n        windowAny.selectedNode = selectedNode;\n        windowAny.sourceFile = state.compiler.sourceFile;\n\n        if (state.options.bindingEnabled) {\n            const bindingTools = state.compiler.bindingTools();\n            windowAny.checker = bindingTools.typeChecker;\n            windowAny.typeChecker = bindingTools.typeChecker;\n            windowAny.program = bindingTools.program;\n            windowAny.type = tryGet(() => bindingTools.typeChecker.getTypeAtLocation(selectedNode));\n            windowAny.symbol = tryGet(() => (selectedNode as any).symbol || bindingTools.typeChecker.getSymbolAtLocation(selectedNode));\n            windowAny.signature = tryGet(() => bindingTools.typeChecker.getSignatureFromDeclaration(selectedNode as any));\n        }\n        else {\n            windowAny.checker = undefined;\n            windowAny.typeChecker = undefined;\n            windowAny.program = undefined;\n            windowAny.type = undefined;\n            windowAny.symbol = undefined;\n            windowAny.signature = undefined;\n        }\n\n        function tryGet<T>(getValue: () => T) {\n            try {\n                return getValue();\n            } catch (err) {\n                return undefined;\n            }\n        }\n    });\n\n    return (\n        <AppContext.Provider value={value}>\n            {children}\n        </AppContext.Provider>\n    );\n}\n\nexport function useAppContext() {\n    const context = React.useContext(AppContext);\n    if (context == null)\n        throw new Error(\"Context was undefined.\");\n    return context;\n}\n","import React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\n\nexport function Spinner(props: { backgroundColor?: string }) {\n    const { backgroundColor } = props;\n    return (\n        <div className={\"verticallyCenter horizontallyCenter fillHeight\"} style={{ backgroundColor }}>\n            <BeatLoader color={\"#fff\"} loading={true} size={25} />\n        </div>\n    );\n}\n","import type * as monacoEditorForTypes from \"monaco-editor\";\nimport React from \"react\";\nimport type ReactMonacoEditorForTypes from \"react-monaco-editor\";\nimport type { EditorDidMount } from \"react-monaco-editor\";\nimport { LineAndColumnComputer } from \"../utils\";\nimport { Spinner } from \"./Spinner\";\n\nexport interface CodeEditorProps {\n    id?: string;\n    onChange?: (text: string) => void;\n    onClick?: (range: [number, number]) => void;\n    text: string;\n    highlight?: { start: number; end: number } | undefined;\n    showInfo?: boolean;\n    readOnly?: boolean;\n    renderWhiteSpace?: boolean;\n    editorDidMount?: EditorDidMount;\n}\n\nexport interface CodeEditorState {\n    position: number;\n    lineNumber: number;\n    column: number;\n    editorComponent: (typeof ReactMonacoEditorForTypes) | undefined | false;\n}\n\nexport class CodeEditor extends React.Component<CodeEditorProps, CodeEditorState> {\n    private editor: Parameters<EditorDidMount>[0] | undefined;\n    private outerContainerRef = React.createRef<HTMLDivElement>();\n    private disposables: monacoEditorForTypes.IDisposable[] = [];\n\n    constructor(props: CodeEditorProps) {\n        super(props);\n        this.state = {\n            position: 0,\n            lineNumber: 1,\n            column: 1,\n            editorComponent: undefined,\n        };\n        this.editorDidMount = this.editorDidMount.bind(this);\n\n        const reactMonacoEditorPromise = import(\"react-monaco-editor\");\n        import(\"monaco-editor\").then(monacoEditor => {\n            monacoEditor.languages.typescript.typescriptDefaults.setCompilerOptions({\n                target: monacoEditor.languages.typescript.ScriptTarget.ESNext,\n                allowNonTsExtensions: true,\n            });\n\n            reactMonacoEditorPromise.then(editor => {\n                this.setState({ editorComponent: editor.default });\n            }).catch(err => {\n                console.error(err);\n                this.setState({ editorComponent: false });\n            });\n        }).catch(err => {\n            console.error(err);\n            this.setState({ editorComponent: false });\n        });\n    }\n\n    render() {\n        this.updateHighlight();\n\n        return (\n            <div id={this.props.id} ref={this.outerContainerRef} className={getClassNames(this.props.showInfo)}>\n                <div className={\"editorContainer\"}>\n                    {this.getEditor()}\n                </div>\n                {this.props.showInfo && this.getInfo()}\n            </div>\n        );\n\n        function getClassNames(showInfo: boolean | undefined) {\n            const classNames = [\"codeEditor\"];\n            if (showInfo)\n                classNames.push(\"hasInfo\");\n            return classNames.join(\" \");\n        }\n    }\n\n    componentWillUnmount() {\n        for (const disposable of this.disposables)\n            disposable.dispose();\n        this.disposables.length = 0; // clear\n    }\n\n    private getInfo() {\n        return (\n            <div className={\"editorInfo\"}>\n                Pos {this.state.position}, Ln {this.state.lineNumber}, Col {this.state.column}\n            </div>\n        );\n    }\n\n    private deltaDecorations: string[] = [];\n    private lineAndColumnComputer = new LineAndColumnComputer(\"\");\n    private updateHighlight() {\n        if (this.editor == null)\n            return;\n\n        if (this.lineAndColumnComputer.text !== this.props.text)\n            this.lineAndColumnComputer = new LineAndColumnComputer(this.props.text);\n\n        const { highlight } = this.props;\n        const lineAndColumnComputer = this.lineAndColumnComputer;\n        const range = getRange();\n\n        this.deltaDecorations = this.editor.deltaDecorations(this.deltaDecorations, range == null ? [] : [{\n            range,\n            options: { className: \"editorRangeHighlight\" },\n        }]);\n\n        if (range) {\n            this.editor.revealRangeInCenter(range)\n        }\n\n        function getRange(): monacoEditorForTypes.IRange | undefined {\n            if (highlight == null)\n                return undefined;\n\n            const startInfo = lineAndColumnComputer.getNumberAndColumnFromPos(highlight.start);\n            const endInfo = lineAndColumnComputer.getNumberAndColumnFromPos(highlight.end);\n\n            return {\n                startLineNumber: startInfo.lineNumber,\n                startColumn: startInfo.column,\n                endLineNumber: endInfo.lineNumber,\n                endColumn: endInfo.column,\n            };\n        }\n    }\n\n    private getEditor() {\n        if (this.state.editorComponent == null)\n            return <Spinner backgroundColor=\"#1e1e1e\" />;\n        if (this.state.editorComponent === false)\n            return <div className={\"errorMessage\"}>Error loading code editor. Please refresh the page to try again.</div>;\n\n        return (\n            <this.state.editorComponent\n                width=\"100%\"\n                height=\"100%\"\n                value={this.props.text}\n                theme=\"vs-dark\"\n                language=\"typescript\"\n                onChange={text => this.props.onChange && this.props.onChange(text)}\n                editorDidMount={this.editorDidMount}\n                options={{\n                    automaticLayout: false,\n                    renderWhitespace: this.props.renderWhiteSpace ? \"all\" : \"none\",\n                    minimap: { enabled: false },\n                    readOnly: this.props.readOnly,\n                    quickSuggestions: false,\n                    occurrencesHighlight: false,\n                    selectionHighlight: false,\n                    codeLens: false,\n                    suggestOnTriggerCharacters: false,\n                }}\n            />\n        );\n    }\n\n    private editorDidMount(editor: Parameters<EditorDidMount>[0], monaco: Parameters<EditorDidMount>[1]) {\n        this.editor = editor;\n\n        // use lf newlines\n        editor.getModel()?.setEOL(monaco.editor.EndOfLineSequence.LF);\n\n        this.disposables.push(editor.onDidChangeCursorPosition(e => {\n            const editorModel = editor.getModel();\n            if (editorModel == null)\n                return;\n\n            this.setState({\n                position: editorModel.getOffsetAt(e.position),\n                lineNumber: e.position.lineNumber,\n                column: e.position.column,\n            });\n        }));\n        this.disposables.push(editor.onMouseDown(e => {\n            if (e.target == null || e.target.range == null || this.props.onClick == null)\n                return;\n\n            // Sometimes e.target.range will be the column right before if clicked to the left enough,\n            // but the cursor position will still be at the next column. For that reason, always\n            // use the editor posiion.\n            const pos = editor.getPosition();\n            if (pos != null) {\n                const start = this.lineAndColumnComputer.getPosFromLineAndColumn(pos.lineNumber, pos.column);\n                this.props.onClick([start, start]);\n            }\n        }));\n\n        // manually refresh the layout of the editor (lightweight compared to monaco editor)\n        let lastHeight = 0;\n        let lastWidth = 0;\n        const intervalId = setInterval(() => {\n            const containerElement = this.outerContainerRef.current;\n            if (containerElement == null)\n                return;\n\n            const width = containerElement.offsetWidth;\n            const height = containerElement.offsetHeight;\n            if (lastHeight === height && lastWidth === width)\n                return;\n\n            editor.layout();\n\n            lastHeight = height;\n            lastWidth = width;\n        }, 500);\n        this.disposables.push({ dispose: () => clearInterval(intervalId) });\n\n        this.updateHighlight();\n\n        if (this.props.editorDidMount)\n            this.props.editorDidMount(editor, monaco);\n    }\n}\n","import React from \"react\";\n\nexport interface ErrorBoundaryProps {\n    /** Some value that when changed from the previous value will reset the error boundary. */\n    getResetHash?: () => string;\n}\n\nexport interface ErrorBoundaryState {\n    hasError: boolean;\n    error?: any;\n    errorInfo?: any;\n}\n\n/**\n * From: https://reactjs.org/docs/error-boundaries.html\n */\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    private lastResetHash: string | undefined;\n\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error: any, errorInfo: any) {\n        this.setState({ hasError: true, error, errorInfo });\n        console.error(error);\n        if (this.props.getResetHash != null)\n            this.lastResetHash = this.props.getResetHash();\n    }\n\n    render() {\n        if (this.getHasError()) {\n            return (\n                <div>\n                    <h2>Something went wrong</h2>\n                    <div style={{ whiteSpace: \"pre-wrap\" }}>\n                        <div>{this.state.error && this.state.error.toString()}</div>\n                        <div>{this.state.errorInfo.componentStack}</div>\n                    </div>\n                </div>\n            );\n        }\n        return this.props.children;\n    }\n\n    private getHasError() {\n        if (!this.state.hasError)\n            return false;\n\n        if (this.hasHashChanged()) {\n            this.lastResetHash = undefined;\n            this.setState({\n                hasError: false,\n                error: undefined,\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    private hasHashChanged() {\n        if (this.props.getResetHash == null)\n            return false;\n\n        const currentResetHash = this.props.getResetHash();\n        return currentResetHash !== this.lastResetHash;\n    }\n}\n","import { constants } from \"@ts-ast-viewer/shared\";\nimport type * as monacoEditorForTypes from \"monaco-editor\";\nimport React, { useEffect, useState } from \"react\";\nimport { FactoryCodeGenerator, getFactoryCodeGenerator } from \"../compiler\";\nimport { CompilerState } from \"../types\";\nimport { Box } from \"../utils\";\nimport { CodeEditor } from \"./CodeEditor\";\nimport { Spinner } from \"./Spinner\";\n\n// todo: Move out getting the code generation function from this class (need to start loading it sooner than what's done here)\n\nexport interface FactoryCodeEditorProps {\n    compiler: CompilerState;\n}\n\nexport function FactoryCodeEditor(props: FactoryCodeEditorProps) {\n    const [factoryCodeGenerator, setFactoryCodeGenerator] = useState<Box<FactoryCodeGenerator> | false | undefined>();\n\n    useEffect(() => {\n        setFactoryCodeGenerator(undefined);\n\n        getFactoryCodeGenerator(props.compiler.packageName).then(factoryCodeGenerator => {\n            setFactoryCodeGenerator(new Box(factoryCodeGenerator));\n        }).catch(err => {\n            console.error(err);\n            setFactoryCodeGenerator(false);\n        });\n    }, [props.compiler.packageName]);\n\n    if (factoryCodeGenerator == null)\n        return <Spinner backgroundColor=\"#1e1e1e\" />;\n    if (factoryCodeGenerator === false)\n        return <div className={\"errorMessage\"}>Error loading factory code. Please refresh the page to try again.</div>;\n\n    return (\n        <CodeEditor\n            id={constants.css.factoryCodeEditor.id}\n            editorDidMount={editorDidMount}\n            text={getText()}\n            readOnly={true}\n        />\n    );\n\n    function getText() {\n        if (factoryCodeGenerator == null || factoryCodeGenerator === false)\n            return \"\";\n\n        return factoryCodeGenerator.value(props.compiler.api, props.compiler.selectedNode);\n    }\n}\n\nfunction editorDidMount(editor: monacoEditorForTypes.editor.IStandaloneCodeEditor) {\n    // global method for cypress\n    (window as any).getFactoryCodeEditorText = () => editor.getValue();\n}\n","import React from \"react\";\n\nexport function ExternalLink(props: { text: string; url: string }): React.ReactElement {\n    return <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">{props.text}</a>;\n}\n","import { CompilerPackageNames, compilerVersionCollection, constants, TreeMode } from \"@ts-ast-viewer/shared\";\nimport React, { useRef, useState } from \"react\";\nimport { CompilerApi, ScriptKind, ScriptTarget } from \"../compiler\";\nimport { useOnClickOutside } from \"../hooks\";\nimport { OptionsState } from \"../types\";\nimport { EnumUtils } from \"../utils\";\nimport { ExternalLink } from \"./ExternalLink\";\n\nexport interface OptionsProps {\n    api: CompilerApi | undefined;\n    options: OptionsState;\n    onChange: (options: Partial<OptionsState>) => void;\n}\n\nexport function Options(props: OptionsProps) {\n    const containerRef = useRef<HTMLDivElement | null>(null);\n    const [showOptionsMenu, setShowOptionsMenu] = useState(false);\n\n    useOnClickOutside(containerRef, () => setShowOptionsMenu(false));\n\n    return <div id={constants.css.options.id} ref={containerRef}>\n        <div id={constants.css.options.buttonId} onClick={() => setShowOptionsMenu(!showOptionsMenu)} role=\"button\">\n            Options\n        </div>\n        <div className=\"menuLine\" hidden={!showOptionsMenu} />\n        <div className=\"menu\" hidden={!showOptionsMenu}>\n            {getCompilerVersions()}\n            {getTreeMode()}\n            {getScriptKind()}\n            {getScriptTarget()}\n            {getBindingEnabled()}\n            {getShowFactoryCode()}\n            {getShowInternals()}\n            <div className=\"bottomLinks\">\n                <ExternalLink text=\"About\" url=\"https://github.com/dsherret/ts-ast-viewer/tree/main/docs/about.md\" />\n                <span>&nbsp;|&nbsp;</span>\n                <ExternalLink text=\"View on GitHub\" url=\"https://github.com/dsherret/ts-ast-viewer\" />\n            </div>\n        </div>\n    </div>;\n\n    function getCompilerVersions() {\n        const selection = (\n            <select\n                id={constants.css.options.compilerVersionSelectionId}\n                value={props.options.compilerPackageName}\n                onChange={event => onChange({ compilerPackageName: event.target.value as CompilerPackageNames })}\n            >\n                {compilerVersionCollection.map(v => (<option value={v.packageName} key={v.packageName}>{v.version}</option>))}\n            </select>\n        );\n        return (<Option name=\"Version\" value={selection} />);\n    }\n\n    function getTreeMode() {\n        const selection = (\n            <select\n                id={constants.css.options.treeModeId}\n                value={props.options.treeMode}\n                onChange={event => onChange({ treeMode: parseInt(event.target.value, 10) as TreeMode })}\n            >\n                <option value={TreeMode.forEachChild}>node.forEachChild(child ={\">\"} ...)</option>\n                <option value={TreeMode.getChildren}>node.getChildren()</option>\n            </select>\n        );\n        return (<Option name=\"Tree mode\" value={selection} />);\n    }\n\n    function getScriptKind() {\n        const { api } = props;\n        if (api == null)\n            return undefined;\n        return getEnumOption(\"Script kind\", \"ts.ScriptKind\", api.ScriptKind, props.options.scriptKind, value => onChange({ scriptKind: value as ScriptKind }));\n    }\n\n    function getScriptTarget() {\n        const { api } = props;\n        if (api == null)\n            return undefined;\n        return getEnumOption(\"Script target\", \"ts.ScriptTarget\", api.ScriptTarget, props.options.scriptTarget,\n            value => onChange({ scriptTarget: value as ScriptTarget }));\n    }\n\n    function getBindingEnabled() {\n        const selection = (\n            <div>\n                <input\n                    id={constants.css.options.bindingEnabledId}\n                    type=\"checkbox\"\n                    checked={props.options.bindingEnabled}\n                    onChange={event => onChange({ bindingEnabled: !!event.target.checked })}\n                />\n            </div>\n        );\n        return (<Option name={\"Binding\"} value={selection} />);\n    }\n\n    function getShowFactoryCode() {\n        const selection = (\n            <div>\n                <input\n                    id={constants.css.options.showFactoryCodeId}\n                    type=\"checkbox\"\n                    checked={props.options.showFactoryCode}\n                    onChange={event => onChange({ showFactoryCode: !!event.target.checked })}\n                />\n            </div>\n        );\n        return (<Option name={\"Factory code\"} value={selection} />);\n    }\n\n    function getShowInternals() {\n        const selection = (\n            <div>\n                <input\n                    id={constants.css.options.showInternalsId}\n                    type=\"checkbox\"\n                    checked={props.options.showInternals}\n                    onChange={event => onChange({ showInternals: !!event.target.checked })}\n                />\n            </div>\n        );\n        return (<Option name={\"Show internals\"} value={selection} />);\n    }\n\n    function getEnumOption(name: string, prefix: string, e: any, currentValue: number, onChange: (value: number) => void) {\n        const selection = (\n            <select value={currentValue} onChange={event => onChange(parseInt(event.target.value, 10))}>\n                {EnumUtils.getNamesForValues(e).map(namesForValue => getOption(namesForValue.value, namesForValue.names))}\n            </select>\n        );\n        return (<Option name={name} value={selection} />);\n\n        function getOption(value: number, names: string[]) {\n            return (<option value={value} key={value}>{prefix}.{names.join(\" / \")}</option>);\n        }\n    }\n\n    function onChange(options: Partial<OptionsState>) {\n        props.onChange({ ...options });\n    }\n}\n\nfunction Option(props: { name: string; value: React.ReactNode }) {\n    return (\n        <div className=\"option\">\n            <div className=\"optionName\">{props.name}:</div>\n            <div className=\"optionValue\">\n                {props.value}\n            </div>\n        </div>\n    );\n}\n","import { useCallback, useEffect } from \"react\";\r\n\r\nexport function useOnClickOutside(ref: React.RefObject<HTMLElement>, handler: (event: MouseEvent | TouchEvent) => void) {\r\n    const memoizedHandler = useCallback(handler, [handler]);\r\n\r\n    useEffect(() => {\r\n        const listener = (event: MouseEvent | TouchEvent) => {\r\n            if (!ref.current || ref.current.contains(event.target as Node)) {\r\n                // nothing to do when clicked inside\r\n                return;\r\n            }\r\n\r\n            memoizedHandler(event);\r\n        }\r\n\r\n        document.addEventListener('mousedown', listener);\r\n        document.addEventListener('touchstart', listener, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', listener);\r\n            document.removeEventListener('touchstart', listener, false);\r\n        }\r\n    }, [memoizedHandler, ref]);\r\n}","import React, { useState } from \"react\";\nimport TreeView from \"react-treeview\";\n\nexport interface LazyTreeViewProps {\n    defaultCollapsed: boolean;\n    nodeLabel: React.ReactNode;\n    getChildren: () => JSX.Element;\n}\n\nexport function LazyTreeView(props: LazyTreeViewProps) {\n    const [isCollapsed, setIsCollapsed] = useState(props.defaultCollapsed);\n\n    return (<TreeView nodeLabel={props.nodeLabel} collapsed={isCollapsed} onClick={toggleState}>{isCollapsed ? undefined : props.getChildren()}</TreeView>);\n\n    function toggleState() {\n        setIsCollapsed(!isCollapsed);\n    }\n}\n","import React, { useState } from \"react\";\n\nexport interface ToolTippedTextProps {\n    text: string;\n    children: React.ReactNode;\n}\n\n// adapted from https://codesandbox.io/s/XopkqJ5oV\nexport function ToolTippedText(props: ToolTippedTextProps) {\n    const [isHovering, setIsHovering] = useState(false);\n\n    return (\n        <div className=\"toolTippedText\" onMouseEnter={onMouseHoverChanged} onMouseLeave={onMouseHoverChanged}>\n            <div className=\"titleText\">{props.text}</div>\n            {isHovering && getToolTip()}\n        </div>\n    );\n\n    function onMouseHoverChanged() {\n        setIsHovering(!isHovering);\n    }\n\n    function getToolTip() {\n        return <div className=\"tooltipText\">{props.children}</div>;\n    }\n}\n","import { constants } from \"@ts-ast-viewer/shared\";\nimport CircularJson from \"circular-json\";\nimport React, { useEffect, useState } from \"react\";\nimport { CommentRange, CompilerApi, FlowNode, getPublicApiInfo, getStartSafe, Node, PublicApiInfo, ReadonlyMap, Signature, SourceFile, Symbol, Type,\n    TypeChecker } from \"../compiler\";\nimport { BindingTools, CompilerState } from \"../types\";\nimport { ArrayUtils, getEnumFlagNames, getSyntaxKindName } from \"../utils\";\nimport { LazyTreeView } from \"./LazyTreeView\";\nimport { Spinner } from \"./Spinner\";\nimport { ToolTippedText } from \"./ToolTippedText\";\n\nexport interface PropertiesViewerProps {\n    compiler: CompilerState;\n    sourceFile: SourceFile;\n    bindingTools: () => BindingTools;\n    selectedNode: Node;\n    bindingEnabled: boolean;\n    showInternals: boolean;\n}\n\nexport function PropertiesViewer(props: PropertiesViewerProps) {\n    const [publicApiInfo, setPublicApiInfo] = useState<PublicApiInfo | false | undefined>(undefined);\n\n    useEffect(() => {\n        setPublicApiInfo(undefined);\n\n        getPublicApiInfo(props.compiler.packageName).then(publicApiInfo => {\n            setPublicApiInfo(publicApiInfo);\n        }).catch(err => {\n            console.error(err);\n            setPublicApiInfo(false);\n        });\n    }, [props.compiler.packageName]);\n\n    const { selectedNode, sourceFile, bindingEnabled, bindingTools } = props;\n    const context: Context = {\n        api: props.compiler.api,\n        publicApiInfo,\n        showInternals: props.showInternals,\n        sourceFile,\n    };\n\n    if (publicApiInfo == null)\n        return <Spinner backgroundColor=\"#1e1e1e\" />;\n\n    return (\n        <div className=\"propertiesViewer\">\n            <div className=\"container\">\n                <h2>Node</h2>\n                <div id={constants.css.properties.node.id}>\n                    {getForSelectedNode(context, selectedNode)}\n                </div>\n                {bindingEnabled && getBindingSection(context, selectedNode, bindingTools().typeChecker)}\n            </div>\n        </div>\n    );\n}\n\ninterface Context {\n    api: CompilerApi;\n    publicApiInfo: PublicApiInfo | undefined | false;\n    showInternals: boolean;\n    sourceFile: SourceFile;\n}\n\nfunction getBindingSection(context: Context, selectedNode: Node, typeChecker: TypeChecker) {\n    return (\n        <>\n            <h2>Type</h2>\n            <div id={constants.css.properties.type.id}>\n                {getForType(context, selectedNode, typeChecker)}\n            </div>\n            <h2>Symbol</h2>\n            <div id={constants.css.properties.symbol.id}>\n                {getForSymbol(context, selectedNode, typeChecker)}\n            </div>\n            <h2>Signature</h2>\n            <div id={constants.css.properties.signature.id}>\n                {getForSignature(context, selectedNode, typeChecker)}\n            </div>\n            <h2>FlowNode</h2>\n            <div>\n                {getForFlowNode(context, selectedNode, typeChecker)}\n            </div>\n        </>\n    );\n}\n\nfunction getForSelectedNode(context: Context, selectedNode: Node) {\n    return (<LazyTreeView nodeLabel={getSyntaxKindName(context.api, selectedNode.kind)} defaultCollapsed={false} getChildren={getChildren} />);\n\n    function getChildren() {\n        const { sourceFile } = context;\n        return (\n            <>\n                {getProperties(context, selectedNode)}\n                {getMethodElement(\"getChildCount()\", selectedNode.getChildCount(sourceFile))}\n                {getMethodElement(\"getFullStart()\", selectedNode.getFullStart())}\n                {getMethodElement(\"getStart()\", selectedNode.getStart(sourceFile))}\n                {getMethodElement(\"getStart(sourceFile, true)\", getStartSafe(selectedNode, sourceFile))}\n                {getMethodElement(\"getFullWidth()\", selectedNode.getFullWidth())}\n                {getMethodElement(\"getWidth()\", selectedNode.getWidth(sourceFile))}\n                {getMethodElement(\"getLeadingTriviaWidth()\", selectedNode.getLeadingTriviaWidth(sourceFile))}\n                {getMethodElement(\"getFullText()\", selectedNode.getFullText(sourceFile))}\n                {/* Need to do this because internally typescript doesn't pass the sourceFile to getStart() in TokenOrIdentifierObject (bug in ts I need to report...) */}\n                {getMethodElement(\"getText()\", sourceFile.text.substring(selectedNode.getStart(context.sourceFile), selectedNode.getEnd()))}\n                {/* comments */}\n                {getForCommentRanges(`ts.getLeadingCommentRanges(fileFullText, ${selectedNode.getFullStart()})`,\n                    context.api.getLeadingCommentRanges(context.sourceFile.text, selectedNode.getFullStart()))}\n                {getForCommentRanges(`ts.getTrailingCommentRanges(fileFullText, ${selectedNode.end})`,\n                    context.api.getTrailingCommentRanges(context.sourceFile.text, selectedNode.end))}\n            </>\n        );\n    }\n\n    function getMethodElement(name: string, result: string | number) {\n        return getTextDiv(name, typeof result === \"string\" ? result : JSON.stringify(result));\n    }\n\n    function getForCommentRanges(name: string, commentRanges: CommentRange[] | undefined) {\n        if (commentRanges == null)\n            return getTextDiv(name, \"undefined\");\n        else\n            return getArrayDiv(context, name, commentRanges);\n    }\n}\n\nfunction getForType(context: Context, node: Node, typeChecker: TypeChecker) {\n    if (node.kind === context.api.SyntaxKind.SourceFile)\n        return (<>[None]</>);\n\n    const type = getOrReturnError(() => typeChecker.getTypeAtLocation(node));\n    if (type == null)\n        return (<>[None]</>);\n    if (typeof type === \"string\")\n        return (<>[Error getting type: {type}]</>);\n\n    return getTreeView(context, type, getTypeToString() || \"Type\");\n\n    function getTypeToString() {\n        try {\n            return typeChecker.typeToString(type as Type, node);\n        } catch (err) {\n            return `[Problem getting type text: ${err}]`;\n        }\n    }\n}\n\nfunction getForSymbol(context: Context, node: Node, typeChecker: TypeChecker) {\n    const symbol = getOrReturnError(() => ((node as any).symbol as Symbol | undefined) || typeChecker.getSymbolAtLocation(node));\n    if (symbol == null)\n        return (<>[None]</>);\n    if (typeof symbol === \"string\")\n        return (<>[Error getting symbol: {symbol}]</>);\n\n    return getTreeView(context, symbol, getSymbolName() || \"Symbol\");\n\n    function getSymbolName() {\n        try {\n            return (symbol as Symbol).getName();\n        } catch (err) {\n            return `[Problem getting symbol name: ${err}]`;\n        }\n    }\n}\n\nfunction getForSignature(context: Context, node: Node, typeChecker: TypeChecker) {\n    const signature = getOrReturnError(() => typeChecker.getSignatureFromDeclaration(node as any));\n    if (signature == null || typeof signature === \"string\")\n        return (<>[None]</>);\n\n    return getTreeView(context, signature, \"Signature\");\n}\n\nfunction getForFlowNode(context: Context, node: Node, typeChecker: TypeChecker) {\n    const nodeWithFlowNode = node as Node & { flowNode?: FlowNode };\n    if (nodeWithFlowNode.flowNode == null)\n        return (<>[None]</>);\n\n    return getTreeView(context, nodeWithFlowNode.flowNode, \"FlowNode\");\n}\n\nfunction getOrReturnError<T>(getFunc: () => T): T | string {\n    try {\n        return getFunc();\n    } catch (err) {\n        return JSON.stringify(err);\n    }\n}\n\nfunction getTreeView(context: Context, obj: any, label: string) {\n    return (<LazyTreeView nodeLabel={label} defaultCollapsed={false} getChildren={() => getProperties(context, obj)} />);\n}\n\nfunction getProperties(context: Context, obj: any) {\n    const keyInfo = getObjectKeyInfo(context, obj);\n\n    const values = (\n        <>\n            {keyInfo.map(info => {\n                const element = getNodeKeyValue(info.key, info.value, obj);\n                if (info.permission === \"internal\") {\n                    return <div className=\"internal\" key={info.key} data-name={info.key}>\n                        {element}\n                    </div>;\n                }\n                return element;\n            })}\n        </>\n    );\n    return values;\n\n    function getNodeKeyValue(key: string, value: any, parent: any): JSX.Element {\n        if (value === null)\n            return getTextDiv(key, \"null\");\n        else if (value === undefined)\n            return getTextDiv(key, \"undefined\");\n        else if (value instanceof Array)\n            return getArrayDiv(context, key, value);\n        else if (isTsNode(value))\n            return getNodeDiv(context, key, value);\n        else if (isMap(value))\n            return getMapDiv(context, key, value);\n        else if (typeof value === \"object\")\n            return getObjectDiv(context, key, value);\n        else\n            return getCustomValueDiv(context, key, value, parent);\n    }\n}\n\nfunction getArrayDiv(context: Context, key: string, value: unknown[]) {\n    if (value.length === 0)\n        return getTextDiv(key, \"[]\");\n    else {\n        return (\n            <div className=\"array\" key={key} data-name={key}>\n                <div className=\"key\">{key}: [</div>\n                <div className=\"value\">{value.map((v, i) => getTreeNode(context, v, undefined, i))}</div>\n                <div className=\"suffix\">]</div>\n            </div>\n        );\n    }\n}\n\nfunction getMapDiv(context: Context, key: string, value: ReadonlyMap<unknown>) {\n    const entries = ArrayUtils.from(value.entries());\n    if (entries.length === 0)\n        return getTextDiv(key, \"{}\");\n    else {\n        return (\n            <div className=\"array\" key={key} data-name={key}>\n                <div className=\"key\">{key}:{\"{\"}</div>\n                <div className=\"value\">{entries.map((v, i) => getTreeNode(context, v[1], v[0], i))}</div>\n                <div className=\"suffix\">{\"}\"}</div>\n            </div>\n        );\n    }\n}\n\nfunction getObjectDiv(context: Context, key: string, value: unknown) {\n    if (getObjectKeyInfo(context, value).length === 0)\n        return getTextDiv(key, \"{}\");\n    else {\n        return (\n            <div className=\"object\" key={key} data-name={key}>\n                <div className=\"key\">{key}:</div>\n                <div className=\"value\">{getTreeNode(context, value)}</div>\n            </div>\n        );\n    }\n}\n\nfunction getCustomValueDiv(context: Context, key: string, value: any, parent: any) {\n    return (\n        <div className=\"text\" key={key} data-name={key}>\n            <div className=\"key\">{key}:</div>\n            <div className=\"value\">{getCustomValue()}</div>\n        </div>\n    );\n\n    function getCustomValue() {\n        if (isTsNode(parent)) {\n            switch (key) {\n                case \"kind\":\n                    return `${value} (SyntaxKind.${getSyntaxKindName(context.api, value)})`;\n                case \"flags\":\n                    return getEnumFlagElement(context.api.NodeFlags, value);\n            }\n        }\n        if (isTsType(parent) && key === \"objectFlags\")\n            return getEnumFlagElement(context.api.ObjectFlags, value);\n        if (isTsType(parent) && key === \"flags\")\n            return getEnumFlagElement(context.api.TypeFlags, value);\n        if (isTsSymbol(parent) && key === \"flags\")\n            return getEnumFlagElement(context.api.SymbolFlags, value);\n        if (isFlowNode(parent) && key === \"flags\")\n            return getEnumFlagElement(context.api.FlowFlags, value);\n        return CircularJson.stringify(value);\n    }\n}\n\nfunction getNodeDiv(context: Context, key: string, value: Node) {\n    return (\n        <div className=\"object\" key={key} data-name={key}>\n            <div className=\"key\">{key}:</div>\n            <div className=\"value\">{getTreeNode(context, value)}</div>\n        </div>\n    );\n}\n\nfunction getTextDiv(key: string | undefined, value: string) {\n    return (\n        <div className=\"text\" key={key} data-name={key}>\n            {key == null ? undefined : <div className=\"key\">{key}:</div>}\n            <div className=\"value\">{value}</div>\n        </div>\n    );\n}\n\nfunction getTreeNode(context: Context, value: any, key?: string, index?: number): JSX.Element {\n    const labelName = getLabelName(context, value);\n    key = getKey();\n\n    if (typeof value === \"string\")\n        return getTextDiv(key, `\"${value}\"`);\n    if (typeof value === \"number\")\n        return getTextDiv(key, value.toString());\n    if (typeof value === \"boolean\")\n        return getTextDiv(key, value.toString());\n    return (\n        <LazyTreeView nodeLabel={key} key={index} defaultCollapsed={true} getChildren={() => getProperties(context, value)} />\n    );\n\n    function getKey() {\n        if (key == null)\n            return labelName;\n        else if (labelName != null)\n            return `${key}: ${getLabelName(context, value)}`;\n        return key;\n    }\n}\n\nfunction getLabelName(context: Context, obj: any) {\n    if (obj == null)\n        return undefined;\n    if (isTsNode(obj))\n        return appendName(getSyntaxKindName(context.api, obj.kind));\n    if (isTsSignature(obj))\n        return appendName(\"Signature\");\n    if (isTsType(obj))\n        return appendName(\"Type\");\n    if (isTsSymbol(obj))\n        return appendName(\"Symbol\");\n    const objType = typeof obj;\n    if (objType === \"string\" || objType === \"number\" || objType === \"boolean\")\n        return undefined;\n    return appendName(\"Object\");\n\n    function appendName(title: string) {\n        const name = getName();\n        return name == null ? title : `${title} (${name})`;\n    }\n\n    function getName() {\n        try {\n            if (typeof obj.getName === \"function\")\n                return obj.getName();\n            if (isTsNode(obj) && (obj as any).name != null) {\n                const name = (obj as any).name as Node;\n                return name.getText();\n            }\n            return undefined;\n        } catch (err) {\n            return undefined;\n        }\n    }\n}\n\nfunction getObjectKeyInfo(context: Context, obj: any) {\n    if (obj == null)\n        return [];\n    return Object.keys(obj)\n        .map(key => ({\n            key,\n            permission: getKeyPermission(context, obj, key),\n            value: obj[key],\n        }))\n        .filter(kv => {\n            if (kv.permission === false)\n                return false;\n            return context.showInternals || kv.permission !== \"internal\";\n        });\n}\n\nconst nodeDisallowedKeys = new Set([\"parent\", \"_children\", \"symbol\"]);\nconst typeDisallowedKeys = new Set([\"checker\", \"symbol\"]);\nfunction getKeyPermission(context: Context, obj: any, key: string): true | false | \"internal\" {\n    const { publicApiInfo } = context;\n    if (isTsNode(obj)) {\n        if (nodeDisallowedKeys.has(key))\n            return false;\n        if (!publicApiInfo)\n            return true;\n        const kindName = getSyntaxKindName(context.api, obj.kind);\n        return hasInProperties(publicApiInfo.nodePropertiesBySyntaxKind.get(kindName));\n    }\n    if (isTsType(obj))\n        return !typeDisallowedKeys.has(key) && hasInProperties(publicApiInfo && publicApiInfo.typeProperties);\n    if (isTsSignature(obj))\n        return hasInProperties(publicApiInfo && publicApiInfo.signatureProperties);\n    if (isTsSymbol(obj))\n        return hasInProperties(publicApiInfo && publicApiInfo.symbolProperties);\n    return true;\n\n    function hasInProperties(publicApiProperties: Set<string> | undefined | false) {\n        if (!publicApiProperties)\n            return true;\n        return publicApiProperties.has(key) ? true : \"internal\";\n    }\n}\n\nfunction isMap(value: any): value is ReadonlyMap<unknown> {\n    return typeof value.keys === \"function\"\n        && typeof value.values === \"function\";\n}\n\nfunction isTsNode(value: any): value is Node {\n    return typeof (value as Node).kind === \"number\";\n}\n\nfunction isTsType(value: any): value is Type {\n    return (value as Type).getBaseTypes != null;\n}\n\nfunction isTsSymbol(value: any): value is Symbol {\n    return (value as Symbol).getDeclarations != null;\n}\n\nfunction isTsSignature(value: any): value is Signature {\n    if (value.declaration == null)\n        return false;\n    return isTsNode(value.declaration);\n}\n\nfunction isFlowNode(value: any): value is FlowNode {\n    // TODO: FlowStart does not have antecedent(s)\n    return value.antecedents != null || value.antecedent != null;\n}\n\nfunction getEnumFlagElement(enumObj: any, value: number) {\n    const names = getEnumFlagNames(enumObj, value);\n    if (names.length === 0)\n        return <>{value}</>;\n\n    return <ToolTippedText text={value.toString()}>{getNames()}</ToolTippedText>;\n\n    function getNames() {\n        return <ul>{names.map((name, i) => (<li key={i}>{name}</li>))}</ul>;\n    }\n}\n","export function getEnumFlagNames(enumObj: any, flags: number) {\n    const allFlags = Object.keys(enumObj)\n        .map(k => enumObj[k]).filter(v => typeof v === \"number\") as number[];\n    const matchedFlags = allFlags.filter(f => (f & flags) !== 0);\n\n    return matchedFlags\n        .filter((f, i) => matchedFlags.indexOf(f) === i)\n        .map(f => enumObj[f]);\n}\n","import { constants, TreeMode } from \"@ts-ast-viewer/shared\";\nimport React, { useLayoutEffect } from \"react\";\nimport TreeView from \"react-treeview\";\nimport { CompilerApi, getChildrenFunction, Node, SourceFile } from \"../compiler\";\nimport { getSyntaxKindName } from \"../utils\";\n\nexport interface TreeViewerProps {\n    api: CompilerApi;\n    sourceFile: SourceFile;\n    selectedNode: Node;\n    onSelectNode: (node: Node) => void;\n    mode: TreeMode;\n}\n\nexport function TreeViewer(props: TreeViewerProps) {\n    const { sourceFile, selectedNode, onSelectNode, mode, api } = props;\n    let i = 0;\n    useLayoutEffect(() => {\n        const selectedDom = document.querySelector(`.${constants.css.treeViewer.selectedNodeClass}`)\n        if (selectedDom) {\n            selectedDom.scrollIntoView({block: 'center', inline: 'center'})\n        }\n    }, [selectedNode])\n    return (\n        <div id={constants.css.treeViewer.id}>{renderNode(sourceFile, getChildrenFunction(mode, sourceFile))}</div>\n    );\n\n    function renderNode(node: Node, getChildren: (node: Node) => (Node[])): JSX.Element {\n        const children = getChildren(node);\n        const className = \"nodeText\" + (node === selectedNode ? \" \" + constants.css.treeViewer.selectedNodeClass : \"\");\n        const kindName = getSyntaxKindName(api, node.kind);\n        const label = (<div onClick={() => onSelectNode(node)} className={className}>{kindName}</div>);\n        if (children.length === 0) {\n            return (\n                <div key={i++} className=\"endNode\" data-name={kindName}>{label}</div>\n            );\n        }\n        else {\n            return (\n                <div data-name={kindName} key={i++}>\n                    <TreeView nodeLabel={label}>\n                        {children.map(n => renderNode(n, getChildren))}\n                    </TreeView>\n                </div>\n            );\n        }\n    }\n}\n","import { constants } from \"@ts-ast-viewer/shared\";\nimport { useAppContext } from \"AppContext\";\nimport SplitPane from \"react-split-pane\";\nimport \"./App.css\";\nimport { getDescendantAtRange, getStartSafe } from \"./compiler\";\nimport * as components from \"./components\";\nimport { ApiLoadingState } from \"./types\";\n\nexport function App() {\n    const { state, dispatch } = useAppContext();\n    const compiler = state.compiler;\n\n    return (\n        <div className=\"App\">\n            <SplitPane split=\"horizontal\" defaultSize={50} allowResize={false}>\n                <header className=\"AppHeader clearfix\">\n                    <h2 id=\"title\">TypeScript AST Viewer</h2>\n                    <components.Options\n                        api={compiler == null ? undefined : compiler.api}\n                        options={state.options}\n                        onChange={options =>\n                            dispatch({\n                                type: \"SET_OPTIONS\",\n                                options,\n                            })}\n                    />\n                </header>\n                <SplitPane split=\"vertical\" minSize={50} defaultSize=\"33%\">\n                    {getCodeEditorArea()}\n                    {getCompilerDependentPanes()}\n                </SplitPane>\n            </SplitPane>\n        </div>\n    );\n\n    function getCodeHighlightRange() {\n        if (compiler == null)\n            return undefined;\n\n        const { selectedNode, sourceFile } = compiler;\n        return selectedNode === sourceFile ? undefined : {\n            start: getStartSafe(selectedNode, sourceFile),\n            end: selectedNode.end,\n        };\n    }\n\n    function getCodeEditorArea() {\n        if (state.options.showFactoryCode) {\n            return (\n                <SplitPane split=\"horizontal\" defaultSize={window.innerHeight * 0.70}>\n                    {getCodeEditor()}\n                    {getFactoryCodeEditor()}\n                </SplitPane>\n            );\n        }\n        else {\n            return getCodeEditor();\n        }\n\n        function getFactoryCodeEditor() {\n            if (compiler == null || state.apiLoadingState === ApiLoadingState.Loading)\n                return <components.Spinner />;\n\n            return (\n                <components.ErrorBoundary getResetHash={() => state.code}>\n                    <components.FactoryCodeEditor compiler={compiler} />\n                </components.ErrorBoundary>\n            );\n        }\n\n        function getCodeEditor() {\n            return (\n                <components.CodeEditor\n                    id={constants.css.mainCodeEditor.id}\n                    onChange={code => dispatch({ type: \"SET_CODE\", code })}\n                    onClick={range => {\n                        if (compiler == null)\n                            return;\n                        const descendant = getDescendantAtRange(\n                            state.options.treeMode,\n                            compiler.sourceFile,\n                            range,\n                            compiler.api,\n                        );\n                        dispatch({ type: \"SET_SELECTED_NODE\", node: descendant });\n                    }}\n                    text={state.code}\n                    highlight={getCodeHighlightRange()}\n                    showInfo={true}\n                    renderWhiteSpace={true}\n                    editorDidMount={codeEditorDidMount}\n                />\n            );\n        }\n    }\n\n    function getCompilerDependentPanes() {\n        if (compiler == null || state.apiLoadingState === ApiLoadingState.Loading)\n            return <components.Spinner />;\n        else if (state.apiLoadingState === ApiLoadingState.Error)\n            return <div className={\"errorMessage\"}>Error loading compiler API. Please refresh the page to try again.</div>;\n\n        return (\n            <components.ErrorBoundary>\n                <SplitPane split=\"vertical\" minSize={50} defaultSize=\"50%\">\n                    <components.TreeViewer\n                        api={compiler.api}\n                        selectedNode={compiler.selectedNode}\n                        sourceFile={compiler.sourceFile}\n                        onSelectNode={node => dispatch({ type: \"SET_SELECTED_NODE\", node })}\n                        mode={state.options.treeMode}\n                    />\n                    <components.PropertiesViewer\n                        compiler={compiler}\n                        selectedNode={compiler.selectedNode}\n                        sourceFile={compiler.sourceFile}\n                        bindingTools={compiler.bindingTools}\n                        bindingEnabled={state.options.bindingEnabled}\n                        showInternals={state.options.showInternals}\n                    />\n                </SplitPane>\n            </components.ErrorBoundary>\n        );\n    }\n\n    function codeEditorDidMount(editor: Parameters<import(\"react-monaco-editor\").EditorDidMount>[0]) {\n        // For some reason a slight delay is necessary here. Otherwise it won't let the user type.\n        setTimeout(() => editor.focus(), 100);\n\n        // global method for cypress\n        (window as any).setMonacoEditorText = (text: string) => {\n            const editorModel = editor.getModel();\n            if (editorModel == null)\n                return;\n\n            editor.executeEdits(\"my-source\", [{\n                range: editorModel.getFullModelRange(),\n                text,\n            }]);\n        };\n    }\n}\n","import { TreeMode } from \"@ts-ast-viewer/shared\";\nimport { CompilerApi, Node, SourceFile } from \"./CompilerApi\";\nimport { getChildrenFunction } from \"./getChildrenFunction\";\nimport { getStartSafe } from \"./getStartSafe\";\n\nexport function getDescendantAtRange(mode: TreeMode, sourceFile: SourceFile, range: [number, number], compilerApi: CompilerApi) {\n    const getChildren = getChildrenFunction(mode, sourceFile);\n    const syntaxKinds = compilerApi.SyntaxKind;\n\n    let bestMatch: { node: Node; start: number } = { node: sourceFile, start: sourceFile.getStart(sourceFile) };\n    searchDescendants(sourceFile);\n    return bestMatch.node;\n\n    function searchDescendants(node: Node) {\n        const children = getChildren(node);\n        for (const child of children) {\n            if (child.kind !== syntaxKinds.SyntaxList) {\n                if (isBeforeRange(child.end))\n                    continue;\n\n                const childStart = getStartSafe(child, sourceFile);\n\n                if (isAfterRange(childStart))\n                    return;\n\n                const isEndOfFileToken = child.kind === syntaxKinds.EndOfFileToken;\n                const hasSameStart = bestMatch.start === childStart && range[0] === childStart;\n                if (!isEndOfFileToken && !hasSameStart)\n                    bestMatch = { node: child, start: childStart };\n            }\n\n            searchDescendants(child);\n        }\n    }\n\n    function isBeforeRange(pos: number) {\n        return pos < range[0];\n    }\n\n    function isAfterRange(nodeEnd: number) {\n        return nodeEnd >= range[0] && nodeEnd > range[1];\n    }\n}\n","import { AppContextProvider } from \"AppContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./external/react-splitpane.css\";\nimport \"./external/react-treeview.css\";\n\nReactDOM.render(\n    <AppContextProvider>\n        <App />\n    </AppContextProvider>,\n    document.getElementById(\"root\") as HTMLElement,\n);\n"],"sourceRoot":""}